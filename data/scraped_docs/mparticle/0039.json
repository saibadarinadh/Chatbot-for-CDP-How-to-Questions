{
  "title": "No Title",
  "content": "## Documentation\n\n## Developers\nData Subject Request API Version 1 and 2\nData Subject Request API Version 3\nPlatform API Overview\nAccounts\nApps\nAudiences\nCalculated Attributes\nData Points\nFeeds\nField Transformations\nServices\nUsers\nWorkspaces\nWarehouse Sync API Overview\nWarehouse Sync API Tutorial\nWarehouse Sync API Reference\nData Mapping\nWarehouse Sync SQL Reference\nWarehouse Sync Troubleshooting Guide\nComposeID\nWarehouse Sync API v2 Migration\nBulk Profile Deletion API Reference\nCalculated Attributes Seeding API\nCustom Access Roles API\nGroup Identity API Reference\nData Planning API\nPixel Service\nProfile API\nEvents API\nmParticle JSON Schema Reference\nIDSync\niOS\nAndroid\nWeb\nOverview\nStep 1. Create an input\nStep 2. Verify your input\nStep 3. Set up your output\nStep 4. Create a connection\nStep 5. Verify your connection\nStep 6. Track events\nStep 7. Track user data\nStep 8. Create a data plan\nStep 9. Test your local app\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nOverview\nStep 1. Create an input\nStep 2. Verify your input\nStep 3. Set up your output\nStep 4. Create a connection\nStep 5. Verify your connection\nStep 6. Track events\nStep 7. Track user data\nStep 8. Create a data plan\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nOverview\nStep 1. Create an input\nStep 2. Verify your input\nStep 3. Set up your output\nStep 4. Create a connection\nStep 5. Verify your connection\nStep 6. Track events\nStep 7. Track user data\nStep 8. Create a data plan\nAMP SDK\nInitialization\nConfiguration\nNetwork Security Configuration\nEvent Tracking\nUser Attributes\nIDSync\nScreen Events\nCommerce Events\nLocation Tracking\nMedia\nKits\nApplication State and Session Management\nData Privacy Controls\nError Tracking\nOpt Out\nPush Notifications\nWebView Integration\nLogger\nPreventing Blocked HTTP Traffic with CNAME\nLinting Data Plans\nTroubleshooting the Android SDK\nAPI Reference\nUpgrade to Version 5\nCordova Plugin\nIdentity\nDirect URL Routing FAQ\nWeb\nAndroid\niOS\nGetting Started\nUsage\nAPI Reference\nInitialization\nConfiguration\nEvent Tracking\nUser Attributes\nIDSync\nScreen Tracking\nCommerce Events\nLocation Tracking\nMedia\nKits\nApplication State and Session Management\nData Privacy Controls\nError Tracking\nOpt Out\nPush Notifications\nWebview Integration\nUpload Frequency\nApp Extensions\nPreventing Blocked HTTP Traffic with CNAME\nLinting Data Plans\nTroubleshooting iOS SDK\nSocial Networks\niOS 14 Guide\niOS 15 FAQ\niOS 16 FAQ\niOS 17 FAQ\niOS 18 FAQ\nAPI Reference\nUpgrade to Version 7\nGetting Started\nIdentity\nGetting Started\nIdentity\nMedia\nUpload Frequency\nGetting Started\nOpt Out\nInitialize the SDK\nEvent Tracking\nCommerce Tracking\nError Tracking\nScreen Tracking\nIdentity\nLocation Tracking\nSession Management\nGetting Started\nIdentity\nInitialization\nConfiguration\nContent Security Policy\nEvent Tracking\nUser Attributes\nIDSync\nPage View Tracking\nCommerce Events\nLocation Tracking\nMedia\nKits\nApplication State and Session Management\nData Privacy Controls\nError Tracking\nOpt Out\nCustom Logger\nPersistence\nNative Web Views\nSelf-Hosting\nMultiple Instances\nWeb SDK via Google Tag Manager\nPreventing Blocked HTTP Traffic with CNAME\nFacebook Instant Articles\nTroubleshooting the Web SDK\nBrowser Compatibility\nLinting Data Plans\nAPI Reference\nUpgrade to Version 2 of the SDK\nGetting Started\nIdentity\nWeb\nAlexa\nLinting Tools\nSmartype\nmParticle Command Line Interface\nNode SDK\nGo SDK\nPython SDK\nRuby SDK\nJava SDK\nIntroduction\nOutbound Integrations\nFirehose Java SDK\nInbound Integrations\nOverview\nAndroid Kit Integration\nJavaScript Kit Integration\niOS Kit Integration\nCompose ID\nData Hosting Locations\nGlossary\nMigrate from Segment to mParticle\nMigrate from Segment to Client-side mParticle\nMigrate from Segment to Server-side mParticle\nSegment-to-mParticle Migration Reference\nRules Developer Guide\nAPI Credential Management\nThe Developer's Guided Journey to mParticle\n\n## Guides\nCreate an Input\nStart capturing data\nConnect an Event Output\nCreate an Audience\nConnect an Audience Output\nTransform and Enhance Your Data\nIntroduction\nProfiles\nAudiences Overview\nCreate an Audience\nConnect an Audience\nManage Audiences\nReal-time Audiences (Legacy)\nStandard Audiences (Legacy)\nCalculated Attributes Overview\nUsing Calculated Attributes\nCreate with AI Assistance\nCalculated Attributes Reference\nPredictive Audiences Overview\nUsing Predictive Audiences\nJourneys Overview\nManage Journeys\nDownload an audience from a journey\nAudience A/B testing from a journey\nJourneys 2.0\nWhat are predictive attributes?\nCreate Future Prediction\nUse Future Predictions in Campaigns\nAssess and Troubleshoot Predictions\nNext Best Action Overview\nCreate a Next Best Action (NBA)\nView and Manage NBAs\nActivate Next Best Actions in Campaigns\nThe new mParticle Experience\nThe Overview Map\nUsage and Billing Report\nObservability Overview\nObservability User Guide\nObservability Troubleshooting Examples\nObservability Span Glossary\nIntroduction\nData Retention\nConnections\nActivity\nLive Stream\nData Filter\nRules\nTiered Events\nmParticle Users and Roles\nAnalytics Free Trial\nTroubleshooting mParticle\nUsage metering for value-based pricing (VBP)\nIntroduction\nSync and Activate Analytics User Segments in mParticle\nUser Segment Activation\nWelcome Page Announcements\nProject Settings\nRoles and Teammates\nOrganization Settings\nGlobal Project Filters\nPortfolio Analytics\nAnalytics Data Manager Overview\nEvents\nEvent Properties\nUser Properties\nRevenue Mapping\nExport Data\nUTM Guide\nData Dictionary\nQuery Builder Overview\nModify Filters With And/Or Clauses\nQuery-time Sampling\nQuery Notes\nFilter Where Clauses\nEvent vs. User Properties\nGroup By Clauses\nAnnotations\nCross-tool Compatibility\nApply All for Filter Where Clauses\nDate Range and Time Settings Overview\nUser Attributes at Event Time\nUnderstanding the Screen View Event\nAnalyses Introduction\nGetting Started\nVisualization Options\nFor Clauses\nDate Range and Time Settings\nCalculator\nNumerical Settings\nAssisted Analysis\nProperties Explorer\nFrequency in Segmentation\nTrends in Segmentation\nDid [not] Perform Clauses\nCumulative vs. Non-Cumulative Analysis in Segmentation\nTotal Count of vs. Users Who Performed\nSave Your Segmentation Analysis\nExport Results in Segmentation\nExplore Users from Segmentation\nGetting Started with Funnels\nGroup By Settings\nConversion Window\nTracking Properties\nDate Range and Time Settings\nVisualization Options\nInterpreting a Funnel Analysis\nGroup By\nFilters\nConversion over Time\nConversion Order\nTrends\nFunnel Direction\nMulti-path Funnels\nAnalyze as Cohort from Funnel\nSave a Funnel Analysis\nExplore Users from a Funnel\nExport Results from a Funnel\nGetting Started with Cohorts\nAnalysis Modes\nSave a Cohort Analysis\nExport Results\nExplore Users\nSaved Analyses\nManage Analyses in Dashboards\nGetting Started\nEvent Menu\nVisualization\nEnding Event\nSave a Journey Analysis\nGetting Started\nUser Activity Timelines\nTime Settings\nExport Results\nSave A User Analysis\nDashboards\u00e2\u0080\u0093\u00e2\u0080\u0093Getting Started\nManage Dashboards\nDashboard Filters\nOrganize Dashboards\nScheduled Reports\nFavorites\nTime and Interval Settings in Dashboards\nQuery Notes in Dashboards\nUser Aliasing\nThe Demo Environment\nKeyboard Shortcuts\nAnalytics for Marketers\nAnalytics for Product Managers\nCompare Conversion Across Acquisition Sources\nAnalyze Product Feature Usage\nIdentify Points of User Friction\nTime-based Subscription Analysis\nDashboard Tips and Tricks\nUnderstand Product Stickiness\nOptimize User Flow with A/B Testing\nUser Segments\nUser Segments Export API\nDashboard Filter API\nIDSync Overview\nUse Cases for IDSync\nComponents of IDSync\nStore and Organize User Data\nIdentify Users\nDefault IDSync Configuration\nProfile Conversion Strategy\nProfile Link Strategy\nProfile Isolation Strategy\nBest Match Strategy\nAliasing\nOverview\nCreate and Manage Group Definitions\nIntroduction\nCatalog\nLive Stream\nData Plans\nBlocked Data Backfill Guide\nWarehouse Sync\nData Privacy Controls\nData Subject Requests\nDefault Service Limits\nFeeds\nCross-Account Audience Sharing\nApproved Sub-Processors\nImport Data with CSV Files\nCSV File Reference\nGlossary\nVideo Index\nSingle Sign-On (SSO)\nSetup Examples\nDebug Console\nData Warehouse Delay Alerting\nIntroduction\nIntroduction\nIntroduction\nRudderstack\nGoogle Tag Manager\nSegment\nAdvanced Data Warehouse Settings\nAWS Kinesis (Snowplow)\nAWS Redshift (Define Your Own Schema)\nAWS S3 Integration (Define Your Own Schema)\nAWS S3 (Snowplow Schema)\nBigQuery (Snowplow Schema)\nBigQuery Firebase Schema\nBigQuery (Define Your Own Schema)\nGCP BigQuery Export\nSnowflake (Snowplow Schema)\nSnowplow Schema Overview\nSnowflake (Define Your Own Schema)\nDashboard Filter API (Deprecated)\nREST API\nUser Segments Export API (Deprecated)\nSDKs Introduction\nReact Native\niOS\nAndroid\nJava\nJavaScript\nPython\nObject API\nAliasing\n\n## Data Subject Request API Version 3\nUse the Data Subject Request API version 3 (v3) to receive and manage data subject requests (DSRs) for GDPR and CCPA compliance, and to forward data subject requests of type erasure. To learn more, seeData Subject Requests Guide.\nThis API is our instance of theOpenDSR framework, formerly known as OpenGDPR.\nSee theDefault Service Limitsfor information about API rate limits.\n\n## Changes in v3\nv3 contains the following changes:\n- Thesubject_identitiesare sent as a dictionary where the keys are identity types which enforces a single identity per identity type.\n\n```\nsubject_identities\n```\n- Additional identities can be provided in the opendsr.mparticle.com extensions.  The MPIDs and identities collections were merged into a singlesubject_identitiesdictionary with the same format as thesubject_identitiesin the request.\n\n```\nsubject_identities\n```\n\n```\nsubject_identities\n```\n- If an identity ofmpidis included in the extensions, no other identities can be provided in the request.\n\n```\nmpid\n```\n- Updated the version field default to 3.0\n- Updated API endpoints for v3 (below)\nThis update enforces identity resolution to map to a singlempid, and enables forwarding of DSR requests of type erasure.\n\n```\nmpid\n```\nYou must upgrade to version 3 in order to forward DSR requests of type erasure.\n\n## Upgrade Guide\nFollow the steps below to upgrade from version 1 or version 2 to version 3.\n- Update to the v3 base URLhttps://opendsr.mparticle.com/v3.\n\n```\nhttps://opendsr.mparticle.com/v3\n```\n- Update theapi_versionto 3.0.\n\n```\napi_version\n```\n- Update the format in thesubject_identitieselement as describedbelow.\n\n```\nsubject_identities\n```\n- Change the format of theopendsr.mparticle.comextensions as describedbelow.\n\n```\nopendsr.mparticle.com\n```\n- If you includempidin theopendsr.mparticle.comextensions, you must not include any other identities.\n\n```\nmpid\n```\n\n```\nopendsr.mparticle.com\n```\n\n## Endpoint\nThe current (v3) mParticle OpenDSR base URL:\n\n```\nhttps://opendsr.mparticle.com/v3\n```\n\n```\nhttps://opendsr.mparticle.com/v3\n```\n\n## Authentication\nThe HTTP APIs are secured via basic authentication. Credentials are issued at the level of an mParticle Workspace. You can obtain credentials for your Workspace from the Workspace Settings screen. Note that this authentication is for a single workspace and scopes the DSR to this workspace only.\nTo workspace view credentials:\n- Click on the current workspace name in the upper left corner.\n- ClickSettings.\n- Click on the name of a workspace to display the Edit Workspace settings page.\nYou can authenticate in two ways:\n- Many HTTP clients support basic authentication. Use your API key for the username and your API secret for the password.\n- Manually set theauthenticationheader by encoding your key and secret together:Concatenate your application key and secret together with a colon (:) separating the two:example-api-key:example-api-secret2 Base64 with UTF-8 encode the result:ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==3 Prefix the encoded string with the authorization method,including a space:Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==4 Set resulting string as theAuthorizationheader in your HTTP requests:Authorization: Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==\nManually set theauthenticationheader by encoding your key and secret together:\n\n```\nauthentication\n```\n- Concatenate your application key and secret together with a colon (:) separating the two:example-api-key:example-api-secret\n\n```\nexample-api-key:example-api-secret\n```\n2 Base64 with UTF-8 encode the result:ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==\n\n```\nZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==\n```\n3 Prefix the encoded string with the authorization method,including a space:Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==\n\n```\nBasic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==\n```\n4 Set resulting string as theAuthorizationheader in your HTTP requests:Authorization: Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==\n\n```\nAuthorization\n```\n\n```\nAuthorization: Basic ZXhhbXBsZS1hcGkta2V5OmV4YW1wbGUtYXBpLXNlY3JldA==\n```\n\n## Resources\nThe primary resource is therequestobject:\n\n```\nrequest\n```\n\n```\nrequest\n```\n\n```\n/requests\n```\n\n```\ndiscovery\n```\n\n```\n/discovery\n```\n\n## Submit a Data Subject Request (DSR)\nA request in the OpenDSR format communicates a Data Subject\u00e2\u0080\u0099s wish to access or erase their data. The OpenDSR Request takes a JSON request body and requires aContent-Type: application/jsonheader:\n\n```\nContent-Type: application/json\n```\n\n```\nPOST https://opendsr.mparticle.com/v3/requests/Content-Type:application/jsonAuthorization:Basic <your-token-here>{\"regulation\":\"gdpr\",\"subject_request_id\":\"a7551968-d5d6-44b2-9831-815ac9017798\",\"subject_request_type\":\"erasure\",\"submitted_time\":\"2021-11-01T15:00:00Z\",\"subject_identities\":{\"email\":{\"value\":\"johndoe@example.com\",\"encoding\":\"raw\"},\"ios_advertising_id\":{\"value\":\"EA7583CD-A667-48BC-B806-42ECB2B48606\",\"encoding\":\"raw\"}},\"api_version\":\"3.0\",\"status_callback_urls\":[\"https://exampleurl.com/opendsr/callbacks\"],\"group_id\":\"my-group\",\"extensions\":{\"opendsr.mparticle.com\":{\"skip_waiting_period\":false,\"subject_identities\":{\"other6\":{\"value\":\"EA7583CD-A667-48BC-B806-42ECB2B48606\",\"encoding\":\"raw\"}}}}}\n```\n\n```\nPOST https://opendsr.mparticle.com/v3/requests/Content-Type:application/jsonAuthorization:Basic <your-token-here>{\"regulation\":\"gdpr\",\"subject_request_id\":\"a7551968-d5d6-44b2-9831-815ac9017798\",\"subject_request_type\":\"erasure\",\"submitted_time\":\"2021-11-01T15:00:00Z\",\"subject_identities\":{\"email\":{\"value\":\"johndoe@example.com\",\"encoding\":\"raw\"},\"ios_advertising_id\":{\"value\":\"EA7583CD-A667-48BC-B806-42ECB2B48606\",\"encoding\":\"raw\"}},\"api_version\":\"3.0\",\"status_callback_urls\":[\"https://exampleurl.com/opendsr/callbacks\"],\"group_id\":\"my-group\",\"extensions\":{\"opendsr.mparticle.com\":{\"skip_waiting_period\":false,\"subject_identities\":{\"other6\":{\"value\":\"EA7583CD-A667-48BC-B806-42ECB2B48606\",\"encoding\":\"raw\"}}}}}\n```\n\n```\nregulation\n```\n\n```\ngdpr\n```\n\n```\nccpa\n```\n\n```\nsubject_request_id\n```\n\n```\nsubject_request_type\n```\n\n```\naccess\n```\n\n```\nportability\n```\n\n```\nerasure\n```\n\n```\nsubmitted_time\n```\n\n```\nskip_waiting_period\n```\n\n```\ntrue\n```\n\n```\nfalse\n```\n\n```\nfalse\n```\n\n```\nsubject_identities\n```\n\n```\nextensions\n```\n\n```\napi_version\n```\n\n```\n3.0\n```\n\n```\nstatus_callback_urls\n```\n\n```\ngroup_id\n```\n\n```\ngroup_id\n```\n\n```\ngroup_id\n```\n\n```\nextensions\n```\n\n```\nopendsr.mparticle.com\n```\n\n## Thesubject_identitiesObject\n\n```\nsubject_identities\n```\nThesubject_identitiesare sent as a dictionary where the keys are identity types, and the value fields arevalueandencoding. You can specify up to 50 identities in a single request. The number of identities in a request is also limited by the number of different unique identity types.\n\n```\nsubject_identities\n```\n\n```\nvalue\n```\n\n```\nencoding\n```\n\n```\n\"identity_type\": {\n      \"value\": \"some value\",\n      \"encoding\": \"raw\"\n }\n```\n\n```\n\"identity_type\": {\n      \"value\": \"some value\",\n      \"encoding\": \"raw\"\n }\n```\n\n```\nidentity_type\n```\n\n```\nvalue\n```\n\n```\nencoding\n```\n\n```\nraw\n```\n\n## Supported Identity Types\nData subject requests using the OpenDSR format may include an object calledsubject_identities. If you use this object, you must specify:\n\n```\nsubject_identities\n```\n- identity_type: A string representing the type of identifier used (such asemailorandroid_advertising_id)\n\n```\nidentity_type\n```\n\n```\nemail\n```\n\n```\nandroid_advertising_id\n```\n- value: A string representing the value of the identifier (such asexample@example.com)\n\n```\nvalue\n```\n\n```\nexample@example.com\n```\n- encoding: a string representing how the identifier is encoded\n\n```\nencoding\n```\n\n```\nraw\n```\n\n```\nsha1\n```\n\n```\nmd5\n```\n\n```\nsha256\n```\n\n```\nidentity_format\n```\n\n```\nraw\n```\nWhen setting theidentity_typein thesubject_identitiesobject of an OpenDSR request, make sure to use values from the column labeledSupported OpenDSR Formatin the table below. The column labeledmParticle Identity Typeindicates the corresponding types used in mParticle.\n\n```\nidentity_type\n```\n\n```\nsubject_identities\n```\n\n```\ncontroller_customer_id\n```\n\n```\ncustomer_id\n```\n\n```\nemail\n```\n\n```\nemail\n```\n\n```\nandroid_advertising_id\n```\n\n```\nandroid_advertising_id\n```\n\n```\nandroid_id\n```\n\n```\nandroid_uuid\n```\n\n```\nfire_advertising_id\n```\n\n```\nfire_advertising_id\n```\n\n```\nios_advertising_id\n```\n\n```\nios_advertising_id\n```\n\n```\nios_vendor_id\n```\n\n```\nios_idfv\n```\n\n```\nmicrosoft_advertising_id\n```\n\n```\nmicrosoft_advertising_id\n```\n\n```\nmicrosoft_publisher_id\n```\n\n```\nmicrosoft_publisher_id\n```\n\n```\nroku_advertising_id\n```\n\n```\nroku_advertising_id\n```\n\n```\nroku_publishing_id\n```\n\n```\nroku_publishing_id\n```\nThe identities supported in thesubject_identitieselement in theopendsr.mparticle.comextension are:\n\n```\nsubject_identities\n```\n\n```\nopendsr.mparticle.com\n```\n- mpid\n\n```\nmpid\n```\n- other\n\n```\nother\n```\n- other2\n\n```\nother2\n```\n- other3\n\n```\nother3\n```\n- other4\n\n```\nother4\n```\n- other5\n\n```\nother5\n```\n- other6\n\n```\nother6\n```\n- other7\n\n```\nother7\n```\n- other8\n\n```\nother8\n```\n- other9\n\n```\nother9\n```\n- other10\n\n```\nother10\n```\n- mobile_number\n\n```\nmobile_number\n```\n- phone_number_2\n\n```\nphone_number_2\n```\n- phone_number_3\n\n```\nphone_number_3\n```\n\n## Example Success Response Body\n\n```\nHTTP/1.1201 CreatedContent Type: application/jsonX-OpenDSR-Processor-Domain:opendsr.mparticle.com\nX-OpenDSR-Signature:\n[signature block]\n{\n    \"expected_completion_time\":\"2021-12-09T00:00:00Z\",\n    \"received_time\":\"2021-11-29T18:16:24.5568051Z\",\n    \"encoded_request\":\"<BASE64 ENCODED REQUEST>\",\n    \"subject_request_id\":\"a7551968-d5d6-44b2-9831-815ac9017798\",\n    \"controller_id\": \"3622\"\n}\n```\n\n```\nHTTP/1.1201 CreatedContent Type: application/jsonX-OpenDSR-Processor-Domain:opendsr.mparticle.com\nX-OpenDSR-Signature:\n[signature block]\n{\n    \"expected_completion_time\":\"2021-12-09T00:00:00Z\",\n    \"received_time\":\"2021-11-29T18:16:24.5568051Z\",\n    \"encoded_request\":\"<BASE64 ENCODED REQUEST>\",\n    \"subject_request_id\":\"a7551968-d5d6-44b2-9831-815ac9017798\",\n    \"controller_id\": \"3622\"\n}\n```\n\n## Get the status of an OpenDSR request\nGET /requests/{RequestID}\n\n```\nGET /requests/{RequestID}\n```\n\n## Example Response Body\n\n```\n{\n    \"controller_id\": \"3622\",\n    \"expected_completion_time\": \"2021-12-09T00:00:00Z\",\n    \"subject_request_id\": \"a7551968-d5d6-44b2-9831-815ac9017798\",\n    \"group_id\": null,\n    \"request_status\": \"pending\",\n    \"api_version\": \"3.0\",\n    \"results_url\": null,\n    \"extensions\": null    \n}\n```\n\n```\n{\n    \"controller_id\": \"3622\",\n    \"expected_completion_time\": \"2021-12-09T00:00:00Z\",\n    \"subject_request_id\": \"a7551968-d5d6-44b2-9831-815ac9017798\",\n    \"group_id\": null,\n    \"request_status\": \"pending\",\n    \"api_version\": \"3.0\",\n    \"results_url\": null,\n    \"extensions\": null    \n}\n```\n\n```\ncontroller_id\n```\n\n```\nexpected_completion_time\n```\n\n```\nsubject_request_id\n```\n\n```\ngroup_id\n```\n\n```\ngroup_id\n```\n\n```\ngroup_id\n```\n\n```\nrequest_status\n```\n\n```\npending\n```\n\n```\nin_progress\n```\n\n```\ncompleted\n```\n\n```\ncancelled\n```\n\n```\napi_version\n```\n\n```\n3.0\n```\n\n```\nresults_url\n```\n\n```\nnull\n```\n\n```\nresults_url\n```\n\n```\n410 Gone\n```\n\n```\n404\n```\n\n```\nextensions\n```\n\n## Extensions\nTheextensionselement is a collection of information on the current state of sending the forwarding request per partner.  The fields are:\n\n```\nextensions\n```\n\n```\ndomain\n```\n\n```\nname\n```\n\n```\nstatus\n```\n\n```\nstatus_message\n```\n\n```\nskipped\n```\n\n```\nfailed\n```\nThestatusfield returns the current status of the forwarding request to the partner:\n\n```\nstatus\n```\n\n```\npending\n```\n\n```\nskipped\n```\n\n```\nsent\n```\n\n```\nfailed\n```\n\n## Get the status of all OpenDSR requests in a Group\nGET /requests?group_id={my-group}\n\n```\nGET /requests?group_id={my-group}\n```\n\n## Example Response Body\nThe response is a collection of DSR subject requests that match thegroup_id.\n\n```\ngroup_id\n```\n\n```\n[\n  {\n    \"controller_id\": \"3622\",\n    \"expected_completion_time\": \"2021-09-07T10:00:00.322652Z\",\n    \"subject_request_id\": \"a7551968-d5d6-44b2-9831-815ac9017798\",\n    \"group_id\": \"my-group\",\n    \"request_status\": \"pending\",\n    \"api_version\": \"3.0\",\n    \"results_url\": null,\n    \"extensions\": null\n  },\n  {\n    \"controller_id\": \"3622\",\n    \"expected_completion_time\": \"2021-09-06T10:15:00.259842Z\",\n    \"subject_request_id\": \"cab0a1fc-cfcd-475a-a2a5-e93eb060332f\",\n    \"group_id\": \"my-group\",\n    \"request_status\": \"pending\",\n    \"api_version\": \"3.0\",\n    \"results_url\": null,\n    \"extensions\": null\n  }\n]\n```\n\n```\n[\n  {\n    \"controller_id\": \"3622\",\n    \"expected_completion_time\": \"2021-09-07T10:00:00.322652Z\",\n    \"subject_request_id\": \"a7551968-d5d6-44b2-9831-815ac9017798\",\n    \"group_id\": \"my-group\",\n    \"request_status\": \"pending\",\n    \"api_version\": \"3.0\",\n    \"results_url\": null,\n    \"extensions\": null\n  },\n  {\n    \"controller_id\": \"3622\",\n    \"expected_completion_time\": \"2021-09-06T10:15:00.259842Z\",\n    \"subject_request_id\": \"cab0a1fc-cfcd-475a-a2a5-e93eb060332f\",\n    \"group_id\": \"my-group\",\n    \"request_status\": \"pending\",\n    \"api_version\": \"3.0\",\n    \"results_url\": null,\n    \"extensions\": null\n  }\n]\n```\n\n## Cancel a Request\nDELETE /requests/{RequestID}\n\n```\nDELETE /requests/{RequestID}\n```\nCancels a request. This can only be done if the status of the request ispending.  The request is canceled in mParticle, but does not cancel theerasurerequests to any enabled output.\n\n```\npending\n```\n\n```\nerasure\n```\n\n## Example Response Body\n\n```\n{\n    \"expected_completion_time\": null,\n    \"received_time\": \"2018-05-16T17:35:58.3631375Z\",\n    \"subject_request_id\": \"a7551968-d5d6-44b2-9831-815ac9017798\",\n    \"controller_id\": \"3622\"\n}\n```\n\n```\n{\n    \"expected_completion_time\": null,\n    \"received_time\": \"2018-05-16T17:35:58.3631375Z\",\n    \"subject_request_id\": \"a7551968-d5d6-44b2-9831-815ac9017798\",\n    \"controller_id\": \"3622\"\n}\n```\n\n```\nexpected_completion_time\n```\n\n```\nnull\n```\n\n```\nreceived_time\n```\n\n```\nsubject_request_id\n```\n\n```\ncontroller_id\n```\n\n## Discovery\nGET /discovery/\n\n```\nGET /discovery/\n```\nThe discovery endpoint allows you to programmatically check the request types and identity types supported by an OpenDSR provider.\n\n## Example Response Body\n\n```\n{\n    \"api_version\": \"3.0\",\n    \"supported_identities\": [\n        {\n            \"identity_type\": \"android_advertising_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"android_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"controller_customer_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"email\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"fire_advertising_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"ios_advertising_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"ios_vendor_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"microsoft_advertising_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"microsoft_publisher_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"roku_advertising_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"roku_publisher_id\",\n            \"identity_format\": \"raw\"\n        }\n    ],\n    \"supported_subject_request_types\": [\n        \"access\",\n        \"erasure\",\n        \"portability\"\n    ],\n    \"processor_certificate\": \"https://static.mparticle.com/dsr/opendsr_cert.pem\"\n}\n```\n\n```\n{\n    \"api_version\": \"3.0\",\n    \"supported_identities\": [\n        {\n            \"identity_type\": \"android_advertising_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"android_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"controller_customer_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"email\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"fire_advertising_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"ios_advertising_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"ios_vendor_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"microsoft_advertising_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"microsoft_publisher_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"roku_advertising_id\",\n            \"identity_format\": \"raw\"\n        },\n        {\n            \"identity_type\": \"roku_publisher_id\",\n            \"identity_format\": \"raw\"\n        }\n    ],\n    \"supported_subject_request_types\": [\n        \"access\",\n        \"erasure\",\n        \"portability\"\n    ],\n    \"processor_certificate\": \"https://static.mparticle.com/dsr/opendsr_cert.pem\"\n}\n```\n\n## Callbacks\nWhen a request changes status, including when a request is first created, mParticle sends a callback POST to all URLs specified in thestatus_callback_urlsarray of the request. Callbacks are queued and sent every 15 minutes.\n\n```\nstatus_callback_urls\n```\nCallback requests are signed and issued over TLS. You must validate the authenticity of the request before parsing the request body.\n\n## Validating a Callback Request\n- Establish a whitelist of all processor domains that you will allow to issue callbacks.\n- If theX-OpenDSR-Processor-Domainheader value is in your whitelist, fetch the certificate. The certificate URL is available as the value of\"processor_certificate\"in the/discoveryresponse body. The certificate can be cached for the lifetime of the certificate.\n\n```\nX-OpenDSR-Processor-Domain\n```\n\n```\n\"processor_certificate\"\n```\n\n```\n/discovery\n```\n- Validate the certificate. This should be handled by a library. Certificate validation should confirm that:The certificate was issued by a trusted authority.The certificate was issued to the exact string given in theX-OpenDSR-Processor-Domainheader value.The certificate has not expired.\nValidate the certificate. This should be handled by a library. Certificate validation should confirm that:\n- The certificate was issued by a trusted authority.\n- The certificate was issued to the exact string given in theX-OpenDSR-Processor-Domainheader value.\n\n```\nX-OpenDSR-Processor-Domain\n```\n- The certificate has not expired.\n- If the certificate is valid, use it to validate theX-OpenDSR-Signatureheader against the raw request body. mParticle uses SHA256 RSA as a signing algorithm.\n\n```\nX-OpenDSR-Signature\n```\n- Return a response with a202 Acceptedstatus header if all validations are successful. Return a response with a401 Unauthorizedstatus header if the signature fails to validate or the processor domain is not in your whitelist.\n\n```\n202 Accepted\n```\n\n```\n401 Unauthorized\n```\n\n## Example Callback Request\n\n```\nPOST/opendsr/callbacks HTTP/1.1Host:opendsr.mparticle.com\nContent Type: application/jsonX-OpenDSR-Processor-Domain:opendsr.mparticle.com\nX-OpenDSR-Signature:\n[signature block]\n{\n    \"controller_id\":\"4308\",\n    \"expected_completion_time\":\"2018-05-31T16:27:28.679094Z\",\n    \"subject_request_id\":\"372fcd8b-d723-452e-ac60-36bd17372321\",\n    \"request_status\":\"pending\",\n    \"api_version\":\"3.0\",\n    \"results_url\":null,\n    \"extensions\": null\n}\n```\n\n```\nPOST/opendsr/callbacks HTTP/1.1Host:opendsr.mparticle.com\nContent Type: application/jsonX-OpenDSR-Processor-Domain:opendsr.mparticle.com\nX-OpenDSR-Signature:\n[signature block]\n{\n    \"controller_id\":\"4308\",\n    \"expected_completion_time\":\"2018-05-31T16:27:28.679094Z\",\n    \"subject_request_id\":\"372fcd8b-d723-452e-ac60-36bd17372321\",\n    \"request_status\":\"pending\",\n    \"api_version\":\"3.0\",\n    \"results_url\":null,\n    \"extensions\": null\n}\n```\n\n## Errors\nThe following errors may be returned by the API.\n\n```\n{\n    \"code\": 400,\n    \"message\": \"Subject request already exists.\",\n    \"errors\": [\n        {\n            \"domain\": \"Validation\",\n            \"reason\": \"InvalidOperationException\",\n            \"message\": \"Subject request already exists.\"\n        }\n    ]\n}\n```\n\n```\n{\n    \"code\": 400,\n    \"message\": \"Subject request already exists.\",\n    \"errors\": [\n        {\n            \"domain\": \"Validation\",\n            \"reason\": \"InvalidOperationException\",\n            \"message\": \"Subject request already exists.\"\n        }\n    ]\n}\n```\n\n```\nsubject_request_id\n```\n\n```\nRetry-After\n```\nWas this page helpful?",
  "url": "https://docs.mparticle.com/developers/apis/dsr-api/v3/"
}