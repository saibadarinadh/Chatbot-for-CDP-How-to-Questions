{
  "title": "No Title",
  "content": "## Documentation\n\n## Developers\nData Subject Request API Version 1 and 2\nData Subject Request API Version 3\nPlatform API Overview\nAccounts\nApps\nAudiences\nCalculated Attributes\nData Points\nFeeds\nField Transformations\nServices\nUsers\nWorkspaces\nWarehouse Sync API Overview\nWarehouse Sync API Tutorial\nWarehouse Sync API Reference\nData Mapping\nWarehouse Sync SQL Reference\nWarehouse Sync Troubleshooting Guide\nComposeID\nWarehouse Sync API v2 Migration\nBulk Profile Deletion API Reference\nCalculated Attributes Seeding API\nCustom Access Roles API\nGroup Identity API Reference\nData Planning API\nPixel Service\nProfile API\nEvents API\nmParticle JSON Schema Reference\nIDSync\niOS\nAndroid\nWeb\nOverview\nStep 1. Create an input\nStep 2. Verify your input\nStep 3. Set up your output\nStep 4. Create a connection\nStep 5. Verify your connection\nStep 6. Track events\nStep 7. Track user data\nStep 8. Create a data plan\nStep 9. Test your local app\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nOverview\nStep 1. Create an input\nStep 2. Verify your input\nStep 3. Set up your output\nStep 4. Create a connection\nStep 5. Verify your connection\nStep 6. Track events\nStep 7. Track user data\nStep 8. Create a data plan\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nOverview\nStep 1. Create an input\nStep 2. Verify your input\nStep 3. Set up your output\nStep 4. Create a connection\nStep 5. Verify your connection\nStep 6. Track events\nStep 7. Track user data\nStep 8. Create a data plan\nAMP SDK\nInitialization\nConfiguration\nNetwork Security Configuration\nEvent Tracking\nUser Attributes\nIDSync\nScreen Events\nCommerce Events\nLocation Tracking\nMedia\nKits\nApplication State and Session Management\nData Privacy Controls\nError Tracking\nOpt Out\nPush Notifications\nWebView Integration\nLogger\nPreventing Blocked HTTP Traffic with CNAME\nLinting Data Plans\nTroubleshooting the Android SDK\nAPI Reference\nUpgrade to Version 5\nCordova Plugin\nIdentity\nDirect URL Routing FAQ\nWeb\nAndroid\niOS\nGetting Started\nUsage\nAPI Reference\nInitialization\nConfiguration\nEvent Tracking\nUser Attributes\nIDSync\nScreen Tracking\nCommerce Events\nLocation Tracking\nMedia\nKits\nApplication State and Session Management\nData Privacy Controls\nError Tracking\nOpt Out\nPush Notifications\nWebview Integration\nUpload Frequency\nApp Extensions\nPreventing Blocked HTTP Traffic with CNAME\nLinting Data Plans\nTroubleshooting iOS SDK\nSocial Networks\niOS 14 Guide\niOS 15 FAQ\niOS 16 FAQ\niOS 17 FAQ\niOS 18 FAQ\nAPI Reference\nUpgrade to Version 7\nGetting Started\nIdentity\nGetting Started\nIdentity\nMedia\nUpload Frequency\nGetting Started\nOpt Out\nInitialize the SDK\nEvent Tracking\nCommerce Tracking\nError Tracking\nScreen Tracking\nIdentity\nLocation Tracking\nSession Management\nGetting Started\nIdentity\nInitialization\nConfiguration\nContent Security Policy\nEvent Tracking\nUser Attributes\nIDSync\nPage View Tracking\nCommerce Events\nLocation Tracking\nMedia\nKits\nApplication State and Session Management\nData Privacy Controls\nError Tracking\nOpt Out\nCustom Logger\nPersistence\nNative Web Views\nSelf-Hosting\nMultiple Instances\nWeb SDK via Google Tag Manager\nPreventing Blocked HTTP Traffic with CNAME\nFacebook Instant Articles\nTroubleshooting the Web SDK\nBrowser Compatibility\nLinting Data Plans\nAPI Reference\nUpgrade to Version 2 of the SDK\nGetting Started\nIdentity\nWeb\nAlexa\nLinting Tools\nSmartype\nmParticle Command Line Interface\nNode SDK\nGo SDK\nPython SDK\nRuby SDK\nJava SDK\nIntroduction\nOutbound Integrations\nFirehose Java SDK\nInbound Integrations\nOverview\nAndroid Kit Integration\nJavaScript Kit Integration\niOS Kit Integration\nCompose ID\nData Hosting Locations\nGlossary\nMigrate from Segment to mParticle\nMigrate from Segment to Client-side mParticle\nMigrate from Segment to Server-side mParticle\nSegment-to-mParticle Migration Reference\nRules Developer Guide\nAPI Credential Management\nThe Developer's Guided Journey to mParticle\n\n## Guides\nCreate an Input\nStart capturing data\nConnect an Event Output\nCreate an Audience\nConnect an Audience Output\nTransform and Enhance Your Data\nIntroduction\nProfiles\nAudiences Overview\nCreate an Audience\nConnect an Audience\nManage Audiences\nReal-time Audiences (Legacy)\nStandard Audiences (Legacy)\nCalculated Attributes Overview\nUsing Calculated Attributes\nCreate with AI Assistance\nCalculated Attributes Reference\nPredictive Audiences Overview\nUsing Predictive Audiences\nJourneys Overview\nManage Journeys\nDownload an audience from a journey\nAudience A/B testing from a journey\nJourneys 2.0\nWhat are predictive attributes?\nCreate Future Prediction\nUse Future Predictions in Campaigns\nAssess and Troubleshoot Predictions\nNext Best Action Overview\nCreate a Next Best Action (NBA)\nView and Manage NBAs\nActivate Next Best Actions in Campaigns\nThe new mParticle Experience\nThe Overview Map\nUsage and Billing Report\nObservability Overview\nObservability User Guide\nObservability Troubleshooting Examples\nObservability Span Glossary\nIntroduction\nData Retention\nConnections\nActivity\nLive Stream\nData Filter\nRules\nTiered Events\nmParticle Users and Roles\nAnalytics Free Trial\nTroubleshooting mParticle\nUsage metering for value-based pricing (VBP)\nIntroduction\nSync and Activate Analytics User Segments in mParticle\nUser Segment Activation\nWelcome Page Announcements\nProject Settings\nRoles and Teammates\nOrganization Settings\nGlobal Project Filters\nPortfolio Analytics\nAnalytics Data Manager Overview\nEvents\nEvent Properties\nUser Properties\nRevenue Mapping\nExport Data\nUTM Guide\nData Dictionary\nQuery Builder Overview\nModify Filters With And/Or Clauses\nQuery-time Sampling\nQuery Notes\nFilter Where Clauses\nEvent vs. User Properties\nGroup By Clauses\nAnnotations\nCross-tool Compatibility\nApply All for Filter Where Clauses\nDate Range and Time Settings Overview\nUser Attributes at Event Time\nUnderstanding the Screen View Event\nAnalyses Introduction\nGetting Started\nVisualization Options\nFor Clauses\nDate Range and Time Settings\nCalculator\nNumerical Settings\nAssisted Analysis\nProperties Explorer\nFrequency in Segmentation\nTrends in Segmentation\nDid [not] Perform Clauses\nCumulative vs. Non-Cumulative Analysis in Segmentation\nTotal Count of vs. Users Who Performed\nSave Your Segmentation Analysis\nExport Results in Segmentation\nExplore Users from Segmentation\nGetting Started with Funnels\nGroup By Settings\nConversion Window\nTracking Properties\nDate Range and Time Settings\nVisualization Options\nInterpreting a Funnel Analysis\nGroup By\nFilters\nConversion over Time\nConversion Order\nTrends\nFunnel Direction\nMulti-path Funnels\nAnalyze as Cohort from Funnel\nSave a Funnel Analysis\nExplore Users from a Funnel\nExport Results from a Funnel\nGetting Started with Cohorts\nAnalysis Modes\nSave a Cohort Analysis\nExport Results\nExplore Users\nSaved Analyses\nManage Analyses in Dashboards\nGetting Started\nEvent Menu\nVisualization\nEnding Event\nSave a Journey Analysis\nGetting Started\nUser Activity Timelines\nTime Settings\nExport Results\nSave A User Analysis\nDashboards\u00e2\u0080\u0093\u00e2\u0080\u0093Getting Started\nManage Dashboards\nDashboard Filters\nOrganize Dashboards\nScheduled Reports\nFavorites\nTime and Interval Settings in Dashboards\nQuery Notes in Dashboards\nUser Aliasing\nThe Demo Environment\nKeyboard Shortcuts\nAnalytics for Marketers\nAnalytics for Product Managers\nCompare Conversion Across Acquisition Sources\nAnalyze Product Feature Usage\nIdentify Points of User Friction\nTime-based Subscription Analysis\nDashboard Tips and Tricks\nUnderstand Product Stickiness\nOptimize User Flow with A/B Testing\nUser Segments\nUser Segments Export API\nDashboard Filter API\nIDSync Overview\nUse Cases for IDSync\nComponents of IDSync\nStore and Organize User Data\nIdentify Users\nDefault IDSync Configuration\nProfile Conversion Strategy\nProfile Link Strategy\nProfile Isolation Strategy\nBest Match Strategy\nAliasing\nOverview\nCreate and Manage Group Definitions\nIntroduction\nCatalog\nLive Stream\nData Plans\nBlocked Data Backfill Guide\nWarehouse Sync\nData Privacy Controls\nData Subject Requests\nDefault Service Limits\nFeeds\nCross-Account Audience Sharing\nApproved Sub-Processors\nImport Data with CSV Files\nCSV File Reference\nGlossary\nVideo Index\nSingle Sign-On (SSO)\nSetup Examples\nDebug Console\nData Warehouse Delay Alerting\nIntroduction\nIntroduction\nIntroduction\nRudderstack\nGoogle Tag Manager\nSegment\nAdvanced Data Warehouse Settings\nAWS Kinesis (Snowplow)\nAWS Redshift (Define Your Own Schema)\nAWS S3 Integration (Define Your Own Schema)\nAWS S3 (Snowplow Schema)\nBigQuery (Snowplow Schema)\nBigQuery Firebase Schema\nBigQuery (Define Your Own Schema)\nGCP BigQuery Export\nSnowflake (Snowplow Schema)\nSnowplow Schema Overview\nSnowflake (Define Your Own Schema)\nDashboard Filter API (Deprecated)\nREST API\nUser Segments Export API (Deprecated)\nSDKs Introduction\nReact Native\niOS\nAndroid\nJava\nJavaScript\nPython\nObject API\nAliasing\n\n## Platform API Overview\nThe mParticle platform API allows you to RESTfully create and update a number of entities as well as configure services to forward data to.\n\n## Platform API resource groups\nFor a complete API reference for each set of Platform API resources, see the following:\n- Accounts\n- AppsIncludes app platforms and app services\nApps\n- Includes app platforms and app services\n- Audiences\n- Calculated attributes\n- Data points\n- Feeds\n- Field transformations\n- Services\n- Users\n- Workspaces\nThe rest of this page provides general usage guidelines applicable to all resources contained in the Platform API.\n\n## General Platform API usage\n\n## Base URL\nThe Platform API is located athttps://api.mparticle.com.\n\n```\nhttps://api.mparticle.com\n```\n\n## Prerequisites to accessing the API\nTo authenticate to the Platform API, use theAPI Credentials interfaceto create a Client ID and Secret, then use these credentials to fetch an OAuth access token.\n\n## Authentication\nOnce your API user is set up, you can authenticate by issuing a POST request to mParticle\u00e2\u0080\u0099s SSO token endpoint.\nhttps://sso.auth.mparticle.com/oauth/token\n\n```\nhttps://sso.auth.mparticle.com/oauth/token\n```\nThe JSON body of the request must contain:\n- client_id- your Client ID, issued by mParticle\n\n```\nclient_id\n```\n- client_secret- your Client Secret, issued by mParticle\n\n```\nclient_secret\n```\n- audience- set to a value of\"https://api.mparticle.com\"\n\n```\naudience\n```\n\n```\n\"https://api.mparticle.com\"\n```\n- grant_type- set to a value of\"client_credentials\"\n\n```\ngrant_type\n```\n\n```\n\"client_credentials\"\n```\nCurl Syntax\n\n```\ncurl--request POST\\--url https://sso.auth.mparticle.com/oauth/token\\--header'content-type: application/json'\\--data'{\"client_id\":\"...\",\"client_secret\":\"...\",\"audience\":\"https://api.mparticle.com\",\"grant_type\":\"client_credentials\"}'\n```\n\n```\ncurl--request POST\\--url https://sso.auth.mparticle.com/oauth/token\\--header'content-type: application/json'\\--data'{\"client_id\":\"...\",\"client_secret\":\"...\",\"audience\":\"https://api.mparticle.com\",\"grant_type\":\"client_credentials\"}'\n```\nSample Raw HTTP Request\n\n```\nPOST/oauth/token HTTP/1.1Host:sso.auth.mparticle.comContent-Type:application/json{\"client_id\":\"your_client_id\",\"client_secret\":\"your_client_secret\",\"audience\":\"https://api.mparticle.com\",\"grant_type\":\"client_credentials\"}\n```\n\n```\nPOST/oauth/token HTTP/1.1Host:sso.auth.mparticle.comContent-Type:application/json{\"client_id\":\"your_client_id\",\"client_secret\":\"your_client_secret\",\"audience\":\"https://api.mparticle.com\",\"grant_type\":\"client_credentials\"}\n```\n\n## Using your Bearer Token\nA successful POST request to the token endpoint will result in a JSON response as follows:\n\n```\n{\"access_token\":\"YWIxMjdi883GHBBDnjsdKAJQxNjdjYUUJABbg6hdI.8V6HhxW-\",\"expires_in\":28800,\"token_type\":\"Bearer\"}\n```\n\n```\n{\"access_token\":\"YWIxMjdi883GHBBDnjsdKAJQxNjdjYUUJABbg6hdI.8V6HhxW-\",\"expires_in\":28800,\"token_type\":\"Bearer\"}\n```\nSubsequent requests to the API can now be authorized by setting the Authorization header as follows:\nAuthorization: Bearer YWIxMjdi883GHBBDnjsdKAJQxNjdjYUUJABbg6hdI.8V6HhxW-\n\n```\nAuthorization: Bearer YWIxMjdi883GHBBDnjsdKAJQxNjdjYUUJABbg6hdI.8V6HhxW-\n```\n\n## Versioning\nOnce you have authenticated, the API resources can be accessed athttps://api.mparticle.com/v1/.\nSubsequent updates to the API that introduce breaking changes will be published with a new version number in the URL.\n\n```\nhttps://api.mparticle.com/v1/\n```\n\n## Specifying your Account ID\nUnless otherwise stated in the documentation for the specific resource group you are using, all API calls require you to pass in yourAccountIdas a querystring parameter. Forgetting to add the AccountId parameter when required will result in a 401 Unauthorized response.\nAll subsequent entities that you work with will be within the scope of the chosen account ID. Attempting to access or modify entities outside the specified Account ID scope will return 404 - Not Found.\n\n```\nAccountId\n```\n\n## Sending Data\nUnless otherwise stated in the documentation for the specific resource group you are using, all POST/PUT requests should send JSON as the Request Payload, withContent-Typeset toapplication/json.\n\n```\nContent-Type\n```\n\n```\napplication/json\n```\n\n## Return Data\nUnless otherwise stated in the documentation for the specific resource group you are using, if an API request returns data, it will be wrapped in a common JSON structure.\n\n```\n{\"data\":[],\"dataType\":\"app\",\"errors\":[{\"code\":\"VALIDATION_ERROR\",\"message\":\"Error message here\"}]}\n```\n\n```\n{\"data\":[],\"dataType\":\"app\",\"errors\":[{\"code\":\"VALIDATION_ERROR\",\"message\":\"Error message here\"}]}\n```\nOne or more entities will be returned as an array in the data property. If errors were encountered, they will be available as an array of error objects.\n\n## Status Codes\nThe following table lists the status codes that are returned by API requests:\n\n## Cross Origin Resource Sharing\nThe mParticle REST API supports Cross Origin Resource Sharing (CORS) for AJAX requests from any origin.\nWas this page helpful?",
  "url": "https://docs.mparticle.com/developers/apis/platform/overview/"
}