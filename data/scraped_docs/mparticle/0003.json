{
  "title": "No Title",
  "content": "## Documentation\n\n## Developers\nData Subject Request API Version 1 and 2\nData Subject Request API Version 3\nPlatform API Overview\nAccounts\nApps\nAudiences\nCalculated Attributes\nData Points\nFeeds\nField Transformations\nServices\nUsers\nWorkspaces\nWarehouse Sync API Overview\nWarehouse Sync API Tutorial\nWarehouse Sync API Reference\nData Mapping\nWarehouse Sync SQL Reference\nWarehouse Sync Troubleshooting Guide\nComposeID\nWarehouse Sync API v2 Migration\nBulk Profile Deletion API Reference\nCalculated Attributes Seeding API\nCustom Access Roles API\nGroup Identity API Reference\nData Planning API\nPixel Service\nProfile API\nEvents API\nmParticle JSON Schema Reference\nIDSync\niOS\nAndroid\nWeb\nOverview\nStep 1. Create an input\nStep 2. Verify your input\nStep 3. Set up your output\nStep 4. Create a connection\nStep 5. Verify your connection\nStep 6. Track events\nStep 7. Track user data\nStep 8. Create a data plan\nStep 9. Test your local app\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nOverview\nStep 1. Create an input\nStep 2. Verify your input\nStep 3. Set up your output\nStep 4. Create a connection\nStep 5. Verify your connection\nStep 6. Track events\nStep 7. Track user data\nStep 8. Create a data plan\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nStep 1. Create an input\nStep 2. Create an output\nStep 3. Verify output\nOverview\nStep 1. Create an input\nStep 2. Verify your input\nStep 3. Set up your output\nStep 4. Create a connection\nStep 5. Verify your connection\nStep 6. Track events\nStep 7. Track user data\nStep 8. Create a data plan\nAMP SDK\nInitialization\nConfiguration\nNetwork Security Configuration\nEvent Tracking\nUser Attributes\nIDSync\nScreen Events\nCommerce Events\nLocation Tracking\nMedia\nKits\nApplication State and Session Management\nData Privacy Controls\nError Tracking\nOpt Out\nPush Notifications\nWebView Integration\nLogger\nPreventing Blocked HTTP Traffic with CNAME\nLinting Data Plans\nTroubleshooting the Android SDK\nAPI Reference\nUpgrade to Version 5\nCordova Plugin\nIdentity\nDirect URL Routing FAQ\nWeb\nAndroid\niOS\nGetting Started\nUsage\nAPI Reference\nInitialization\nConfiguration\nEvent Tracking\nUser Attributes\nIDSync\nScreen Tracking\nCommerce Events\nLocation Tracking\nMedia\nKits\nApplication State and Session Management\nData Privacy Controls\nError Tracking\nOpt Out\nPush Notifications\nWebview Integration\nUpload Frequency\nApp Extensions\nPreventing Blocked HTTP Traffic with CNAME\nLinting Data Plans\nTroubleshooting iOS SDK\nSocial Networks\niOS 14 Guide\niOS 15 FAQ\niOS 16 FAQ\niOS 17 FAQ\niOS 18 FAQ\nAPI Reference\nUpgrade to Version 7\nGetting Started\nIdentity\nGetting Started\nIdentity\nMedia\nUpload Frequency\nGetting Started\nOpt Out\nInitialize the SDK\nEvent Tracking\nCommerce Tracking\nError Tracking\nScreen Tracking\nIdentity\nLocation Tracking\nSession Management\nGetting Started\nIdentity\nInitialization\nConfiguration\nContent Security Policy\nEvent Tracking\nUser Attributes\nIDSync\nPage View Tracking\nCommerce Events\nLocation Tracking\nMedia\nKits\nApplication State and Session Management\nData Privacy Controls\nError Tracking\nOpt Out\nCustom Logger\nPersistence\nNative Web Views\nSelf-Hosting\nMultiple Instances\nWeb SDK via Google Tag Manager\nPreventing Blocked HTTP Traffic with CNAME\nFacebook Instant Articles\nTroubleshooting the Web SDK\nBrowser Compatibility\nLinting Data Plans\nAPI Reference\nUpgrade to Version 2 of the SDK\nGetting Started\nIdentity\nWeb\nAlexa\nLinting Tools\nSmartype\nmParticle Command Line Interface\nNode SDK\nGo SDK\nPython SDK\nRuby SDK\nJava SDK\nIntroduction\nOutbound Integrations\nFirehose Java SDK\nInbound Integrations\nOverview\nAndroid Kit Integration\nJavaScript Kit Integration\niOS Kit Integration\nCompose ID\nData Hosting Locations\nGlossary\nMigrate from Segment to mParticle\nMigrate from Segment to Client-side mParticle\nMigrate from Segment to Server-side mParticle\nSegment-to-mParticle Migration Reference\nRules Developer Guide\nAPI Credential Management\nThe Developer's Guided Journey to mParticle\n\n## Guides\nCreate an Input\nStart capturing data\nConnect an Event Output\nCreate an Audience\nConnect an Audience Output\nTransform and Enhance Your Data\nIntroduction\nProfiles\nAudiences Overview\nCreate an Audience\nConnect an Audience\nManage Audiences\nReal-time Audiences (Legacy)\nStandard Audiences (Legacy)\nCalculated Attributes Overview\nUsing Calculated Attributes\nCreate with AI Assistance\nCalculated Attributes Reference\nPredictive Audiences Overview\nUsing Predictive Audiences\nJourneys Overview\nManage Journeys\nDownload an audience from a journey\nAudience A/B testing from a journey\nJourneys 2.0\nWhat are predictive attributes?\nCreate Future Prediction\nUse Future Predictions in Campaigns\nAssess and Troubleshoot Predictions\nNext Best Action Overview\nCreate a Next Best Action (NBA)\nView and Manage NBAs\nActivate Next Best Actions in Campaigns\nThe new mParticle Experience\nThe Overview Map\nUsage and Billing Report\nObservability Overview\nObservability User Guide\nObservability Troubleshooting Examples\nObservability Span Glossary\nIntroduction\nData Retention\nConnections\nActivity\nLive Stream\nData Filter\nRules\nTiered Events\nmParticle Users and Roles\nAnalytics Free Trial\nTroubleshooting mParticle\nUsage metering for value-based pricing (VBP)\nIntroduction\nSync and Activate Analytics User Segments in mParticle\nUser Segment Activation\nWelcome Page Announcements\nProject Settings\nRoles and Teammates\nOrganization Settings\nGlobal Project Filters\nPortfolio Analytics\nAnalytics Data Manager Overview\nEvents\nEvent Properties\nUser Properties\nRevenue Mapping\nExport Data\nUTM Guide\nData Dictionary\nQuery Builder Overview\nModify Filters With And/Or Clauses\nQuery-time Sampling\nQuery Notes\nFilter Where Clauses\nEvent vs. User Properties\nGroup By Clauses\nAnnotations\nCross-tool Compatibility\nApply All for Filter Where Clauses\nDate Range and Time Settings Overview\nUser Attributes at Event Time\nUnderstanding the Screen View Event\nAnalyses Introduction\nGetting Started\nVisualization Options\nFor Clauses\nDate Range and Time Settings\nCalculator\nNumerical Settings\nAssisted Analysis\nProperties Explorer\nFrequency in Segmentation\nTrends in Segmentation\nDid [not] Perform Clauses\nCumulative vs. Non-Cumulative Analysis in Segmentation\nTotal Count of vs. Users Who Performed\nSave Your Segmentation Analysis\nExport Results in Segmentation\nExplore Users from Segmentation\nGetting Started with Funnels\nGroup By Settings\nConversion Window\nTracking Properties\nDate Range and Time Settings\nVisualization Options\nInterpreting a Funnel Analysis\nGroup By\nFilters\nConversion over Time\nConversion Order\nTrends\nFunnel Direction\nMulti-path Funnels\nAnalyze as Cohort from Funnel\nSave a Funnel Analysis\nExplore Users from a Funnel\nExport Results from a Funnel\nGetting Started with Cohorts\nAnalysis Modes\nSave a Cohort Analysis\nExport Results\nExplore Users\nSaved Analyses\nManage Analyses in Dashboards\nGetting Started\nEvent Menu\nVisualization\nEnding Event\nSave a Journey Analysis\nGetting Started\nUser Activity Timelines\nTime Settings\nExport Results\nSave A User Analysis\nDashboards\u00e2\u0080\u0093\u00e2\u0080\u0093Getting Started\nManage Dashboards\nDashboard Filters\nOrganize Dashboards\nScheduled Reports\nFavorites\nTime and Interval Settings in Dashboards\nQuery Notes in Dashboards\nUser Aliasing\nThe Demo Environment\nKeyboard Shortcuts\nAnalytics for Marketers\nAnalytics for Product Managers\nCompare Conversion Across Acquisition Sources\nAnalyze Product Feature Usage\nIdentify Points of User Friction\nTime-based Subscription Analysis\nDashboard Tips and Tricks\nUnderstand Product Stickiness\nOptimize User Flow with A/B Testing\nUser Segments\nUser Segments Export API\nDashboard Filter API\nIDSync Overview\nUse Cases for IDSync\nComponents of IDSync\nStore and Organize User Data\nIdentify Users\nDefault IDSync Configuration\nProfile Conversion Strategy\nProfile Link Strategy\nProfile Isolation Strategy\nBest Match Strategy\nAliasing\nOverview\nCreate and Manage Group Definitions\nIntroduction\nCatalog\nLive Stream\nData Plans\nBlocked Data Backfill Guide\nWarehouse Sync\nData Privacy Controls\nData Subject Requests\nDefault Service Limits\nFeeds\nCross-Account Audience Sharing\nApproved Sub-Processors\nImport Data with CSV Files\nCSV File Reference\nGlossary\nVideo Index\nSingle Sign-On (SSO)\nSetup Examples\nDebug Console\nData Warehouse Delay Alerting\nIntroduction\nIntroduction\nIntroduction\nRudderstack\nGoogle Tag Manager\nSegment\nAdvanced Data Warehouse Settings\nAWS Kinesis (Snowplow)\nAWS Redshift (Define Your Own Schema)\nAWS S3 Integration (Define Your Own Schema)\nAWS S3 (Snowplow Schema)\nBigQuery (Snowplow Schema)\nBigQuery Firebase Schema\nBigQuery (Define Your Own Schema)\nGCP BigQuery Export\nSnowflake (Snowplow Schema)\nSnowplow Schema Overview\nSnowflake (Define Your Own Schema)\nDashboard Filter API (Deprecated)\nREST API\nUser Segments Export API (Deprecated)\nSDKs Introduction\nReact Native\niOS\nAndroid\nJava\nJavaScript\nPython\nObject API\nAliasing\n\n## Start capturing data\nAfter you create an input, you can begin capturing data.\n\n## Prerequisites\nBefore you start this activity, you should have already:\n- Created an input.\n\n## Data in mParticle\nmParticle collects two important kinds of data:\n\n## Event data\nEvent data is about actions taken by a user in your app. Some events are collected automatically by mParticle\u00e2\u0080\u0099s native SDKs. These include the Session Start events you saw in the Live stream when you firstset up your input. Other events need to be captured by writing code in your app. Of these, the most significant are:\n- Screen/Page Views- keep track of where a user is in your app\n- Custom Events- track any actions the user might take in your app, such as clicking a button or watching a video.\n- Commerce Events- track purchases and other product-related activity.\n\n## User data\nmParticle also captures data about your user, including their identities, information about the device they are using and any custom attributes you set. As with event data, some user data, such as information about the devices they use, is captured automatically by mParticle\u00e2\u0080\u0099s native SDKs. Two important types of user data must be captured by writing code in your app:\n- User identitiesare unique identifiers for your user, like an email address or customer ID. These are different from the device identities collected automatically by the SDKs, which don\u00e2\u0080\u0099t identify an individual person but a particular cell phone, browser session, or some other device.User identities help mParticle keep track of unique users of your app and allow you to track a user\u00e2\u0080\u0099s activity over time and across different devices. To learn a lot more about user and device identities, read ourIDSyncguide. For now, you just need to know that a user identity is a way of identifying aperson, independently of thedevicethey are currently using.\n- User Attributesare key-value pairs that can store any custom data about your user. The value of a user attribute can be:A stringA numberA listA boolean value (trueorfalse)null- attributes with anullvalue function as \u00e2\u0080\u0098tags\u00e2\u0080\u0099, and can be used to sort your users into categories.\nUser Attributesare key-value pairs that can store any custom data about your user. The value of a user attribute can be:\n- A string\n- A number\n- A list\n- A boolean value (trueorfalse)\n\n```\ntrue\n```\n\n```\nfalse\n```\n- null- attributes with anullvalue function as \u00e2\u0080\u0098tags\u00e2\u0080\u0099, and can be used to sort your users into categories.\n\n```\nnull\n```\n\n```\nnull\n```\n\n## Capture User and Event Data\nTo start capturing data you will need to go back to your app code. Inthe previous stepyou should have installed and initialized the mParticle SDK in at least one of your app platforms. This means you\u00e2\u0080\u0099re already set up to capture Session Start and Session End events, as well as basic data about the device. Grab a friendly developer again, if you need one, and try to add some additional user and event data to your implementation. Here are a few things you might try, with links to the appropriate developer docs:\n- Add a Customer ID or Email Address for a user.Android/iOS/Web\n- Create a custom user attribute that tells you something about a user. For example:status: \"premium\".Android/iOS/Web\n\n```\nstatus: \"premium\"\n```\n- Create a page or screen view event that captures the name of a page or screen being viewed.Android/iOS/Web\n- Create a custom event to track a user action in your app. Include some custom attributes. For example, the mPTravel app sends a custom event when a user views one of its content videos. The event is called \u00e2\u0080\u009cPlay Video\u00e2\u0080\u009d and it has two custom attributes: thecategoryof content, and the traveldestinationthe video promotes. Later on, you\u00e2\u0080\u0099ll see how events like these can be used to target custom messaging.Android/iOS/Web\n\n```\ncategory\n```\n\n```\ndestination\n```\n- Create a purchase event - track a purchase using mParticle\u00e2\u0080\u0099s commerce APIs.Android/iOS/Web\n\n## Verify: Look for incoming data in the Live Stream\nOnce you\u00e2\u0080\u0099ve added code to your app to start collecting some basic data, start up a development build of your app again and trigger some events. Have another look at the Live Stream. You should start to see new event batches, with the individual events you have added to your app.\n\n## Troubleshoot\nIf you have at least some data in your Live Stream, such as the session start and session end messages generated in theprevious step, but your screen views, custom events or purchases aren\u00e2\u0080\u0099t showing, it\u00e2\u0080\u0099s likely that there is an issue with your app code.\n- Check that your code is correctly formed, and that the methods which send events to mParticle are actually triggered by user activity in your app.\n- Review your development environment\u00e2\u0080\u0099s logs. These will show when an event is sent to mParticle.\n\n## Next steps\nExcellent, you\u00e2\u0080\u0099ve started collecting real custom datapoints from your app. At this point you might want to take a quick break to:\n- Explore the capabilities of theLive Stream\n- Learn more about theimportance of user identitiesin mParticle.\nNow that you\u00e2\u0080\u0099re collecting data, it\u00e2\u0080\u0099s time to send it on byconnecting an event output.\nWas this page helpful?",
  "url": "https://docs.mparticle.com/guides/getting-started/start-capturing-data/#verify-look-for-incoming-data-in-the-live-stream"
}