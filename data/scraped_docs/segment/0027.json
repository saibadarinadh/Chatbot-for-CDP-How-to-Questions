{
  "title": " Destinations Overview | Segment Documentation",
  "content": "- Home\n- /\n- Connections\n- /\n- Destinations Overview\n\n## Destinations Overview\nOn this page\n- Sources vs Destinations\n- Destination connection types\n- Method compatibility\n- Source compatibility\n- Destination Actions\n- Connection modes\n- Sync modes\n- Add a destination\n- Data deliverability\n- IP Allowlisting\nDestinations are the business tools or apps that Segment forwards your data to. Adding Destinations allow you to act on your data and learn more about your customers in real time.\nDestinations Catalog\nIf you want to explore the destinations compatible with Segment, check out theDestinations catalog. Select an item from the catalog to learn more about it. The documentation for each destination explains how the Segment Tracking API methods are implemented for that destination.\n\n## Sources vs Destinations\nSegment hasSourcesandDestinations. Sources send dataintoSegment, while Destinations receive datafromSegment.\n\n## Destination connection types\nSegment has three destination connection types:\n- Event streams\n- Storage\n- Reverse ETL\n\n## Event streams destinations\nEvent streams destinations are all destinations that aren\u2019t storage or Reverse ETL destinations. Adding these destinations allow you to act on your data and learn more about your customers in real time. These includeDestination Actions.\n\n## Storage destinations\nStorage destinations enable you to store your raw Segment data. This enables data analysts and data scientists to work with the raw data to derive deeper and more customized insights to support your organization. Learn more from thestorage overview page.\n\n## Reverse ETL destinations\nReverse ETLdestinations are the business tools or apps you use that Segment syncs the data from your warehouse to.\nIf your destination is not listed inthe Reverse ETL catalog, use theSegment Connections destinationto send data from your Reverse ETL warehouse to other destinations listed in thecatalog. The Segment Connections destination enables you to mold data extracted from your warehouse inSegment SpecAPI calls that are then processed bySegment\u2019s HTTP Tracking API. The Segment HTTP Tracking API lets you record analytics data. The requests hit Segment\u2019s servers, and then Segment routes your data to any destination you want. Get started with theSegment Connections destination.\n\n## Method compatibility\nNot all destinations can accept data from specific method types. To know if a destination can accept data from specific method types, look for theQuick Infobox at the top of the destination\u2019s documentation page, or check out theDestinations Methods comparison chart.\n\n## Source compatibility\nMany destinations can accept data from all types of sources, but some are only compatible with specific source types (for example, web only, or server only). To find out which source types a specific destination can accept data from, check the documentation for that destination in theQuick infobox, or in theSupported Sources and Connection Modessection.\n\n## Destinations Compatibility Matrix\nWondering which destinations take which data? Check out the Destination connection modes list by category.\n\n## Destination Actions\nIn June 2021, Segment released a new form of destinations calledDestinations Actions. These destinations allow users to createsubscriptions: sets of conditions in which data is sent to the destinations and data mappings, to format that data for the destination tool. Segment watches for data that matches the conditions you create (triggers) for the subscription, and when the conditions are met, uses an explicit mapping to transform the incoming data to an output format that your destination can use.\n\n## Connection modes\nSegment\u2019s web source (Analytics.js), and native client-side libraries (iOS, Android, React-native) allow you to choose how you send data to Segment from your website or app. There are two ways to send data:\n- Cloud-mode: The sources send data directly to the Segment servers, which then translate it for each connected downstream destination, and send it on. Translation is done on the Segment servers, keeping your page size, method count, and load time small.Healthcare and Life Sciences (HLS) customers can encrypt data flowing into their destinationsHLS customers with a HIPAA eligible workspace can encrypt data in fields marked as Yellow in the Privacy Portal before they flow into an event stream, cloud-mode destination.To learn more about data encryption, see theHIPAA Eligible Segment documentation\nCloud-mode: The sources send data directly to the Segment servers, which then translate it for each connected downstream destination, and send it on. Translation is done on the Segment servers, keeping your page size, method count, and load time small.\nHealthcare and Life Sciences (HLS) customers can encrypt data flowing into their destinations\nHLS customers with a HIPAA eligible workspace can encrypt data in fields marked as Yellow in the Privacy Portal before they flow into an event stream, cloud-mode destination.To learn more about data encryption, see theHIPAA Eligible Segment documentation\n- Device-mode: You include additional code on your website or mobile app which allows Segment to use the data you collect on the device to make calls directly to the destination tool\u2019s API, without sending it to the Segment serversfirst. (You still send your data to the Segment servers, but this occurs asynchronously.) This is also calledwrappingorbundling, and it might be required when the source has to be loaded on the page to work, or loaded directly on the device to function correctly. When you use Analytics.js, you can change the device-mode destinations that a specific source sends from within the Segment web app, without touching any code.\nDevice-mode: You include additional code on your website or mobile app which allows Segment to use the data you collect on the device to make calls directly to the destination tool\u2019s API, without sending it to the Segment serversfirst. (You still send your data to the Segment servers, but this occurs asynchronously.) This is also calledwrappingorbundling, and it might be required when the source has to be loaded on the page to work, or loaded directly on the device to function correctly. When you use Analytics.js, you can change the device-mode destinations that a specific source sends from within the Segment web app, without touching any code.\nIf you use Server source libraries, they only send data directly to Segment in Cloud-mode. Server library implementations operate in the server backend, and can't load additional destination SDKs.\n\n## Choosing a connection mode\nCloud-mode destinations send data through Segment. Device-mode destinations send data in parallel to Segment. There are tradeoffs between using cloud-mode and device-mode destinations. In general, Cloud-mode is preferred because you then benefit from Segment\u2019s system features, like retries, Replay, Warehouses, Privacy blocking, filtering, and more.\nYou should consider using device-mode if you use destinations which record information directly on the user\u2019s device. These types of tools might lose functionality if they aren\u2019t loaded directly on the device.\nTake a look at the pros and cons chart of device-mode and cloud-mode destinations to determine which connection mode is best for you:\n\n## Website source connection modes\nSegment\u2019s website sources use device-mode by default, because so many website-based destinations require that they be loaded on the page, and because size and page performance are less of a concern than on mobile. If your website source only collects information that you can instrument yourself, then you can use cloud-mode.\nFor example, a web-chat destination must be loaded to connect to the service and collect metrics efficiently - you don\u2019t expect it to route chat messages through Segment! Thisdoesmean that Segment might not receive a small amount of the destination-specific information from your users. In the chat example, if the destination is calculating idle time between messages, that data would appear in the destination\u2019s tooling, but not necessarily in the Segment data.\n\n## Mobile source connection modes\nBy default, destinations configured on a mobile source send their data directly to the Segment servers, then translate it and use Cloud-mode to forward it to destinations.Cloud-modemeans that Segment sends the data directly from the Segment servers, to their servers. This means you don\u2019t need to package third-party SDKs for destinations that can accept cloud-mode data. Some primarily web-based destinations also allow cloud-mode, which can help reduce app size, and improve load time and performance. You can read more about theeffects of mobile app size on downloads in Segment\u2019s blog.\nBefore you turn on or opt-in for cloud-mode for a mobile source, consider if your destinations have features that require interactions on the device or require device-specific data (see the examples above). For example, if you use cloud-mode for Mixpanel, you\u2019ll get your data on reporting and people, but won\u2019t be able to use their features for in-app surveys or auto-tracking. These can be really valuable, but might not be a priority for your team.\n\n## How Segment determines Device-mode and Cloud-mode destinations\nThere are two main things Segment considers when deciding to use Device-mode or Cloud-mode, or both, for a destination partner:\n- Anonymous Attribution Methodology\n- Client-native Destination Features\n\n## Anonymous attribution methodology\n\n## Mobile attribution\nThe anonymous identifiers used on mobile devices are usually static, which means Segment doesn\u2019t need to do additional resolution, and can build Cloud-mode destinations by default. Because Segment uses native advertising identifiers on mobile devices, you don\u2019t need a full SDK on the device to reconcile or identify a user. For example, you might track users who viewed an advertisement in one app and installed another app as a result.\nHowever, some mobile attribution tools do more advanced reconciliation based on more than the native identifier, which requires the SDK on the device to work properly. For those destinations, Segment offers device-mode, which packages the tool\u2019s SDK with the client-side library so that you can get the entire range of tool functionality.\n\n## Web Attribution\nCross-domain identity resolution for websites requires that the attribution tool use a third-party cookie so it can track a user anonymously across domains. This is a critical component of attribution modeling. As a matter of principle, Segment only uses first-party cookies and doesn\u2019t share cookies with partners, so Analytics.js and the data it collects aren\u2019t enough to generate view-through attribution in ad networks.\nCustomers can load their libraries and pixels in the context of the browser and trigger requests to attribution providers from their device in response to Segment API calls to take advantage of advertising and attribution tools.\n\n## Client-native destination features\nMany of Segment\u2019s destinations offer client-side features beyond data collection in their SDKs and libraries, for both mobile and web. In these cases, Segment offers Device-mode SDKs so that you can collect information on the device using Segment, but still get the destination\u2019s complete native functionality.\nSome features that usually require Device-mode include: automatic A/B testing, displaying user surveys, live chat or in-app notifications, touch and hover heatmapping, and accessing rich device data such as CPU usage, network data, or raised exceptions.\n\n## How can I tell which connection modes and platforms are supported for a destination?\nThe first place to look is the individual destination documentation. Each one includes a matrix of supported Sources and Connection Modes. Segment provides a list ofall destinations and their connection modes.\nIn order to override the default, check the destination settings pane in the Segment web App either for aConnection Modetoggle or instructions on bundling any additional mobile components required.\n\n## Sync modes\nSync modes allow users to define how changes in the source should send downstream to your destination. Depending on which destinations you set up in Segment, you may need to choose a sync mode for your data. This configuration determines how Segment updates your destination based on the source data.\nThe available sync modes can vary based on the destination, integration type, and actions within the destination. For example, if you sync customer data, you might have the option to Insert, Update, or Upsert records.\nAvailable sync modes include:\n- Update: Modify existing records in the destination without adding new ones.\n- Upsert: Update existing records and add new ones, if necessary.\n- Add: Add records to a list, segment, or journey.\n- Remove: Remove records from a list, audience, or journey.\n\n## Add a destination\nTo add a Destination:\n- Navigate toConnections.\n- ClickAdd Destination.\n- Choose the Destination you want to add and clickConfigure. Most users eventually add destinations for: Analytics, Advertising, Email Marketing and/or Live Chat.\n- Select the Source you want to connect to your Destination.\n- ClickNext.\n- Give you Destination a name.\n- ClickSave.\n- Configure the settings and enable your destination on the destination settings page.\nLearn moreabout what adding a destination entails.\nDisabled destinations do not receive data\nIf you haven\u2019t enabled your destination for the first time after you created it or if you actively disable a destination, Segment prevents any data from reaching the destination. Business Tier customers can requesta Replay, which resends data from the time the destination was disabled to the time it was re-enabled. Replays can also send data to currently disabled destinations.\nSome destinations are not compatible with Replays after a certain period of time, for example, 14 days. Check with Segment\u2019s support teamfriends@segment.comto confirm that your intended destination allows historical timestamps.\n\n## Data deliverability\nSegment increases deliverability to destinations usingretriesandreplays. Retries happen automatically for all customers, while replays are available on request forBusiness Tiercustomers.\nSegment\u2019s data flow is primarily unidirectional, from Segment to integrated destinations. Segment does not inherently support a bidirectional flow where events, once delivered and processed by a destination, are sent back to Segment.\nSegment also usesbatchingto increase deliverability to your destinations. Some destinations have batching enabled by default, and some, like Segment\u2019sWebhook (Actions) Destination, let you opt in to batching.\nSome cases of event batching might lead to observability loss\nWhile batching does increase event deliverability, you might experience error amplification, as if the entire batch fails, all events will be marked with the same status. For example, if a batch fails due to one429(Rate Limit) error, it might appear in the UI that there was one 429s request failure for each item in the batch.\n\n```\n429\n```\n\n## Retries\n\n## Retries in Segment\u2019s client libraries\nSegment\u2019s client libraries ensure delivery of your data to the API reliably in the face of spotty connections, device failure, or network partitions in your data centers.\nWhen you use Segment\u2019s mobile SDK, Segment dispatches each event to a background thread where the event is then written to a queue. Later, Segment\u2019s SDK batches together many requests in to one compressed request and sends it to Segment\u2019s servers. Segment\u2019s SDKs minimize battery use and bandwidth use by powering up the radio less frequently and for shorter time periods.\nIf the delivery of the payload is not successfully sent due to connection issues, all of your SDKs will automatically retry the request until successful receipt of the payload according to the following policies. Note that retry policies are subject to change / tuning in the future.\n\n## Mobile library retries\nAll mobile libraries handle retries by periodically attempting to flush their internal queue of events to Segment. If the flush is unsuccessful, the library waits until the next regularly-scheduled flush time to try again. The background queue of requests to Segment is bounded in size so if events are being queued faster than we can successfully flush them to Segment, some events may be dropped.\n\n## Retries between Segment and destinations\nThe destination endpoint APIs have fluctuations in availability due to a number of issues ranging from network failures to bugs to overload. Segment\u2019s internal systems retry failed destination API calls for four hours with a randomized exponential backoff after each attempt. This substantially improves delivery rates.\nHere\u2019s an example destination that was only successfully accepting 93.36% of all API requests but was achieving a 99.28% final deliverability rate due to Segment\u2019s retry functionality.\nYou can see the current destination endpoint API success rates and final delivery rates for Segment\u2019s server-side destinations on Segment\u2019sstatus page.\n\n## Replays\nReplay is available toBusiness tiercustomers.Contact Segmentto learn more.\nReplaysallow customers to load historical data from Segment\u2019s S3 logs into downstream destinations which accept cloud-mode data. So, for example, if you wanted to try out a new email or analytics tool, Segment can replay your historical data into that tool. This gives you a great testing environment and prevents data lock-in when vendors try to hold data hostage.\nIf you submittedsuppress_onlyrequests, Segment still retains historical events for those users, which can be replayed. If you do not want historical events replayed for suppressed users, submitsuppress_and_deleterequests instead.\n\n```\nsuppress_only\n```\n\n```\nsuppress_and_delete\n```\n\n## Batching\nSegment usesstream batchingfor all destinations that require near-realtime data andbulk batchingfor some data flows in our pipeline.\n\n## Stream batching\nFor all destinations, except for non-realtime Engage syncs and Reverse ETL syncs, Segment processes events from your source as they arrive and then flows the data downstream to your destinations in small batches, in a process calledstream batching. These batches might contain different events between retry attempts, as events in previous batches may have succeeded, failed with a permanent error, or expired. This variability reduces the workload the system processes during partial successes, allows for better per-event handling, and reduces the chance of load-related failures by using variable batch formations.\n\n## Bulk batching\nSome data flows may be able to use a process calledbulk batching, which supports batching for destinations that produce between several thousand and a million events at a time. Real-time workloads or using a Destination Insert Function may prevent bulk batches from being formed. Batches contain the same events between retries.\nThe following destinations support bulk batching:\n- DV360\n- Google Adwords Remarketing Lists\n- Klaviyo (Actions)\n- Pinterest Audiences\n- Snapchat Audiences\n- LiveRamp\n- The Trade Desk CRM\nYou must manually configure bulk batches for Actions destinations\nTo support bulk batching for the Actions Webhook destination, you must setenable-batching: trueandbatch_size: >= 1000.\n\n```\nenable-batching: true\n```\n\n```\nbatch_size: >= 1000\n```\n\n## IP Allowlisting\nIP Allowlisting uses a NAT gateway to route traffic from Segment\u2019s servers to your destination through a limited range of IP addresses, which can prevent malicious actors from establishing TCP and UDP connections with your integrations.\nIP Allowlisting is available for customers on Business Tier plans.\n\n## Supported destinations\nSegment supports IP Allowlisting inall destinationsexcept for the following:\n- LiveRamp\n- TradeDesk\n- Amazon Kinesis\nDestinations that are not supported receive traffic from randomly assigned IP addresses.\n\n## Configure IP Allowlisting\nTo enable IP Allowlisting for your workspace:\n- From your Segment workspace, navigate toSettings > Workspace settings > Destination IP settings.\n- On the Destination IP settings page, clickEnable IP allowlisting.\n- The page displays the IP address ranges that Segment uses to route data from Segment\u2019s internal systems to your destination. Note these ranges, as you\u2019ll need this information to enforce IP restriction in your downstream destinations.\n- Open each of your downstream tools and configure IP restriction for each destination. For more information, refer to the documentation for your downstream tool.\nIP restriction might not be supported in all destinations.\nThis page was last modified: 04 Dec 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
  "url": "https://segment.com/docs/connections/destinations/"
}