[
  {
    "title": " Segment Documentation | Segment Documentation",
    "content": "## Segment Documentation\nLearn how to use Segment to collect, responsibly manage, and integrate your customer data with hundreds of tools.\n\n## Getting started with Segment\nLearn about Segment, plan and work through a basic implementation, and explore features and extensions.\n\n## How can Segment help you?\n\n## Simplify data collection\nIntegrate the tools you need for analytics, growth, marketing, and more.\n\n## Protect data integrity\nPrevent data quality issues with a tracking schema and enforcement with Protocols.\n\n## Personalize experiences\nBuild audiences and journeys from real-time customer data to personalize experiences on every channel.\n\n## Respect users' privacy\nKeep customer data private with Segment's data discovery and policy enforcement tools.\n\n## Get Data into Segment\nThe Segment Spec helps you identify, capture, and format meaningful data for use with Segment libraries and APIs as well as downstream tools.\n\n## Segment calls\nUse Track, Page, Identify, and other Segment tracking calls.\n\n## Common traits\nSave time by letting Segment calls collect information for you.\n\n## Use case specs\nUse our business-case specs to ensure that your tools get the most from your data.\n\n## Learning about Segment\n\n## Segment for Developers\nThe basics of your Segment implementation.\n\n## How-To Guides\nOver a dozen how-to guides that help you accomplish common tasks.\n\n## Connect your app to Segment\n\n## JavaScript\n\n## Swift\n\n## All other Sources\n\n## Additional Resources\n\n## Totally new to Analytics?\nSegment's Analytics Academy walks you through the wide world of analytics, including best practices, an overview of the most popular tools, and case studies of how other developers have achieved success.\n\n## Want more hands-on guidance?\nFor a more hands-on tutorial of Segment, check out Segment University. It offers step-by-step instructions, starting with first steps and going through some of our more advanced features.\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/"
  },
  {
    "title": " Segment Documentation | Segment Documentation",
    "content": "## Segment Documentation\nLearn how to use Segment to collect, responsibly manage, and integrate your customer data with hundreds of tools.\n\n## Getting started with Segment\nLearn about Segment, plan and work through a basic implementation, and explore features and extensions.\n\n## How can Segment help you?\n\n## Simplify data collection\nIntegrate the tools you need for analytics, growth, marketing, and more.\n\n## Protect data integrity\nPrevent data quality issues with a tracking schema and enforcement with Protocols.\n\n## Personalize experiences\nBuild audiences and journeys from real-time customer data to personalize experiences on every channel.\n\n## Respect users' privacy\nKeep customer data private with Segment's data discovery and policy enforcement tools.\n\n## Get Data into Segment\nThe Segment Spec helps you identify, capture, and format meaningful data for use with Segment libraries and APIs as well as downstream tools.\n\n## Segment calls\nUse Track, Page, Identify, and other Segment tracking calls.\n\n## Common traits\nSave time by letting Segment calls collect information for you.\n\n## Use case specs\nUse our business-case specs to ensure that your tools get the most from your data.\n\n## Learning about Segment\n\n## Segment for Developers\nThe basics of your Segment implementation.\n\n## How-To Guides\nOver a dozen how-to guides that help you accomplish common tasks.\n\n## Connect your app to Segment\n\n## JavaScript\n\n## Swift\n\n## All other Sources\n\n## Additional Resources\n\n## Totally new to Analytics?\nSegment's Analytics Academy walks you through the wide world of analytics, including best practices, an overview of the most popular tools, and case studies of how other developers have achieved success.\n\n## Want more hands-on guidance?\nFor a more hands-on tutorial of Segment, check out Segment University. It offers step-by-step instructions, starting with first steps and going through some of our more advanced features.\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/#segment-documentation"
  },
  {
    "title": " What is Segment? | Segment Documentation",
    "content": "- Home\n- /\n- What is Segment?\n\n## What is Segment?\nWith Segment, you can collect, transform, send, and archive yourfirst-party customer data. Segment simplifies the process of collecting data and connecting new tools, allowing you to spend more time using your data, and less time trying to collect it. You can use Segment to track events that happen when a user interacts with the interfaces. \u201cInterfaces\u201d is Segment\u2019s generic word for any digital properties you own: your website, mobile apps, and processes that run on a server or OTT device.\nWhen you capture interaction data in Segment, you can send it (often in real-time) to your marketing, product, and analytics tools, as well as to data warehouses. In most cases, you won\u2019t even need to touch your tracking code to connect to new tools.\n\n## nextReady to get started?\nLet's walk through the steps to get up and running on Segment. Let's go!\nThis page was last modified: 14 Dec 2021\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/getting-started/"
  },
  {
    "title": " Connections Overview | Segment Documentation",
    "content": "- Home\n- /\n- Connections Overview\n\n## Connections Overview\nOn this page\n- Sources\n- Destinations\n- Warehouses\n- Information on sources and destinations pages\n- FAQs\nConnections is Segment\u2019s core product offering: you can collect event data from your mobile apps, websites, and servers with one API, then pull in contextual data from cloud apps like your CRM, payment systems, and internal databases to build a unified picture of your customers.\n\n## Sources\nIn Segment, you create a source (or more than one!) for each website or app you want to track. Wehighly recommendcreating a Source for each unique source of data (each site, app, or server), though this isn\u2019t required.\nSources belong to a workspace, and the URL for a source looks something like this:https://segment.com/<my-workspace>/sources/<my-source-name>/\n\n```\nhttps://segment.com/<my-workspace>/sources/<my-source-name>/\n```\nYou can create new sources using the button in the workspace view. Each source you create has a write key, which is used to send data to that source. For example, to loadanalytics.js, the Segment JavaScript libraryon your page, the snippet on theQuickstart Guideincludes:\n\n```\nanalytics.js\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\nLearn more about sources from thesources overview page.\n\n## Destinations\nDestinations are business tools or apps that you can connect to the data flowing through Segment. Some of Segment\u2019s most popular destinations are Google Analytics, Mixpanel, Kissmetrics, Customer.io, Intercom, and KeenIO.\nAll of these tools run on the same data: who are your customers and what are they doing? But each tool requires that you send that data in a slightly different format, which means that you\u2019d have to write code to track all of this information, again and again, for each tool, on each page of your app or website.\nEnter Segment. Do it once.\nSegment eliminates this process by introducing an abstraction layer. You send your data to Segment, and Segment understands how to translate it so we can send it along to any destination. You enable destinations from the catalog in the Segment App, and user data immediately starts flowing into those tools. No extra code required!\nSegment supports many categories of destinations, from advertising to marketing, email to customer support, CRM to user testing, and even data warehouses. You can view a complete list of availabledestinationsor check out thedestination pagefor a searchable list broken down by category.\n\n## Warehouses\nA warehouse is a central repository of data collected from one or more sources. This is what commonly comes to mind when you think about a relational database: structured data that fits neatly into rows and columns.\nIn Segment, a Warehouse is a special type of destination. Instead of streaming data to the destination all the time, we load data to them in bulk at regular intervals. When we load data, we insert and update events and objects, and automatically adjust their schema to fit the data you\u2019ve sent to Segment.\n\n## Reverse ETL\nWithReverse ETL, your data warehouse acts as your source, enabling you to send data from your warehouse to your destinations.\n\n## Information on sources and destinations pages\nThe Sources and Destinations pages allow each user to decide what information appears in their personal view for each page.\nOn both pages, you can click the stack icon in the upper right-hand corner of the table to see and select Source properties to show. You can select up to five columns of properties.\nThe following information is available for Sources:\n- Status\n- Environment\n- Destinations\n- Type\n- Category\n- Created At\n- Created By\nOn the Destinations page, you can choose among the following properties:\n- Status\n- Created At\n- Type\n- Sources\n- Category\nYou can then sort or filter each column to just the values you care about, by clicking on the arrow next to each displayed column.\n\n## FAQs\n\n## My source was disabled and it wasn\u2019t done by anyone in my workspace\nSources without any enabled destinations are auto-disabled after 14 days. However, the workspace owner is notified by email before Segment disables the source. Data that flows into Segment but does not flow to any downstream tools is not valuable to you and unnecessarily takes up space.\nSegment understands there may be cases to keep a source active. If you\u2019d like to add your sources to an exception list, you can do so by filling out thisAirtable form.\n\n## Can I request Segment add an integration tool?\nYes, you are able to submit an integration request here https://segment.com/requests/integrations/.\nThis page was last modified: 29 Feb 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/"
  },
  {
    "title": " Protocols Overview | Segment Documentation",
    "content": "- Home\n- /\n- Protocols Overview\n\n## Protocols Overview\nProtocols is available as an add-on for Business plans only.See theavailable plans, orcontact Support.\nOn this page\n- There are four steps to using Protocols\n- Learn more\nProtocols isonlyavailable forevent stream(website, mobile, and server sources) andEngagesources.\nSegment helps customers collect and integrate customer data across a wide range of tools and Destinations. To do so reliably, the data Segment receives must be clean, consistent and adhere to a well thought out tracking plan.\nProtocols was built to automate and scale thedata quality best practicesdeveloped over years of helping customers implement Segment. Investing in data quality will improve trust in your data, reduce time spent by your engineering and business teams navigating and validating data, and ultimately allow your business to grow faster.\nProtocols is a premium add-on feature available to Business Tier customers. If your plan includes Protocols, you can access itfrom theprotocolspath in your workspace. If your plan doesn\u2019t include Protocols, contact your Segment account executive.\n\n```\nprotocols\n```\n\n## There are four steps to using Protocols\n\n## 1. Align teams with a Tracking Plan\nGood data quality starts with a well thought out Tracking Plan. With Protocols, you can define your events and corresponding properties in a Tracking Plan. This tracking plan becomes a central source of truth for product, engineering, analytics, and business teams.\n\n## 2. Validate data quality with violations\nWith your tracking plan living in Segment, you can apply it to 1 or more data sources. Any event or property that does not match the tracking plan will generate a violation. Violations are displayed in aggregated form to spot trends, and detailed form to help you quickly find and resolve discrepancies.\n\n## 3. Enforce data standards with controls\nTo maintain a high degree of quality over time, we offer strict controls to block non-conforming events. Blocked events can be forwarded to a separate quarantined Segment source for analysis and review.\n\n## 4. Resolve data issues with transformations\nEven the most exacting data collection processes are subject to human error and organizational complexity. Transformations can be applied from within Protocols to change event and property names without touching code.\n\n## Learn more\n\n## Best Practices\nLearn more about tracking plans and why you need them.\n\n## Tracking Plan\nCreate a Tracking Plan to standardize your collected data.\n\n## FAQ\nGet answers to Protocols questions that come up the most.\nGet Started: Learn more about Tracking Plans ->\nThis page was last modified: 13 Jul 2023\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/protocols/"
  },
  {
    "title": " Engage Introduction | Segment Documentation",
    "content": "- Home\n- /\n- Engage Introduction\n\n## Engage Introduction\nEngage Foundations requires a Business tier account and includes Unify.See theavailable plans, orcontact Support.\nOn this page\n- What can you do with Engage?\n- Market to customers with Engage Premier and Channels\nPowered by real-time data, Twilio Engage is a customizable personalization platform with which you can build, enrich, and activate Audiences.\nEngage Channels builds on top of these Audiences, helping you connect with and market to your customers through email, SMS, and WhatsApp campaigns.\n\n## What can you do with Engage?\n\n## Create unified customer profiles\nEngage usesSegment Identity Resolutionto take event data from across devices and channels and intelligently merge it into complete user- or account-level profiles. This gives your organization a single view of your customer base. To learn more, read theIdentity Resolution documentation.\n\n## Personalizing customer interactions\nSupport teams rely on Segment's unified profiles to make real-time and informed decisions about customers when answering tickets or taking support calls. Read about how the support team at Frame.io reduced ticket response time by 80%.\n\n## Enrich profiles with new traits\nAdd detail to user profiles with new traits and use them to power personalized marketing campaigns. You can add new traits to your user or account profiles in Engage using:\n- Computed Traits:Use the Engage drag-and-drop interface to build per-user (B2C) or per-account (B2B) metrics on user profiles (for example, \u201clifetime value\u201d or \u201clead score\u201d).\n- SQL Traits:Run custom queries on your data warehouse using the Engage SQL editor, and import the results into Segment. With SQL Traits, you can pull rich, uncaptured user data back into Segment.\n- Predictions:Predict the likelihood that users will perform custom events tracked in Segment, like LTV, churn, and purchase.\n\n## Build Audiences\nCreate lists of users or accounts that match specific criteria. For example, after creating aninactive accountsaudience that lists paid accounts with no logins in 60 days, you can push the audience to your analytics tools or send an SMS, email, or WhatsApp campaign with Engage Channels. Learn more aboutEngage audiences.\n\n```\ninactive accounts\n```\n\n## Sync audiences to downstream tools\nOnce you create your Computed Traits and Audiences, Engage sends them to your Segment Destinations in just a few clicks. You can use these Traits and Audiences to personalize messages across channels, optimize ad spend, and improve targeting. You can also use theProfile APIto build in-app and onsite personalization. Learn more aboutusing Engage dataand theProfile API.\n\n## Personalizing marketing campaigns\nMarketing teams use Engage to run real-time multi-channel marketing campaigns based off specific user attributes they've computed in Engage. Read about how Drift used Engage to increase prospect engagement by 150% in two months.\n\n## Market to customers with Engage Premier and Channels\nTo send email, SMS, and WhatsApp campaigns with Engage Channels, you\u2019ll connect aTwilio messaging service,SendGrid subuser account, andWhatsApp messaging serviceto your Segment Engage space. Use existing accounts, or create new ones.\nView theonboarding stepsfor more on how to connect Twilio and SendGrid accounts.\n\n## Send email, SMS, and WhatsApp messages in Journeys\nUse Engage to build email, SMS, and WhatsApp campaigns withinJourneys. Send campaigns tosubscribed usersbased on event behavior and profile traits. Withmessage analytics, you can track the performance of your campaigns.\n- Send Email:Build email campaignswith existing templates, or create a new email template within Journeys. Before you send the email, test the template and setconversion goals.\nSend Email:Build email campaignswith existing templates, or create a new email template within Journeys. Before you send the email, test the template and setconversion goals.\n- Send SMS messages:Build SMS campaignsto message users in real-time as a step in a Journey. For example, create an abandoned cart campaign that texts users a reminder to complete their purchase, along with a promo code. Addmerge tagsand set conversion goals.\nSend SMS messages:Build SMS campaignsto message users in real-time as a step in a Journey. For example, create an abandoned cart campaign that texts users a reminder to complete their purchase, along with a promo code. Addmerge tagsand set conversion goals.\n- Send WhatsApp messages:Build WhatsApp campaignsthat deliver messages to your customers on the world\u2019s most used messaging app.\nSend WhatsApp messages:Build WhatsApp campaignsthat deliver messages to your customers on the world\u2019s most used messaging app.\nTo learn more, visit theCSV Uploaderdocumentation.\n\n## Build Email, SMS, and WhatsApp message templates\nBuild personalizedemail,SMS, andWhatsApptemplates in Twilio Engage for use in your campaigns. Design email templates with a WYSIWYGDrag and Drop Editoror theHTML Editor. Engage saves the templates for you to preview, edit, and reuse throughout Journeys.\n\n## Personalize with merge tags\nInsert real-time user profile traits from merge tags to personalize each message. For example, address recipients by name or highlight new products from a user\u2019s favorite brand.\n\n## CSV Uploader\nUse the CSV uploader to add or update user profiles andsubscription states. To learn more, visit theCSV Uploaderdocumentation.\n\n## User subscriptions\nSet user subscription states in two ways:\n- Upload a CSV filewith lists of users along with their phone, email, and WhatsApp subscription states.\n- Programmatically with Segment\u2019sPublic API\nUse Engage to add subscription states to user email addresses and phone numbers. Subscription states help determine which users you can send campaigns to in Engage. You can set user subscription states with aCSV file upload, or programmatically with Segment\u2019sPublic API.\n\n## Message Analytics\nWith analytics in Engage, you can monitor real-time conversion data. Track message performance and customer interaction beyond clicks and opens. Use campaign dashboards to view events such asEmail Delivered,Unsubscribed,Spam Reported, and more.\n\n```\nEmail Delivered\n```\n\n```\nUnsubscribed\n```\n\n```\nSpam Reported\n```\n\n## Conversion Goals\nFor each message step in a Journey, you can set conversion conditions with events and properties in your Segment space. Then, define a duration after message delivery to track goals.\nFor example, track users who perform the eventOrder Completedwith a promo code that you send them.\nVisitMessage Analyticsto learn more.\nThis page was last modified: 23 Aug 2023\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/engage/"
  },
  {
    "title": " Privacy Tools Overview | Segment Documentation",
    "content": "- Home\n- /\n- Privacy Tools Overview\n\n## Privacy Tools Overview\nOn this page\n- Proactively identify PII with the Privacy Portal\n- Prepare for GDPR & CCPA\nSegment includes a suite of Privacy tools to help your organization comply with regulations like HIPAA, the GDPR, and the CCPA.\n\n## Proactively identify PII with the Privacy Portal\n\n## Detect and classify customer data\nThe Privacy Portal helps automate preparing for new privacy regulations.\n\n## Control what data you collect\nTake control over whether specific data is allowed to enter Segment\n\n## Prepare for GDPR & CCPA\n\n## Understand and Comply with regulations\nSegment is committed to making it easier for you to comply with the GDPR.\n\n## Delete and suppress data about end-users\nEasily remove your company's end-users from Segment and supported connections.\nThis page was last modified: 14 Nov 2022\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/privacy/"
  },
  {
    "title": " Spec Overview | Segment Documentation",
    "content": "- Home\n- /\n- Connections\n- /\n- Spec Overview\n\n## Spec Overview\nThe Segment Spec provides guidance on meaningful data to capture, and the best format for it, across all of Segment\u2019s libraries and APIs. If you implement Segment using these formats, it\u2019s simple to translate your data to downstream tools.\n\n## Segment University: The Segment Methods\nCheck out our high-level overview of these APIs in Segment University. (Must be logged in to access.)\nEvent and Product Limits\nEvents ingested by Segment are subject to definedProduct Limits.\nThe Segment Spec has three components.\nFirst, itoutlines the semantic definition of the customer data Segment captures across all libraries and APIs.  There are six API calls in the Spec. They each represent a distinct type of semantic information about a customer. Every call shares the samecommon fields.\n- APIsIdentify: who is the customer?Track: what are they doing?Page: what web page are they on?Screen: what app screen are they on?Group: what account or organization are they part of?Alias: what was their past identity?\n- Identify: who is the customer?\n- Track: what are they doing?\n- Page: what web page are they on?\n- Screen: what app screen are they on?\n- Group: what account or organization are they part of?\n- Alias: what was their past identity?\nSecond, itdetails the event data Segment captures across some cloud sources and destinations.\n- Cloud Sources and DestinationsEmailLive ChatA/B Testing\n- Email\n- Live Chat\n- A/B Testing\nThird, itshares the events Segment recommends you track for a particular industry based on experience working with thousands of customers. When you respect these specs, Segment maps these events to particular features within end destinations like Google Analytics and Facebook Ads.\n- Industry SpecsMobileE-CommerceVideoB2B SaaSAI Copilot\n- Mobile\n- E-Commerce\n- Video\n- B2B SaaS\n- AI Copilot\nThis page was last modified: 18 Apr 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/spec/"
  },
  {
    "title": " Spec: Common Fields | Segment Documentation",
    "content": "- Home\n- /\n- Connections\n- /\n- Spec\n- /\n- Spec: Common Fields\n\n## Spec: Common Fields\nOn this page\n- Structure\n- Context\n- Context fields automatically collected\n- Integrations\n- Timestamps\n- FAQ\nIn the SegmentSpecall theAPI callshave a common structure, and a few common fields.\nHowever, not all destinations accept all fields included in the Spec. Not sure which fields a destination accepts? Refer to the destination\u2019s documentation page, or check out theopen-source destination code on GitHub.\n\n## Segment University: The Segment Methods\nCheck out our high-level overview of these APIs in Segment University. (Must be logged in to access.)\n\n## Structure\nEvery API call has the same core structure and fields. These fields describe user identity, timestamping, and mechanical aides like API version.\nHere\u2019s an example of these common fields in raw JSON:\n\n```\n{\"anonymousId\":\"507f191e810c19729de860ea\",\"context\":{\"active\":true,\"app\":{\"name\":\"InitechGlobal\",\"version\":\"545\",\"build\":\"3.0.1.545\",\"namespace\":\"com.production.segment\"},\"campaign\":{\"name\":\"TPS Innovation Newsletter\",\"source\":\"Newsletter\",\"medium\":\"email\",\"term\":\"tps reports\",\"content\":\"image link\"},\"device\":{\"id\":\"B5372DB0-C21E-11E4-8DFC-AA07A5B093DB\",\"advertisingId\":\"7A3CBEA0-BDF5-11E4-8DFC-AA07A5B093DB\",\"adTrackingEnabled\":true,\"manufacturer\":\"Apple\",\"model\":\"iPhone7,2\",\"name\":\"maguro\",\"type\":\"ios\",\"token\":\"ff15bc0c20c4aa6cd50854ff165fd265c838e5405bfeb9571066395b8c9da449\"},\"ip\":\"8.8.8.8\",\"library\":{\"name\":\"analytics.js\",\"version\":\"2.11.1\"},\"locale\":\"en-US\",\"network\":{\"bluetooth\":false,\"carrier\":\"T-Mobile US\",\"cellular\":true,\"wifi\":false},\"os\":{\"name\":\"iPhone OS\",\"version\":\"8.1.3\"},\"page\":{\"path\":\"/academy/\",\"referrer\":\"\",\"search\":\"\",\"title\":\"Analytics Academy\",\"url\":\"https://segment.com/academy/\"},\"referrer\":{\"id\":\"ABCD582CDEFFFF01919\",\"type\":\"dataxu\"},\"screen\":{\"width\":320,\"height\":568,\"density\":2},\"groupId\":\"12345\",\"timezone\":\"Europe/Amsterdam\",\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36\",\"userAgentData\":{\"brands\":[{\"brand\":\"Google Chrome\",\"version\":\"113\"},{\"brand\":\"Chromium\",\"version\":\"113\"},{\"brand\":\"Not-A.Brand\",\"version\":\"24\"}],\"mobile\":false,\"platform\":\"macOS\"}},\"integrations\":{\"All\":true,\"Mixpanel\":false,\"Salesforce\":false},\"event\":\"Report Submitted\",\"messageId\":\"022bb90c-bbac-11e4-8dfc-aa07a5b093db\",\"receivedAt\":\"2015-12-10T04:08:31.909Z\",\"sentAt\":\"2015-12-10T04:08:31.581Z\",\"timestamp\":\"2015-12-10T04:08:31.905Z\",\"type\":\"track\",\"userId\":\"97980cfea0067\",\"version\":2}\n```\n\n```\n{\"anonymousId\":\"507f191e810c19729de860ea\",\"context\":{\"active\":true,\"app\":{\"name\":\"InitechGlobal\",\"version\":\"545\",\"build\":\"3.0.1.545\",\"namespace\":\"com.production.segment\"},\"campaign\":{\"name\":\"TPS Innovation Newsletter\",\"source\":\"Newsletter\",\"medium\":\"email\",\"term\":\"tps reports\",\"content\":\"image link\"},\"device\":{\"id\":\"B5372DB0-C21E-11E4-8DFC-AA07A5B093DB\",\"advertisingId\":\"7A3CBEA0-BDF5-11E4-8DFC-AA07A5B093DB\",\"adTrackingEnabled\":true,\"manufacturer\":\"Apple\",\"model\":\"iPhone7,2\",\"name\":\"maguro\",\"type\":\"ios\",\"token\":\"ff15bc0c20c4aa6cd50854ff165fd265c838e5405bfeb9571066395b8c9da449\"},\"ip\":\"8.8.8.8\",\"library\":{\"name\":\"analytics.js\",\"version\":\"2.11.1\"},\"locale\":\"en-US\",\"network\":{\"bluetooth\":false,\"carrier\":\"T-Mobile US\",\"cellular\":true,\"wifi\":false},\"os\":{\"name\":\"iPhone OS\",\"version\":\"8.1.3\"},\"page\":{\"path\":\"/academy/\",\"referrer\":\"\",\"search\":\"\",\"title\":\"Analytics Academy\",\"url\":\"https://segment.com/academy/\"},\"referrer\":{\"id\":\"ABCD582CDEFFFF01919\",\"type\":\"dataxu\"},\"screen\":{\"width\":320,\"height\":568,\"density\":2},\"groupId\":\"12345\",\"timezone\":\"Europe/Amsterdam\",\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36\",\"userAgentData\":{\"brands\":[{\"brand\":\"Google Chrome\",\"version\":\"113\"},{\"brand\":\"Chromium\",\"version\":\"113\"},{\"brand\":\"Not-A.Brand\",\"version\":\"24\"}],\"mobile\":false,\"platform\":\"macOS\"}},\"integrations\":{\"All\":true,\"Mixpanel\":false,\"Salesforce\":false},\"event\":\"Report Submitted\",\"messageId\":\"022bb90c-bbac-11e4-8dfc-aa07a5b093db\",\"receivedAt\":\"2015-12-10T04:08:31.909Z\",\"sentAt\":\"2015-12-10T04:08:31.581Z\",\"timestamp\":\"2015-12-10T04:08:31.905Z\",\"type\":\"track\",\"userId\":\"97980cfea0067\",\"version\":2}\n```\nIn more detail these common fields for every API call are:\n\n```\nanonymousId\n```\n\n```\nuserID\n```\n\n```\nuserId\n```\n\n```\nanonymousId\n```\n\n```\ncontext\n```\n\n```\nip\n```\n\n```\nlocale\n```\n\n```\nintegrations\n```\n\n```\nmessageId\n```\n\n```\nreceivedAt\n```\n\n```\nsentAt\n```\n\n```\ntimestamp\n```\n\n```\ntimestamp\n```\n\n```\ntype\n```\n\n```\n'identify'\n```\n\n```\n'group'\n```\n\n```\n'track'\n```\n\n```\n'page'\n```\n\n```\n'screen'\n```\n\n```\n'alias'\n```\n\n```\nuserId\n```\n\n```\nanonymousID\n```\n\n```\nuserId\n```\n\n```\nanonymousId\n```\n\n```\nversion\n```\nBeyond this common structure, each API call adds a few specialized top-level fields.\n\n## Context\nContext is a dictionary of extra information that provides useful context about a datapoint, for example the user\u2019sipaddress orlocale. You shouldonly useContext fields for their intended meaning.\n\n```\nip\n```\n\n```\nlocale\n```\n\n```\nactive\n```\n\n```\n.identify()\n```\n\n```\napp\n```\n\n```\nname\n```\n\n```\nversion\n```\n\n```\nbuild\n```\n\n```\ncampaign\n```\n\n```\nname\n```\n\n```\nsource\n```\n\n```\nmedium\n```\n\n```\nterm\n```\n\n```\ncontent\n```\n\n```\ndevice\n```\n\n```\nid\n```\n\n```\nadvertisingId\n```\n\n```\nmanufacturer\n```\n\n```\nmodel\n```\n\n```\nname\n```\n\n```\ntype\n```\n\n```\nversion\n```\n\n```\nmodel\n```\n\n```\niPhone 15 Pro Max\n```\n\n```\nmodel\n```\n\n```\niPhone16,2\n```\n\n```\nip\n```\n\n```\nlibrary\n```\n\n```\nname\n```\n\n```\nversion\n```\n\n```\nlocale\n```\n\n```\nen-US\n```\n\n```\nnetwork\n```\n\n```\nbluetooth\n```\n\n```\ncarrier\n```\n\n```\ncellular\n```\n\n```\nwifi\n```\n\n```\ncontext.network.cellular\n```\n\n```\ncontext.network.wifi\n```\n\n```\nos\n```\n\n```\nname\n```\n\n```\nversion\n```\n\n```\npage\n```\n\n```\npath\n```\n\n```\nreferrer\n```\n\n```\nsearch\n```\n\n```\ntitle\n```\n\n```\nurl\n```\n\n```\nreferrer\n```\n\n```\ntype\n```\n\n```\nname\n```\n\n```\nurl\n```\n\n```\nlink\n```\n\n```\nscreen\n```\n\n```\ndensity\n```\n\n```\nheight\n```\n\n```\nwidth\n```\n\n```\ntimezone\n```\n\n```\nAmerica/New_York\n```\n\n```\ngroupId\n```\n\n```\ntraits\n```\n\n```\ntraits\n```\n\n```\ntrack\n```\n\n```\nuserAgent\n```\n\n```\nuserAgentData\n```\n\n```\nbrands\n```\n\n```\nmobile\n```\n\n```\nplatform\n```\n\n```\nbitness\n```\n\n```\nmodel\n```\n\n```\nplatformVersion\n```\n\n```\nuaFullVersion\n```\n\n```\nfullVersionList\n```\n\n```\nwow64\n```\n\n```\nuserAgent\n```\n\n```\nchannel\n```\n\n## Context fields automatically collected\nBelow is a chart that shows you which context variables are populated automatically by the iOS, Android, and analytics.js libraries.\nOther libraries only collectcontext.library, any other context variables must be sent manually.\n\n```\ncontext.library\n```\n- IP Address isn\u2019t collected by Segment\u2019s libraries, but is instead filled in by Segment\u2019s servers when it receives a message forclient side events only.\nIPv6\nSegment doesn\u2019t support automatically collecting IPv6 addresses.\n- The Android library collectsscreen.densitywiththis method.\nThe Android library collectsscreen.densitywiththis method.\n\n```\nscreen.density\n```\n- userAgentData is only collected if theClient Hints APIis available on the browser.\nuserAgentData is only collected if theClient Hints APIis available on the browser.\n- Segment doesn\u2019t collect or append to the context of subsequent calls in the new mobile libraries (Swift, Kotlin, and React Native).\nSegment doesn\u2019t collect or append to the context of subsequent calls in the new mobile libraries (Swift, Kotlin, and React Native).\nTo pass the context variables which are not automatically collected by Segment\u2019s libraries, you must manually include them in the event payload. The following code shows how to passgroupIdas the context field of Analytics.js\u2019s.track()event:\n\n```\ngroupId\n```\n\n```\n.track()\n```\n\n```\nanalytics.track(\"Report Submitted\",{},{context:{groupId:\"1234\"}});\n```\n\n```\nanalytics.track(\"Report Submitted\",{},{context:{groupId:\"1234\"}});\n```\nTo add fields to the context object in the new mobile libraries, you must utilize a custom plugin. Documentation for creating plugins for each library can be found here:\n- React Native\n- Swift\n- Kotlin\n\n## Integrations\nA dictionary of destination names that the message should be sent to.'All'is a special key that applies when no key for a specific destination is found.\n\n```\n'All'\n```\nIntegrations defaults to the following:\n\n```\n{All:true,Salesforce:false,}\n```\n\n```\n{All:true,Salesforce:false,}\n```\nThis is becauseSalesforcehas strict limits on API calls.\nSending data to the rest of Segment\u2019s destinations is opt-out so if you don\u2019t specify the destination as false in this object, it will be sent to rest of the destinations that can accept it.\n\n## Timestamps\nEvery API call has four timestamps,originalTimestamp,timestamp,sentAt, andreceivedAt.They\u2019re used for very different purposes.\n\n```\noriginalTimestamp\n```\n\n```\ntimestamp\n```\n\n```\nsentAt\n```\n\n```\nreceivedAt.\n```\nAll timestamps areISO-8601date strings, and are in the UTC timezone.To see the user\u2019s timezone information, check thetimezonefield that\u2019s automatically collected byclient-side libraries.\n\n```\ntimezone\n```\nYou must use ISO-8601 date strings that include timezones when you use timestamps withEngage. If you send custom traits without a timezone, Segment doesn\u2019t save the timestamp value.\n\n## Timestamp overview\n\n```\noriginalTimestamp\n```\n\n```\ntimestamp\n```\n\n```\ntimestamp\n```\n\n```\noriginalTimestamp\n```\n\n```\nsentAt\n```\n\n```\nsentAt\n```\n\n```\ntimestamp\n```\n\n```\nsentAt\n```\n\n```\nreceivedAt\n```\n\n```\ntimestamp\n```\n\n```\nreceivedAt\n```\n\n```\ntimestamp\n```\n\n```\nreceivedAt\n```\n\n```\nsentAt\n```\n\n```\noriginalTimestamp\n```\n\n## originalTimestamp\nTheoriginalTimestamptells you when call was invoked on the client device or the value oftimestampthat you manually passed in.\n\n```\noriginalTimestamp\n```\n\n```\ntimestamp\n```\nNote:TheoriginalTimestamptimestamp is not useful for any analysis since it\u2019s not always trustworthy as it can be easily adjusted and affected by clock skew.\n\n```\noriginalTimestamp\n```\n\n## sentAt\nThesentAttimestamp specifies the clock time for the client\u2019s device when the network request was made to the Segment API. For libraries and systems that send batched requests, there can be a long gap between a datapoint\u2019stimestampandsentAt. Combined withreceivedAt, Segment usessentAtto correct the originaltimestampin situations where a user\u2019s device clock cannot be trusted (mobile phones and browsers). ThesentAtandreceivedAttimestamps are assumed to occur at the same time (maximum a few hundred milliseconds), and therefore the difference is the user\u2019s device clock skew, which can be applied back to correct thetimestamp.\n\n```\nsentAt\n```\n\n```\ntimestamp\n```\n\n```\nsentAt\n```\n\n```\nreceivedAt\n```\n\n```\nsentAt\n```\n\n```\ntimestamp\n```\n\n```\nsentAt\n```\n\n```\nreceivedAt\n```\n\n```\ntimestamp\n```\nNote:ThesentAttimestamp is not useful for any analysis since it\u2019s tainted by user\u2019s clock skew.\n\n```\nsentAt\n```\nSegment now adds `sentAt` to a payload when the batch is complete and initially tried to the Segment API for the Swift, Kotlin, and C# mobile libraries\nThis update changes the value of the Segment-calculatedtimestampto align closer with thereceivedAtvalue rather than theoriginalTimestampvalue. For most users who are online when events are sent, this does not significantly impact their data. However, if your application utilizes an offline mode where events are queued up for any period of time, thetimestampvalue for those users now more closely reflects when Segment received the events rather than the time they occurred on the users\u2019 devices.\n\n```\ntimestamp\n```\n\n```\nreceivedAt\n```\n\n```\noriginalTimestamp\n```\n\n```\ntimestamp\n```\n\n## receivedAt\nThereceivedAttimestamp is added to incoming messages as soon as they hit the API. It\u2019s used in combination withsentAtto correct clock skew, and also to aid with debugging libraries and systems that deliver events in batches.\n\n```\nreceivedAt\n```\n\n```\nsentAt\n```\nThereceivedAttimestamp is most important as the sort key in Segment\u2019s Warehouses product. Use this for max query speed when retrieving data from your Warehouse.\n\n```\nreceivedAt\n```\nNote:Chronological order of events is not ensured withreceivedAt.\n\n```\nreceivedAt\n```\n\n## timestamp\nThetimestamptimestamp specifies when the data point occurred, corrected for client-device clock skew. This is the timestamp that is passed to downstream destinations and used for historical replays. It is important to use this timestamp for importing historical data to the API.\n\n```\ntimestamp\n```\nIf you are using the Segment server Source libraries, or passing calls directly to the HTTP API endpoint, you can manually set thetimestampfield. This change updates theoriginalTimestampfield of the Segment event. If you use a Segment Source in device mode, the library generatestimestampand you cannot manually set one directly in the call payload.\n\n```\ntimestamp\n```\n\n```\noriginalTimestamp\n```\n\n```\ntimestamp\n```\nSegment calculatestimestampastimestamp = receivedAt - (sentAt - originalTimeStamp).\n\n```\ntimestamp\n```\n\n```\ntimestamp = receivedAt - (sentAt - originalTimeStamp)\n```\nFor client-side tracking it\u2019s possible for the client to spoof theoriginalTimeStamp, which may result in a calculatedtimestampvalue set in the future.\n\n```\noriginalTimeStamp\n```\n\n```\ntimestamp\n```\n\n## FAQ\n\n## Why Are Events Received with Timestamps Set in the Past or Future?\nIf you\u2019re using one of Segment\u2019s client-side libraries, please note that several factors can cause timestamp discrepancies in your event data.\n- Overriding Timestamp Value:When a manual timestamp is set in the payload with a date in the past, it can cause events to appear as if they were sent earlier than they actually were.\n- When a manual timestamp is set in the payload with a date in the past, it can cause events to appear as if they were sent earlier than they actually were.\n- Analytics.js Source with Retries Enabled:TheRetriesfeature supports offline traffic by queuing events in Analytics.js. These events are sent or retried later when an internet connection is available, keeping the original timestamp intact.\n- TheRetriesfeature supports offline traffic by queuing events in Analytics.js. These events are sent or retried later when an internet connection is available, keeping the original timestamp intact.\n- Mobile App Backgrounded or Closed:If a user closes the app, events may be queued within the app. These queued events won\u2019t be sent until the app is re-opened, potentially in the future, leading to timestamp discrepancies.\n- If a user closes the app, events may be queued within the app. These queued events won\u2019t be sent until the app is re-opened, potentially in the future, leading to timestamp discrepancies.\n- Inaccurate Browser/Device Clock Settings:Timestamps can be incorrect if the client\u2019s device time is inaccurate, as theoriginalTimestamprelies on the client device\u2019s clock, which can be manually adjusted.\n- Timestamps can be incorrect if the client\u2019s device time is inaccurate, as theoriginalTimestamprelies on the client device\u2019s clock, which can be manually adjusted.\n\n```\noriginalTimestamp\n```\n- Traffic from Internet Bots:Internet Botscan sometimes send requests with unusual timestamps, either intentionally or due to incorrect settings, leading to discrepancies.\n- Internet Botscan sometimes send requests with unusual timestamps, either intentionally or due to incorrect settings, leading to discrepancies.\nThis page was last modified: 06 Feb 2025\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/spec/common/"
  },
  {
    "title": " Spec: Semantic Events | Segment Documentation",
    "content": "- Home\n- /\n- Connections\n- /\n- Spec\n- /\n- Spec: Semantic Events\n\n## Spec: Semantic Events\nOne of the core components of the SegmentSpecis theTrackcall. It describes any arbitrary event that the user has triggered. For some industry verticals and applications, Segment has standardized event names. For Ecommerce tracking, for example, there arespecific event names and propertiesthat we recognize semantically. This semantic meaning allows Segment to specially recognize and transform key events before sending them off to each different tool.\nThere are a few places where Segment has standardized event names and properties already:\n- Mobile\n- A/B Testing\n- Ecommerce\n- Email\n- Live Chat\n- Video\nIn the future Segment plans to standardize event names from other data sources as well.\nThis page was last modified: 21 Nov 2023\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/spec/semantic/"
  },
  {
    "title": " Segment for Developers | Segment Documentation",
    "content": "- Home\n- /\n- Guides\n- /\n- Segment for Developers\n\n## Segment for Developers\nOn this page\n- What does Segment do?\n- Types of Segment messages\n- Anatomy of a Segment message\n- Message schemas, Blocks, and Specs\n- Sources and Destinations\n- Connection modes\n- Planning your Segment implementation\n- How do I test if it\u2019s working?\n- How do I filter my data?\n- Troubleshooting\n- Segment Terraform Provider\nThis guide explains all you need to know to get started with your Segment implementation, and directs you to more resources depending on your specific needs.\nIf you haven\u2019t already, you should read thedetailed explanation of Segmenton the previous page!\n\n## Segment University: Segment in Action\nSee a quick example of Segment working on an ecommerce website. (Must be logged in to access.)\n\n## What does Segment do?\nSegment sends messages about activities in your mobile apps, websites or servers, receives those messages, and translates and forwards the message content to Destination tools. It also can send the contents of those messages to a bulk storage destination for archiving. In more complicated implementations, Segment can serve as a wrapper to trigger messages directly to other APIs, and can inspect, correct, classify and block the message contents.\n\n## Types of Segment messages\nSegment\u2019s libraries generate and send messages to our tracking API in JSON format, and provide a standard structure for the basic API calls. We also provide recommended JSON structure (also known as a schema, or \u2018Spec\u2019) that helps keep the most important parts of your data consistent, while allowing great flexibility in what other information you collect and where.\nThere are six calls in the basic tracking API, which answer specific questions:\n- Identify: Who is the user?\n- Track: What are they doing?\n- Page: What web page are they on?\n- Screen: What app screen are they on?\n- Group: What account or organization are they part of?\n- Alias: What was their past identity?\nAmong these calls, you can think of Identify, Group, and Alias as similar types of calls, all to do with updating our understanding of the user who is triggering Segment messages. You can think of these calls as adding information to, or updating an object record in a database.Objectsare described using \u201ctraits\u201d, which you can collect as part of your calls.\nThe other three, Track, Page, and Screen, can be considered as increasingly specific types of events.Eventscan occur multiple times, but generate separate records which append to a list, instead of being updated over time.\nA Track call is the most basic type of call, and can represent any type of event. Page and Screen are similar and are triggered by a user viewing a page or screen, however Page calls can come from both web and mobile-web views, while Screen callsonlyoccur on mobile devices. Because of the difference in platform, the context information collected is very different between the two types of calls.\nTip! Segment recommends that you always use the Page and Screen calls when recording a page-view, rather than creating a \u201cPage Viewed\u201d event, because the Page/Screen calls automatically collect much better context information.\n\n## Anatomy of a Segment message\nThe most basic Segment message requires only auserIDoranonymousID; all other fields are optional to allow for maximum flexibility. However, a normal Segment message has three main parts: thecommon fields, the\u201ccontext\u201d object, and the properties (if it\u2019s an event) or traits (if it\u2019s an object).\n\n```\nuserID\n```\n\n```\nanonymousID\n```\nThe common fields include information specific to how the call was generated, like the timestamp and library name and version. The fields in the context object are usually generated by the library, and include information about the environment in which the call was generated: page path, user agent, OS, locale settings, etc. The properties and traits are optional and are where you customize the information you want to collect for your implementation.\nAnother common part of a Segment message istheintegrationsobject, which you can use to explicitly filter which destinations the call is forwarded to. However this object is optional, and is often omitted in favor of non-code based filtering options.\n\n```\nintegrations\n```\n\n## Message schemas, Blocks, and Specs\nThe Segment \u201cSpecs\u201d provide recommended message schemas - the information we recommend that you collect - for each type of call. These are recommendations not requirements, but if you follow these schema guidelines the Segment servers can more easily identify parts of your messages, and translate them to downstream tools.\nIn addition to the recommended message schemas, Segment also provides \u201cblocks\u201d: recommendations on what information to collect and how to format it, for different industries and use cases. These are recommendations only, but by collecting all of the information in these blocks, you can ensure that common tools used in that use-case have the information they need to function.\nA third section of the Spec is the \u201cindustry specs\u201d which provide recommendations that include an explicit translation or mapping in the Segment servers, to best power the downstream Destinations commonly used in these industries.\n\n## Sources and Destinations\nWhen you start out, you create a Workspace, which serves as a container for all of your Sources and Destinations.\nSegment hasSourcesandDestinations. Sources send dataintoSegment, while Destinations receive datafromSegment.\nSegment has five types of sources: Web (Analytics.js), Mobile, Server, and Cloud App, plus a fifth type: User-createdSource Functions. Web, Mobile, and Server sources send first-party data from your digital properties. Cloud-app sources send data about your users from your connected web apps, for example a ticketing system such asZendesk, a payments system such asStripe, or a marketing tool likeBraze.\n\n## Connection modes\nSegment has several types of sources, and many destinations can accept data from all of them. However, some are only compatible with specific source types (for example, web only, or server only). To find out which source types a specific destination can accept data from, check the documentation for that destination for a \u201cSupported Sources and Connection Modes\u201d section.\nSegment\u2019s web source (Analytics.js), and native client-side libraries (iOS, Android, React-native) allow you to choose how you send data to Segment from your website or app. There are two ways to send data:\n- Cloud-mode: The sources send data directly to the Segment servers, which then translate it for each connected downstream destination, and send it on. Translation is done on the Segment servers, keeping your page size, method count, and load time small.Healthcare and Life Sciences (HLS) customers can encrypt data flowing into their destinationsHLS customers with a HIPAA eligible workspace can encrypt data in fields marked as Yellow in the Privacy Portal before they flow into an event stream, cloud-mode destination.To learn more about data encryption, see theHIPAA Eligible Segment documentation\nCloud-mode: The sources send data directly to the Segment servers, which then translate it for each connected downstream destination, and send it on. Translation is done on the Segment servers, keeping your page size, method count, and load time small.\nHealthcare and Life Sciences (HLS) customers can encrypt data flowing into their destinations\nHLS customers with a HIPAA eligible workspace can encrypt data in fields marked as Yellow in the Privacy Portal before they flow into an event stream, cloud-mode destination.To learn more about data encryption, see theHIPAA Eligible Segment documentation\n- Device-mode: You include additional code on your website or mobile app which allows Segment to use the data you collect on the device to make calls directly to the destination tool\u2019s API, without sending it to the Segment serversfirst. (You still send your data to the Segment servers, but this occurs asynchronously.) This is also calledwrappingorbundling, and it might be required when the source has to be loaded on the page to work, or loaded directly on the device to function correctly. When you use Analytics.js, you can change the device-mode destinations that a specific source sends from within the Segment web app, without touching any code.\nDevice-mode: You include additional code on your website or mobile app which allows Segment to use the data you collect on the device to make calls directly to the destination tool\u2019s API, without sending it to the Segment serversfirst. (You still send your data to the Segment servers, but this occurs asynchronously.) This is also calledwrappingorbundling, and it might be required when the source has to be loaded on the page to work, or loaded directly on the device to function correctly. When you use Analytics.js, you can change the device-mode destinations that a specific source sends from within the Segment web app, without touching any code.\nIf you use Server source libraries, they only send data directly to Segment in Cloud-mode. Server library implementations operate in the server backend, and can't load additional destination SDKs.\nTo learn more about connection modes and when you should use each, see thedetails in the Destinations docs.\n\n## Planning your Segment implementation\nThe journey of a thousand miles begins, ideally, with a plan. Regardless of if you\u2019re a new company just implementing analytics for the first time, or a multi\u2013national corporation modernizing your analytics stack, it\u2019s a great idea tostart with a Tracking Plan. For new implementations, this can be as simple as a document where you write down these four things for each item you track:\n- What am I tracking? (What is the event name or type?)\n- Why am I tracking it? (What questions does this data answer?)\n- For whom am I tracking it? (Who owns this question, tool, or business area?)\n- Where (which destination tools) do I want to send this data to?\nIf you\u2019re a large or long-established organization and you\u2019re replacing existing tools, you\u2019ll want to spend more time on this to maintain analytic parity and continuity of tooling. We highly recommendreading up on tracking plansandschemasforProtocols, our tool for managing and sharing tracking plans and enforcing schemas.\nRegardless of your organization\u2019s size or age, you\u2019ll want to take an inventory of the destination tools you\u2019ll be using with Segment, and make a list of the connection modes each one accepts. This makes it easier to check off when you\u2019ve implemented each one, so you\u2019re not missing anything.\n\n## How do I test if it\u2019s working?\nThere are several ways to check if your data is flowing. One is theDebugger tab in each Sourcein the Segment web app, where you can see data coming from a source into Segment. Another is theEvent Delivery toolwhich shows which data is arriving at specific destinations.\nFor monitoring purposes, you\u2019ll also see alerts in theWorkspace Healthtool if your sources or destinations produce repeated errors.\n\n## How do I filter my data?\nThere are several different ways to ensure that you can collect your data once, but filter it out of specific destinations. SeeFiltering Datafor a list of the available methods and descriptions.\n\n## Troubleshooting\nIf you\u2019re seeing errors thrown by your destinations, you might have an implementation issue. See theIntegration Error Codes listorcontact our Success engineering teamfor help.\nHave suggestions for things to add to this guide?Drop us a line.\n\n## Segment Terraform Provider\nSegment has aTerraformprovider, powered by the Public API, that you can use to manage Segment resources, automate cloud deployments, and change control. Take a look at theSegment provider documentationon Terraform to see what\u2019s supported.\nThis page was last modified: 09 Apr 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/guides/intro-impl/"
  },
  {
    "title": " How to Guides Index | Segment Documentation",
    "content": "- Home\n- /\n- Guides\n- /\n- How to Guides Index\n\n## How to Guides Index\nOn this page\n- Implementation\n- Engagement and Automation\n- Analytics\n- Quickstart Guides\nSegment\u2019s How-to Guides provide an in-depth walk through and examples of the many things you can do to implement, automate, engage with, and begin analyzing your data. We\u2019ve also got a series ofQuickstart Guidesfor each of our Source libraries.\n\n## Implementation\n- What are best practices for identifying users?\n- Should I collect data on the client or server?\n- How do I collect page views on the server side?\n- How do I import historical data?\n- How do I join user profiles?\n- How do I migrate code from other analytics tools?\n\n## Engagement and Automation\n- What role does Segment play in Attribution?\n- How do I automate multi-channel re-engagement campaigns?\n- How do I create a push notification?\n- How do we track customers across channels and devices?\n- How do I set up a dynamic coupon program to reward loyal customers?\n- How do we set up event-triggered notifications or alerts?\n\n## Analytics\n- How do I forecast Long Term Value with SQL and Excel for e-commerce?\n- How do I measure my advertising funnel?\n- How do I measure the ROI of my Marketing Campaigns?\n\n## Quickstart Guides\n- Analytics.js (Javascript) Quickstart Guide\n- .NET Quickstart Guide\n- Go Library Quickstart Guide\n- Python Library Quickstart Guide\n- Java Library Quickstart Guide\n- PHP Library Quickstart Guide\n- Node.js Library Quickstart Guide\n- Ruby Library Quickstart Guide\n- iOS Quickstart Guide\n- Android Quickstart Guide\nThis page was last modified: 25 Apr 2022\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/guides/how-to-guides/"
  },
  {
    "title": " Analytics.js Source | Segment Documentation",
    "content": "- Home\n- /\n- Connections\n- /\n- Sources\n- /\n- Catalog\n- /\n- Libraries\n- /\n- Website\n- /\n- Analytics.js Source\n\n## Analytics.js Source\nFlagship libraries offer the most up-to-date functionality on Segment\u2019s most popular platforms. Segment actively maintains flagship libraries, which benefit from new feature releases and ongoing development and support.\nOn this page\n- Getting started\n- Benefits of Analytics.js\n- Basic tracking methods\n- Utility methods\n- Managing data flow with the Integrations object\n- Retries\n- Delivery strategy configuration\n- Batching\n- Plugins and source middleware\n- Video player plugins\n- Cross-subdomain analytics\n- UTM Tracking\n- Analytics.js performance\n- Tracking Blockers and Browser Privacy Settings\n- Installing the library under a custom global namespace\n- Add destinations from npm\n- Segment Inspector\n- Example uses\n- External dependencies\nAnalytics.js enables you to send your data to hundreds ofdestination toolswithout having to learn, test, or use a new API every time.\nSegment\u2019s Analytics.js library is fully open-source and can be viewed onGitHub.\n\n## Getting started\nUse theAnalytics.js QuickStart Guideto learn how to add Analytics.js to your site. Once you\u2019ve installed the library, read on for the detailed API reference.\n\n## Benefits of Analytics.js\nAnalytics.js provides two key benefits over the previous version.\n\n## Performance\nAnalytics.js reduces page load time and improves site performance. Its package size is~70%smaller than its predecessor, the classic version of Analytics.js.\nMany factors impact page load time, including network conditions, hosting locations, and page weight. Page weight for each customer integration varies based on the number of device-mode destinations that are enabled for each source. The more device-mode destinations that are enabled, the more data gets added to the library, which will impact the weight of the library.\n\n## Developer experience\nAnalytics.js improves developer experience by introducing new ways for developers to augment events throughout the event timeline. For example, developers can augment events either before or after an event occurs, or while the event is in-flight.\nFor example, you can use Analytics.js to build features that:\n- Ensure you have user consent to track before an event fires\n- Enrich events with customer or page context while in-flight with middleware\n- Check an event for errors after the event is sent to Segment\n\n## Basic tracking methods\nThe basic tracking methods below serve as the building blocks of your Segment tracking. They includeIdentify,Track,Page,Group, andAlias.\nThese methods correspond with those used in theSegment Spec. The documentation on this page explains how to use these methods in Analytics.js.\nGood to know\nFor any of the methods described in this page, you can replace the properties in the code samples with variables that represent the data collected.\n\n## Identify\nUse theidentifymethod to link your users and their actions, to a recognizableuserIdandtraits. You can seeanidentifyexample in the Quickstart guideorfind details on the identify method payload.\n\n```\nidentify\n```\n\n```\nuserId\n```\n\n```\ntraits\n```\n\n```\nidentify\n```\n`identify` and anonymous visitors\nSegment recommendsagainstusingidentifyfor anonymous visitors to your site. Analytics.js automatically retrieves ananonymousIdfromlocalStorageor assigns one for new visitors, and then attaches it to allpageandtrackevents both before and after anidentify.\n\n```\nidentify\n```\n\n```\nanonymousId\n```\n\n```\nlocalStorage\n```\n\n```\npage\n```\n\n```\ntrack\n```\n\n```\nidentify\n```\nThe Identify method follows the format below:\n\n```\nanalytics.identify([userId],[traits],[options],[callback]);\n```\n\n```\nanalytics.identify([userId],[traits],[options],[callback]);\n```\nThe Identify call has the following fields:\n\n```\nuserId\n```\n\n```\nuserId\n```\n\n```\ntraits\n```\n\n```\ntraits\n```\n\n```\nemail\n```\n\n```\nname\n```\n\n```\noptions\n```\n\n```\ntraits\n```\n\n```\noptions\n```\n\n```\ncallback\n```\nBy default, Analytics.js caches traits in the browser\u2019slocalStorageand attaches them to each Identify call.\n\n```\nlocalStorage\n```\nFor example, you might call Identify when someone signs up for a newsletter but hasn\u2019t yet created an account on your site. The example below shows an Identify call (using hard-coded traits) that you might send in this case.\n\n```\nanalytics.identify({nickname:'Amazing Grace',favoriteCompiler:'A-0',industry:'Computer Science'});\n```\n\n```\nanalytics.identify({nickname:'Amazing Grace',favoriteCompiler:'A-0',industry:'Computer Science'});\n```\nThen, when the user completes the sign up process, you might see the following:\n\n```\nanalytics.identify('12091906-01011992',{name:'Grace Hopper',email:'grace@usnavy.gov'});\n```\n\n```\nanalytics.identify('12091906-01011992',{name:'Grace Hopper',email:'grace@usnavy.gov'});\n```\nThe traits object for the second call also includesnickname,favoriteCompiler, andindustry.\n\n```\nnickname\n```\n\n```\nfavoriteCompiler\n```\n\n```\nindustry\n```\nYou may omit both traits and options, and pass the callback as the second argument.\n\n```\nanalytics.identify('12091906-01011992',function(){// Do something after the identify request has been sent// Note: site-critical functionality should not depend on your analytics provider});\n```\n\n```\nanalytics.identify('12091906-01011992',function(){// Do something after the identify request has been sent// Note: site-critical functionality should not depend on your analytics provider});\n```\n\n## Track\nThe Track method lets you record actions your users perform. You cansee a track example in the Quickstart guideor find details onthe track method payload.\nThe Track method follows the format below:\n\n```\nanalytics.track(event,[properties],[options],[callback]);\n```\n\n```\nanalytics.track(event,[properties],[options],[callback]);\n```\nThetrackcall has the following fields:\n\n```\ntrack\n```\n\n```\nevent\n```\n\n```\nproperties\n```\n\n```\n'Added to Cart'\n```\n\n```\nprice\n```\n\n```\nproductType\n```\n\n```\noptions\n```\n\n```\nproperties\n```\n\n```\noptions\n```\n\n```\ncallback\n```\nThe only required argument in Analytics.js is anevent name string. You can read more abouthow Segment recommends you name events.\nExample Track call:\n\n```\nanalytics.track('Article Completed',{title:'How to Create a Tracking Plan',course:'Intro to Analytics',});\n```\n\n```\nanalytics.track('Article Completed',{title:'How to Create a Tracking Plan',course:'Intro to Analytics',});\n```\nFor more information about choosing which events to track, event naming, and more, check outAnalytics Academy.\nThe only required argument on Track calls in Analytics.js is aneventname string. Read more about how Segment recommendsnaming your events.\n\n```\nevent\n```\n\n## Track link\ntrackLinkis a helper method that attaches thetrackcall as a handler to a link.\nWithtrackLink, Analytics.js inserts a timeout of 300 ms to give thetrackcall more time. This is useful when a page would redirect before thetrackmethod could complete all requests.\n\n```\ntrackLink\n```\n\n```\ntrack\n```\n\n```\ntrackLink\n```\n\n```\ntrack\n```\n\n```\ntrack\n```\nThetrackLinkmethod follows the format below.\n\n```\ntrackLink\n```\n\n```\nanalytics.trackLink(element,event,[properties])\n```\n\n```\nanalytics.trackLink(element,event,[properties])\n```\n\n```\nelement(s)\n```\n\n```\ntrack\n```\n\n```\nevent\n```\n\n```\ntrack\n```\n\n```\ntrack\n```\n\n```\nproperties\n```\n\n```\nproperties\n```\nExample:\n\n```\nvarlink=document.getElementById('free-trial-link');analytics.trackLink(link,'Clicked Free-Trial Link',{plan:'Enterprise'});\n```\n\n```\nvarlink=document.getElementById('free-trial-link');analytics.trackLink(link,'Clicked Free-Trial Link',{plan:'Enterprise'});\n```\n\n## Track form\ntrackFormis a helper method that binds atrackcall to a form submission.\nThetrackFormmethod inserts a timeout of 300 ms to give thetrackcall more time to complete. This is useful to prevent a page from redirecting before thetrackmethod could complete all requests.\n\n```\ntrackForm\n```\n\n```\ntrack\n```\n\n```\ntrackForm\n```\n\n```\ntrack\n```\n\n```\ntrack\n```\nThetrackFormmethod follows the format below.\n\n```\ntrackForm\n```\n\n```\nanalytics.trackForm(form,event,[properties])\n```\n\n```\nanalytics.trackForm(form,event,[properties])\n```\n\n```\nform(s)\n```\n\n```\nevent\n```\n\n```\ntrack\n```\n\n```\ntrack\n```\n\n```\nproperties\n```\n\n```\nproperties\n```\nExample:\n\n```\nvarform=document.getElementById('signup-form');analytics.trackForm(form,'Signed Up',{plan:'Premium',revenue:99.00});\n```\n\n```\nvarform=document.getElementById('signup-form');analytics.trackForm(form,'Signed Up',{plan:'Premium',revenue:99.00});\n```\n\n## Page\nThePagemethod lets you record page views on your website, along with optional extra information about the page viewed by the user.\nBecause some Destinations require apagecall to instantiate their libraries,you must callpageat least once per page load. You can call it more than once if needed, for example, on virtual page changes in a single page app.\n\n```\npage\n```\n\n```\npage\n```\nSee the implementation guide for more information aboutcalling the Page method.\nAnalytics.js includes a Page call by default as the final line inthe Analytics.js snippet. You can update thispagecall within the guidelines below.\n\n```\npage\n```\nThepagemethod follows the format below.\n\n```\npage\n```\n\n```\nanalytics.page([category],[name],[properties],[options],[callback]);\n```\n\n```\nanalytics.page([category],[name],[properties],[options],[callback]);\n```\nThepagecall has the following fields:\n\n```\npage\n```\n\n```\ncategory\n```\n\n```\npage\n```\n\n```\nname\n```\n\n```\nname\n```\n\n```\ncategory\n```\n\n```\nname\n```\n\n```\nproperties\n```\n\n```\nurl\n```\n\n```\ntitle\n```\n\n```\nreferrer\n```\n\n```\npath\n```\n\n```\ncanonical url\n```\n\n```\ndocument.location.href\n```\n\n```\noptions\n```\n\n```\nproperties\n```\n\n```\noptions\n```\n\n```\ncallback\n```\n\n## Default page properties\nAnalytics.js adds properties to eachpagecall.\n\n```\npage\n```\n\n```\nanalytics.page('Pricing');\n```\n\n```\nanalytics.page('Pricing');\n```\nSegment adds the following information:\n\n```\nanalytics.page('Pricing',{title:'Segment Pricing',url:'https://segment.com/pricing',path:'/pricing',referrer:'https://segment.com/warehouses'});\n```\n\n```\nanalytics.page('Pricing',{title:'Segment Pricing',url:'https://segment.com/pricing',path:'/pricing',referrer:'https://segment.com/warehouses'});\n```\nYou can override these values by explicitly setting them in your calls. For example:\n\n```\nanalytics.page('Pricing',{title:'My Overridden Title',path:'/pricing/view'});\n```\n\n```\nanalytics.page('Pricing',{title:'My Overridden Title',path:'/pricing/view'});\n```\nTranslates to:\n\n```\nanalytics.page('Pricing',{title:'My Overridden Title',url:'https://segment.com/pricing',path:'/pricing/view',referrer:'https://segment.com/warehouses'});\n```\n\n```\nanalytics.page('Pricing',{title:'My Overridden Title',url:'https://segment.com/pricing',path:'/pricing/view',referrer:'https://segment.com/warehouses'});\n```\nSegment sets thepathandurlproperty to the value of the canonical element on your page. If a canonical element is not set, the values will be set from the browser.\n\n```\npath\n```\n\n```\nurl\n```\n\n## Group\nThe Group method associates anidentified userwith a company, organization, project, workspace, team, tribe, platoon, assemblage, cluster, troop, gang, party, society or any other collective noun you come up with for the same concept.\nThis is useful fortools likeIntercom,Preact, andTotango, as it ties the user to agroupof other users.\nThe Group method follows the format below.\n\n```\nanalytics.group(groupId,[traits],[options],[callback]);\n```\n\n```\nanalytics.group(groupId,[traits],[options],[callback]);\n```\nThe Group call has the following fields:\n\n```\ngroupId\n```\n\n```\ntraits\n```\n\n```\naddress\n```\n\n```\nwebsite\n```\n\n```\nemployees\n```\n\n```\noptions\n```\n\n```\nproperties\n```\n\n```\noptions\n```\n\n```\ncallback\n```\nExamplegroupcall:\n\n```\ngroup\n```\n\n```\nanalytics.group('UNIVAC Working Group',{principles:['Eckert','Mauchly'],site:'Eckert\u2013Mauchly Computer Corporation',statedGoals:'Develop the first commercial computer',industry:'Technology'});\n```\n\n```\nanalytics.group('UNIVAC Working Group',{principles:['Eckert','Mauchly'],site:'Eckert\u2013Mauchly Computer Corporation',statedGoals:'Develop the first commercial computer',industry:'Technology'});\n```\nBy default, Analytics.js caches grouptraitsin the browser\u2019s local storage and attaches them to eachgroupcall, similar to how theidentifymethod works.\n\n```\ntraits\n```\n\n```\ngroup\n```\n\n```\nidentify\n```\nFind more details aboutgroup, including thegrouppayload, inthe Group Spec.\n\n```\ngroup\n```\n\n```\ngroup\n```\n\n## Alias\nThe Alias method combines two unassociated user identities. Segment usually handles aliasing automatically when you callidentifyon a user, however some tools require an explicitaliascall.\n\n```\nidentify\n```\n\n```\nalias\n```\nThis is an advanced method, but it\u2019s required to manage user identities successfully insomeSegment destinations likeKissmetricsandMixpanel.\nThe Alias method follows the format below:\n\n```\nanalytics.alias(userId,[previousId],[options],[callback]);\n```\n\n```\nanalytics.alias(userId,[previousId],[options],[callback]);\n```\nThe Alias call has the following fields:\n\n```\nuserId\n```\n\n```\npreviousId\n```\n\n```\noptions\n```\n\n```\ncallback\n```\nFor more details about Alias, including thealiascall payload, check out theSegment Spec.\n\n```\nalias\n```\n\n## Utility methods\nThe Analytics.js utility methods help you change how Segment loads on your page. They include:\n- Load\n- Ready\n- Debug\n- On (Emitter)\n- Timeout\n- Reset (Logout)\n\n## Load\nTheloadmethod is also available when you load analytics.js through theNPM package.\n\n```\nload\n```\nYou can load a buffered version of analytics.js that requires you to callloadexplicitly before analytics.js initiates any network activity. This is useful if you want to, for example, wait for user consent before you fetch tracking destinations or send buffered events to Segment.\n\n```\nload\n```\nCallloadone time only.\n\n```\nload\n```\n\n```\nexportconstanalytics=newAnalyticsBrowser()analytics.identify(\"hello world\")if(userConsentsToBeingTracked){analytics.load({writeKey:'<YOUR_WRITE_KEY>'})// destinations loaded, enqueued events are flushed}\n```\n\n```\nexportconstanalytics=newAnalyticsBrowser()analytics.identify(\"hello world\")if(userConsentsToBeingTracked){analytics.load({writeKey:'<YOUR_WRITE_KEY>'})// destinations loaded, enqueued events are flushed}\n```\nYou can also useloadif you fetch some settings asynchronously.\n\n```\nload\n```\n\n```\nconstanalytics=newAnalyticsBrowser()fetchWriteKey().then(writeKey=>analytics.load({writeKey}))analytics.identify(\"hello world\")\n```\n\n```\nconstanalytics=newAnalyticsBrowser()fetchWriteKey().then(writeKey=>analytics.load({writeKey}))analytics.identify(\"hello world\")\n```\n\n## Ready\nThereadymethod lets you pass in a method that gets called after Analytics.js finishes initializing and after all enabled device-mode destinations load. It\u2019s likejQuery\u2019sreadymethod, except for Destinations. Because it doesn\u2019t fire until all enabled device-mode destinations are loaded, it can\u2019t be used to change configuration options for downstream SDKs. That can only be done if the SDK is loaded natively.\n\n```\nready\n```\n\n```\nready\n```\nThereadymethod isn\u2019t invoked if any Destination throws an error (for example, for an expired API key, incorrect settings configuration, or when a Destination is blocked by the browser) during initialization. If you want to check when Analytics.js has loaded, you can look at the value ofwindow.analytics.initialized. When it\u2019s true, the library has successfully initialized, even if some destinations are blocked.\n\n```\nready\n```\n\n```\nwindow.analytics.initialized\n```\nNote:window.analytics.initializedis a simple boolean, not an event or a pub/sub system. This means you can\u2019t subscribe to changes in its value. If you need to detect when it changes fromfalsetotrue, you must set up a polling mechanism to monitor the value.\n\n```\nwindow.analytics.initialized\n```\n\n```\nfalse\n```\n\n```\ntrue\n```\nThe code in thereadyfunction only executes afterreadyis emitted.\n\n```\nready\n```\n\n```\nready\n```\nIf you want to access end-tool library methods that do not match any Analytics.js methods, like adding an extra setting to Mixpanel, you can use areadycallback so that you\u2019re guaranteed to have access to the Mixpanel object, like so:\n\n```\nready\n```\n\n```\nanalytics.ready(()=>{window.mixpanel.set_config({verbose:true});});\n```\n\n```\nanalytics.ready(()=>{window.mixpanel.set_config({verbose:true});});\n```\nThereadymethod uses the following format:\n\n```\nready\n```\n\n```\nanalytics.ready(callback);\n```\n\n```\nanalytics.ready(callback);\n```\nThereadymethod has the following fields:\n\n```\nready\n```\n\n```\ncallback\n```\n\n## Debug\nCalling thedebugmethod turns on debug mode, which logs helpful messages to the console. Subsequent Segment events generate messages in the developer console after you invokedebug.\n\n```\ndebug\n```\n\n```\ndebug\n```\nEnable:\n\n```\nanalytics.debug(true);\n```\n\n```\nanalytics.debug(true);\n```\nDisable:\n\n```\nanalytics.debug(false);\n```\n\n```\nanalytics.debug(false);\n```\n\n## Emitter\nThe globalanalyticsobject emits events whenever you callalias,group,identify,track, orpage.\n\n```\nanalytics\n```\n\n```\nalias\n```\n\n```\ngroup\n```\n\n```\nidentify\n```\n\n```\ntrack\n```\n\n```\npage\n```\nUse theonmethod to set listeners for these events and run your own custom code. This can be useful if you want to send data to a service for which Segment doesn\u2019t have a destination.\n\n```\non\n```\n\n```\nanalytics.on(method,callback);\n```\n\n```\nanalytics.on(method,callback);\n```\n\n```\nmethod\n```\n\n```\ncallback\n```\n\n```\nevent\n```\n\n```\nproperties\n```\n\n```\noptions\n```\nExample:\n\n```\nanalytics.on('track',(event,properties,options)=>{bigdataTool.push(['recordEvent',event]);});\n```\n\n```\nanalytics.on('track',(event,properties,options)=>{bigdataTool.push(['recordEvent',event]);});\n```\nThis method emits eventsbeforethey are processed by the Segment integration, and may not include some of the normalization Segment performs on the client before sending the data to the Segment servers.\nNote\nPage event properties are stored in theoptionsobject.\n\n```\noptions\n```\n\n## Extending timeout\nThetimeoutmethod sets the length (in milliseconds) of callbacks and helper functions. This is useful if you have multiple scripts that need to fire in your callback ortrackLink,trackFormhelper function.\n\n```\ntimeout\n```\n\n```\ntrackLink\n```\n\n```\ntrackForm\n```\nThe example below sets the timeout to 500 ms.\n\n```\nanalytics.timeout(500);\n```\n\n```\nanalytics.timeout(500);\n```\nIf you\u2019re triggering ad network conversion pixels, Segment recommends extending timeout to 500 ms to account for slow load times.\n\n## Reset or log out\nCallingresetresets theid, includinganonymousId, and clearstraitsfor the currently identified user and group.\n\n```\nreset\n```\n\n```\nid\n```\n\n```\nanonymousId\n```\n\n```\ntraits\n```\n\n```\nanalytics.reset();\n```\n\n```\nanalytics.reset();\n```\nTheresetmethod only clears the cookies andlocalStoragecreated by Segment. It doesn\u2019t clear data from other integrated tools, as those native libraries might set their own cookies to manage user tracking, sessions, and manage state. To completely clear out the user session, see the documentation provided by those tools.\n\n```\nreset\n```\n\n```\nlocalStorage\n```\nSegment doesn\u2019t sharelocalStorageacross subdomains. If you use Segment tracking on multiple subdomains, you must callanalytics.reset()for each subdomain to completely clear out the user session.\n\n```\nlocalStorage\n```\n\n```\nanalytics.reset()\n```\n\n## Managing data flow with the Integrations object\nTip: You can change how your data flows in several different ways without having to change your code. SeeFiltering Datato learn more.\nYou can pass anintegrationsobject in theoptionsof Alias, Group, Identify, Page, and Trackmethods to send data to only the selected destinations. By default, all Destinations are enabled.\n\n```\nintegrations\n```\n\n```\noptions\n```\nThe example below sends a message only to Intercom and Google Analytics.\n\n```\nanalytics.identify('user_123',{email:'jane.kim@example.com',name:'Jane Kim'},{integrations:{'All':false,'Intercom':true,'Google Analytics':true}});\n```\n\n```\nanalytics.identify('user_123',{email:'jane.kim@example.com',name:'Jane Kim'},{integrations:{'All':false,'Intercom':true,'Google Analytics':true}});\n```\n'All': falsetells Segment not to send data toanyDestinations by default, unless they\u2019re explicitly listed astruein the next lines.\n\n```\n'All': false\n```\n\n```\ntrue\n```\nAs an opposite example, the snippet below sends a message to all integrationsexceptIntercom and Google Analytics.\n\n```\nanalytics.identify('user_123',{email:'jane.kim@example.com',name:'Jane Kim'},{integrations:{'Intercom':false,'Google Analytics':false}});\n```\n\n```\nanalytics.identify('user_123',{email:'jane.kim@example.com',name:'Jane Kim'},{integrations:{'Intercom':false,'Google Analytics':false}});\n```\nYou don\u2019t need to include'All': truein this call because it\u2019s implied as the default behavior. Instead, only list the destinations that you want to exclude, with afalseflag for each.\n\n```\n'All': true\n```\n\n```\nfalse\n```\nDestination flags arecase sensitiveand matchthe destination\u2019s name in the docs(for example, \u201cAdLearn Open Platform\u201d, \u201cawe.sm\u201d, \u201cMailchimp\u201d, etc). If a Destination has more than one acceptable name, this appears in the documentation for that destination.\nBusiness tier customers can filter Track calls from the Source Schema page in the Segment UI. Segment recommends that you use the UI to simplify filter management and make updates without changing your site\u2019s code.\n\n## Load options\nNote:To use this feature, you must be on snippet version 4.1.0 or later. You can get the latest version of the snippet from theAnalytics.js Quickstart.\nYou can modify the.loadmethod in Analytics.js (the second line of the snippet) to take a second argument. If you pass an object with anintegrationsdictionary, then Segment only loads the integrations in that dictionary that are marked as enabled with the boolean valuetrue.\n\n```\n.load\n```\n\n```\nintegrations\n```\n\n```\ntrue\n```\nYou can only call.loadon page load, or reload (refresh). If you modify the.loadmethod between page loads, it doesn\u2019t have any effect until the page is reloaded.\n\n```\n.load\n```\n\n```\n.load\n```\nFor example:\n\n```\nanalytics.load('writekey',{integrations:{All:false,'Google Analytics':true,'Segment.io':true}})\n```\n\n```\nanalytics.load('writekey',{integrations:{All:false,'Google Analytics':true,'Segment.io':true}})\n```\nThis way, you can conditionally load integrations based on what customers opt into on your site. The example below shows how you might load only the tools that the user agreed to use.\n\n```\nonConsentDialogClosed((consentedTools)=>{analytics.load('writekey',{integrations:consentedTools})})\n```\n\n```\nonConsentDialogClosed((consentedTools)=>{analytics.load('writekey',{integrations:consentedTools})})\n```\n\n## Bundle obfuscation\nYou can also add anobfuscateproperty to the object in the second parameter, which obscures the URL from which your integrations and destination actions are loaded. This helps prevent words that are flagged by ad blockers to not be detected in your URL, enabling the integration to properly load.\n\n```\nobfuscate\n```\nFor example:\n\n```\nanalytics.load('writekey',{obfuscate:true})\n```\n\n```\nanalytics.load('writekey',{obfuscate:true})\n```\nTheobfuscatevalue isfalseby default.\n\n```\nobfuscate\n```\n\n```\nfalse\n```\n\n## ISO string conversion\nBy default, the Analytics.js library will convert ISO8061 strings to a Date object before passing it to downstream device-mode integrations. If you would like to disable this functionality and send those strings as they are passed to the event, you can use the load method to pass in thedisableAutoISOConversionoption.\n\n```\ndisableAutoISOConversion\n```\nFor example:\n\n```\nanalytics.load('writekey',{disableAutoISOConversion:true})\n```\n\n```\nanalytics.load('writekey',{disableAutoISOConversion:true})\n```\n\n## Client hints\nSomeuserAgentstrings are frozen and contain less information. If you would like to request more information when it\u2019s available, you can pass an array of strings with fields you would like to request to thehighEntropyValuesClientHintsoption. The example array below contains all possible values.\n\n```\nuserAgent\n```\n\n```\nhighEntropyValuesClientHints\n```\nFor example:\n\n```\nanalytics.load('writekey',{highEntropyValuesClientHints:['architecture','bitness','model','platformVersion','uaFullVersion','fullVersionList','wow64']})\n```\n\n```\nanalytics.load('writekey',{highEntropyValuesClientHints:['architecture','bitness','model','platformVersion','uaFullVersion','fullVersionList','wow64']})\n```\n\n## Disabling\nFor testing or staging environments, it can be useful to disable your SDK to ensure no events send.\nIfdisable: trueis passed, all analytics method calls will be a no-op, and no network calls will be initiated.\n\n```\ndisable: true\n```\n\n```\nanalytics.load('writekey',{disable:true})\n```\n\n```\nanalytics.load('writekey',{disable:true})\n```\nFor wrapper/plugin authors: if you have a use case where you need special access to the CDN Settings (for example, consent management), you can also pass a function. This API waits forcdnSettingsto be fetched. Keep in mind thatcdnSettingsis anunstableobject.\n\n```\ncdnSettings\n```\n\n```\ncdnSettings\n```\n\n```\nanalytics.load('writekey',{disable:(cdnSettings)=>true})\n```\n\n```\nanalytics.load('writekey',{disable:(cdnSettings)=>true})\n```\n\n## Retries\nWhen enabled, Analytics.js automatically retries network and server errors. With persistent retries, Analytics.js can:\n- Support offline tracking. Analytics.js queues your events and delivers them when the user comes back online.\n- Better handle network issues. When your application can\u2019t connect to the Segment API, Segment continues to store the events on the browser to prevent data loss.\nAnalytics.js stores events inlocalStorageand falls back to in-memory storage whenlocalStorageis unavailable. It retries up to 10 times with an incrementally increasing back-off time between each retry. Analytics.js queues up to 100 events at a time to avoid using too much of the device\u2019s local storage. See thedestination Retries documentationto learn more.\n\n```\nlocalStorage\n```\n\n```\nlocalStorage\n```\n\n## Delivery strategy configuration\nThedeliveryStrategy.configobject lets you customize how data is delivered to Segment. This includes options like setting custom headers and enablingkeepaliveto capture events during hard redirects.\n\n```\ndeliveryStrategy.config\n```\n\n```\nkeepalive\n```\n\n## Adding custom headers\nYou can override default headers by providing custom headers in your configuration. Use thedeliveryStrategy.config.headersoption to specify the headers, like in the following example:\n\n```\ndeliveryStrategy.config.headers\n```\n\n```\nanalytics.load(\"<YOUR_WRITE_KEY>\",{integrations:{'Segment.io':{deliveryStrategy:{config:{headers:{'x-api-key':'foo'}}}}}});##KeepaliveYoucanusethe`keepalive`optiontomakesurethatSegmentcapturesAPIcallstriggeredduringahardredirect.Whenenabled,`keepalive`willtrytofireeventsbeforetheredirectoccurs.Bydefault,`keepalive`issettofalse,becauseallfetchrequestswiththe`keepalive`flagaresubjecttoa64kbsizelimit.Additionally,`keepalive`requestssharethissizelimitwithallotherin-flight`keepalive`requests,regardlessofwhetherthey're related to Segment. This competition for resources can lead to data loss in some scenarios.\n\nSegment only uses `keepalive` by default if:\n- The browser detects that the page is unloading (like if the user closes the tab or navigates away).\n- You have batching enabled.\n\nTo enable `keepalive`, use the following configuration:\n\n```ts\nanalytics.load(\"<YOUR_WRITE_KEY>\", {\n  integrations: {'Segment.io': {\n      deliveryStrategy: {\n        config: {\n          keepalive: true\n        }\n      }\n    }\n  }\n});\n```\n\n```\nanalytics.load(\"<YOUR_WRITE_KEY>\",{integrations:{'Segment.io':{deliveryStrategy:{config:{headers:{'x-api-key':'foo'}}}}}});##KeepaliveYoucanusethe`keepalive`optiontomakesurethatSegmentcapturesAPIcallstriggeredduringahardredirect.Whenenabled,`keepalive`willtrytofireeventsbeforetheredirectoccurs.Bydefault,`keepalive`issettofalse,becauseallfetchrequestswiththe`keepalive`flagaresubjecttoa64kbsizelimit.Additionally,`keepalive`requestssharethissizelimitwithallotherin-flight`keepalive`requests,regardlessofwhetherthey're related to Segment. This competition for resources can lead to data loss in some scenarios.\n\nSegment only uses `keepalive` by default if:\n- The browser detects that the page is unloading (like if the user closes the tab or navigates away).\n- You have batching enabled.\n\nTo enable `keepalive`, use the following configuration:\n\n```ts\nanalytics.load(\"<YOUR_WRITE_KEY>\", {\n  integrations: {'Segment.io': {\n      deliveryStrategy: {\n        config: {\n          keepalive: true\n        }\n      }\n    }\n  }\n});\n```\n\n## Batching\nBatching is the ability to group multiple requests or calls into one request or API call. All requests sent within the same batch have the samereceivedAttime. With Analytics.js, you can send events to Segment in batches. Sending events in batches enables you to have:\n\n```\nreceivedAt\n```\n- Delivery of multiple events with fewer API calls\n- Fewer errors if a connection is lost because an entire batch will retry at once rather than multiple calls retrying at random times.\n\n## Setup\nYou can start batching by changing thestrategyto\"batching\"and the parameters forsizeandtimeoutwithin theloadmethod in the analytics object. Batching requires both parameters.\n\n```\nstrategy\n```\n\n```\n\"batching\"\n```\n\n```\nsize\n```\n\n```\ntimeout\n```\n\n```\nload\n```\n\n```\nanalytics.load(\"<write_key>\",{integrations:{\"Segment.io\":{deliveryStrategy:{strategy:\"batching\",config:{size:10,timeout:5000}}}}});\n```\n\n```\nanalytics.load(\"<write_key>\",{integrations:{\"Segment.io\":{deliveryStrategy:{strategy:\"batching\",config:{size:10,timeout:5000}}}}});\n```\nYou can check to see if batching works by checking your source\u2019s debugger inSources > Debugger. When you select an event and view theRawcode, thereceivedAttime of all the events in the batch should be the same.\n\n```\nreceivedAt\n```\n\n## Batch size\nThe batch size is the threshold that forces all batched events to be sent once it\u2019s reached. For example,size: 10means that after triggering 10 events, Analytics.js sends those 10 events together as a batch to Segment.\n\n```\nsize: 10\n```\nYour total batched events can\u2019t exceed the maximum payload size of 500 KB, with a limit of 32 KB for each event in the batch. If the 500 KB limit is reached, the batch will be split.\n\n## Timeout\ntimeoutis the number of milliseconds that forces all events queued for batching to be sent, regardless of the batch size, once it\u2019s reached. For example,timeout: 5000sends every event in the batch to Segment once 5 seconds passes.\n\n```\ntimeout\n```\n\n```\ntimeout: 5000\n```\n\n## Batching FAQs\n\n## Will Analytics.js deliver events that are in the queue when a user closes the browser?\nAnalytics.js does its best to deliver the queued events before the browser closes, but the delivery isn\u2019t guaranteed.\nUpon receiving thebeforeunloadbrowser event, Analytics.js attempts to flush the queue usingfetchrequests withkeepaliveset to true. Since the max size ofkeepalivepayloads is limited to 64 KB, if the queue size is bigger than 64 KB at the time the browser closes, then there is a chance of losing a subset of the queued events. Reducing the batch size or timeout will alleviate this issue, but that will be a trade-off decision.\n\n```\nbeforeunload\n```\n\n```\nfetch\n```\n\n```\nkeepalive\n```\n\n```\nkeepalive\n```\n\n## Can other destinations receive batched events?\nNo, this batching only impacts events sent to Segment. Once the batch reaches Segment, it\u2019s split up and follows the normal path of an event.\n\n## Will batching impact billing or throughput?\nNo, batching won\u2019t impact billing or throughput.\n\n## Can I use batching with partner integrations?\nPartner integrations don\u2019t support batching as all other partner integrations run one event at a time. Only Segment.io events support batched delivery.\n\n## Does batching work on all browsers?\nBatching won\u2019t work on Internet Explorer.\n\n## If a source has retry enabled, does the retry behavior change when using batching?\nBatching delays retries, as events that are queued for batching aren\u2019t retried until a batch delivery fails.\n\n## When using Middlewares as a source and destination, is there a change in behavior when using batching?\nNo, there is no change in behavior to Middlewares.\n\n## When using Segment features (Schema filtering, integrations object, Protocols) to filter events from going to destinations (device and cloud-mode), will batching impact the filtering of events?\nNo, there is no impact to how events filter.\n\n## Plugins and source middleware\nWhen you develop against Analytics 2.0, the plugins you write can augment functionality, enrich data, and control the flow and delivery of events. From modifying event payloads to changing analytics functionality, plugins and middleware help to speed up the process of getting things done.\nPlugins and source middleware accomplish the same thing, but plugins are significantly more powerful (but more verbose to implement).\nFor basic use cases like adding event fields or dropping specific events, usesource middleware. If you need more granular control of the lifecycle, or want to be able to abort the Segment initialization, you should useplugins.\n\n## Source Middleware\nSource middlewareruns before any other plugins. You can use this to enrich or drop an event.\n\n## Example usage ofaddSourceMiddleware\n\n```\naddSourceMiddleware\n```\nHere are some examples of usingaddSourceMiddlewarefor enrichment and validation.\n\n```\naddSourceMiddleware\n```\n- Enrichmentanalytics.addSourceMiddleware(({payload,next})=>{const{event}=payload.obj.contextif(event.type==='track'){event.event.toLowerCase()}next(payload)});\n\n```\nanalytics.addSourceMiddleware(({payload,next})=>{const{event}=payload.obj.contextif(event.type==='track'){event.event.toLowerCase()}next(payload)});\n```\n\n```\nanalytics.addSourceMiddleware(({payload,next})=>{const{event}=payload.obj.contextif(event.type==='track'){event.event.toLowerCase()}next(payload)});\n```\n- Validationanalytics.addSourceMiddleware(({payload,next})=>{const{event}=payload.obj.contextif(!isValid(event)){returnnull// event is dropped}next(payload)});\n\n```\nanalytics.addSourceMiddleware(({payload,next})=>{const{event}=payload.obj.contextif(!isValid(event)){returnnull// event is dropped}next(payload)});\n```\n\n```\nanalytics.addSourceMiddleware(({payload,next})=>{const{event}=payload.obj.contextif(!isValid(event)){returnnull// event is dropped}next(payload)});\n```\n\n## Advanced Plugin API\nFor advanced modification to the event pipeline.\n\n```\nbefore\n```\n\n```\naddSourceMiddleware\n```\n\n```\nbefore\n```\n\n```\nenrichment\n```\n\n```\ndestination\n```\n\n```\nafter\n```\n\n```\nutility\n```\n\n```\nload()\n```\n\n## Example plugins\nHere\u2019s an example of a plugin that converts all track event names to lowercase before the event goes through the rest of the pipeline:\n\n```\nexportconstlowercase:Plugin={name:'Lowercase events',type:'enrichment',version:'1.0.0',isLoaded:()=>true,load:()=>Promise.resolve(),track:(ctx)=>{ctx.updateEvent('event',ctx.event.event.toLowerCase())returnctx}}constidentityStitching=()=>{letuserconstidentity={// Identifies your plugin in the Plugins stack.// Access `window.analytics.queue.plugins` to see the full list of pluginsname:'Identity Stitching',// Defines where in the event timeline a plugin should runtype:'enrichment',version:'0.1.0',// use the `load` hook to bootstrap your plugin// The load hook will receive a context object as its first argument// followed by a reference to the analytics.js instance from the pageload:async(_ctx,ajs)=>{user=ajs.user()},// Used to signal that a plugin has been property loadedisLoaded:()=>user!==undefined,// Applies the plugin code to every `identify` call in Analytics.js// You can override any of the existing types in the Segment Spec.asyncidentify(ctx){// Request some extra info to enrich your `identify` events from// an external API.constreq=awaitfetch(`https://jsonplaceholder.typicode.com/users/${ctx.event.userId}`)constuserReq=awaitreq.json()// ctx.updateEvent can be used to update deeply nested properties// in your events. It's a safe way to change events as it'll//  create any missing objects and properties you may require.ctx.updateEvent('traits.custom',userReq)user.traits(userReq)// Every plugin must return a `ctx` object, so that the event// timeline can continue processing.returnctx},}returnidentity}// Registers Segment's new plugin into Analytics.jsawaitwindow.analytics.register(identityStitching())\n```\n\n```\nexportconstlowercase:Plugin={name:'Lowercase events',type:'enrichment',version:'1.0.0',isLoaded:()=>true,load:()=>Promise.resolve(),track:(ctx)=>{ctx.updateEvent('event',ctx.event.event.toLowerCase())returnctx}}constidentityStitching=()=>{letuserconstidentity={// Identifies your plugin in the Plugins stack.// Access `window.analytics.queue.plugins` to see the full list of pluginsname:'Identity Stitching',// Defines where in the event timeline a plugin should runtype:'enrichment',version:'0.1.0',// use the `load` hook to bootstrap your plugin// The load hook will receive a context object as its first argument// followed by a reference to the analytics.js instance from the pageload:async(_ctx,ajs)=>{user=ajs.user()},// Used to signal that a plugin has been property loadedisLoaded:()=>user!==undefined,// Applies the plugin code to every `identify` call in Analytics.js// You can override any of the existing types in the Segment Spec.asyncidentify(ctx){// Request some extra info to enrich your `identify` events from// an external API.constreq=awaitfetch(`https://jsonplaceholder.typicode.com/users/${ctx.event.userId}`)constuserReq=awaitreq.json()// ctx.updateEvent can be used to update deeply nested properties// in your events. It's a safe way to change events as it'll//  create any missing objects and properties you may require.ctx.updateEvent('traits.custom',userReq)user.traits(userReq)// Every plugin must return a `ctx` object, so that the event// timeline can continue processing.returnctx},}returnidentity}// Registers Segment's new plugin into Analytics.jsawaitwindow.analytics.register(identityStitching())\n```\nHere\u2019s an example of autilityplugin that allows you to change the format of the anonymous_id cookie:\n\n```\nutility\n```\n\n```\nwindow.analytics.ready(()=>{window.analytics.register({name:'Cookie Compatibility',version:'0.1.0',type:'utility',load:(_ctx,ajs)=>{constuser=ajs.user()constcookieJar=user.cookiesconstcookieSetter=cookieJar.set.bind(cookieJar)// blindly convert any values into JSON stringscookieJar.set=(key,value,opts)=>cookieSetter(key,JSON.stringify(value),opts)// stringify any existing IDsuser.anonymousId(user.anonymousId())user.id(user.id())},isLoaded:()=>true})})\n```\n\n```\nwindow.analytics.ready(()=>{window.analytics.register({name:'Cookie Compatibility',version:'0.1.0',type:'utility',load:(_ctx,ajs)=>{constuser=ajs.user()constcookieJar=user.cookiesconstcookieSetter=cookieJar.set.bind(cookieJar)// blindly convert any values into JSON stringscookieJar.set=(key,value,opts)=>cookieSetter(key,JSON.stringify(value),opts)// stringify any existing IDsuser.anonymousId(user.anonymousId())user.id(user.id())},isLoaded:()=>true})})\n```\nYou can view Segment\u2019sexisting pluginsto see more examples.\n\n## Register a plugin\nRegistering plugins enable you to modify your analytics implementation to best fit your needs. You can register a plugin using this:\n\n```\n// A promise will resolve once the plugins have been successfully loaded into Analytics.js// You can register multiple plugins at once by using the variable args interface in Analytics.jsawaitwindow.analytics.register(pluginA,pluginB,pluginN)\n```\n\n```\n// A promise will resolve once the plugins have been successfully loaded into Analytics.js// You can register multiple plugins at once by using the variable args interface in Analytics.jsawaitwindow.analytics.register(pluginA,pluginB,pluginN)\n```\n\n## Video player plugins\nSegment offers video player \u2018plugins\u2019 so you can quickly collect video events using Analytics.js. See the specific documentation below to learn more:\n- YouTube\n- Vimeo\n\n## Cross-subdomain analytics\nAnalytics.js tracks across subdomains out of the box. All Segment destinations fully support this feature.\nTo track activity on your subdomains, include the Segment Analytics.js snippet on each subdomain. Segment sets users\u2019anonymousIdon the top-level domain, so that users are tracked across any subdomain.\n\n```\nanonymousId\n```\nBecause Segment tracks across subdomains, you can either use the same Segment source, or use separate sources for each subdomain. What you decide depends on your team\u2019s goals for tracking each subdomain.\nSegment doesn\u2019t offer tracking across top-level domains out of the box. If you want to track across top-level domains, you can utilize Segment\u2019sQuerystring APIto pass the anonymousId from Website A to Website B in the query string. When a user moves from Website A to Website B with the anonymousId in the query string, Analytics.js reads that value and sets the anonymousId to it, rather than generating a new one.\n\n## UTM Tracking\nUTM parameters are only used when linking to your site from outside your domain. When a visitor arrives using a link containing UTM parameters, Segment\u2019s analytics.js library will parse the URL query string and add the information to the event payload. For more information about UTM tracking, see theTracking Customers Across Channels and Devicesdocumentation.\nUTM parameters contain three essential components (utm_source, utm_medium, utm_campaign) and two optional (utm_content, utm_term). For example, if you include the following three parameters in your URL:?utm_source=mysource&utm_medium=email&utm_campaign=mytestcampaign, once a visitor arrives using a link containing the above, Segment automatically grabs the UTM parameters and subsequent events will contain these parameters within the \u2018context\u2019 object (visible in the raw view of your Source Debugger.)\n\n```\n?utm_source=mysource&utm_medium=email&utm_campaign=mytestcampaign\n```\nSo, for example, if somebody follows the link with above query string to your site, the subsequent \u2018page\u2019 call in your Debugger should contain the below and will be passed to any enabled destinations:\n\n```\n\"context\":{\"campaign\":{\"medium\":\"email\",\"name\":\"mytestcampaign\",\"source\":\"mysource\",},\n```\n\n```\n\"context\":{\"campaign\":{\"medium\":\"email\",\"name\":\"mytestcampaign\",\"source\":\"mysource\",},\n```\nWhenever the UTM parameters are no longer a part of the URL, Segment no longer includes them. For example, if the user goes to a new page within your website which does not contain these parameters, they will not be included in subsequent events. UTM parameters are non-persistent by default as they could potentially cause data accuracy problems. Here\u2019s an example of why: Say a user clicks on an ad and lands on your site. He navigates around and bookmarks an internal page - or maybe shares a link with a friend, who shares it with another friend. All those links would then point back to the same test utm_source as the initial referrer for any purchase.\nSegment doesn\u2019t validate UTM parameter names. This design supports the flexibility to track both standard parameters (for example, utm_source, utm_medium) and custom parameters defined by users. As a result, all parameters present in the URL collected as is, and are added to the context field without checks for naming conventions or validity.\nIf you want to ensure that only standard UTM parameters (such as, utm_source, utm_medium, utm_campaign, utm_content, utm_term) are included in the context.campaign object, you can implementSource middlewarein your Analytics.js setup.\nFor example:\n\n```\nwindow.analytics.addSourceMiddleware(({payload,next})=>{if(payload.obj.context?.campaign){constallowedFields=[\"source\",\"medium\",\"term\",\"campaign\",\"content\"];constcampaign=payload.obj.context.campaign;Object.keys(campaign).forEach(key=>{if(!allowedFields.includes(key)){deletecampaign[key];}});}next(payload);});\n```\n\n```\nwindow.analytics.addSourceMiddleware(({payload,next})=>{if(payload.obj.context?.campaign){constallowedFields=[\"source\",\"medium\",\"term\",\"campaign\",\"content\"];constcampaign=payload.obj.context.campaign;Object.keys(campaign).forEach(key=>{if(!allowedFields.includes(key)){deletecampaign[key];}});}next(payload);});\n```\nThis middleware filters out any non-standard parameters from thecontext.campaignobject before they\u2019re sent to Segment or forwarded to your enabled destinations.\n\n```\ncontext.campaign\n```\n\n## Analytics.js performance\nThe Analytics.js library and all Destination libraries are loaded with theHTML scriptasynctag. This also means that Segment fires methods asynchronously, so you should adjust your code accordingly if you require that events be sent from the browser in a specific order.\n\n```\nasync\n```\nWhile many tools require access to the DOM or cookies, for the Zendesk, Salesforce, and Mailchimp destinations, Segment doesn\u2019t need to load a native JavaScript library. Instead, Segment\u2019s servers send data to the end-tools.\nSegment loads the libraries required for yourenabledDestinations. When you disable a destination, the custom version of Analytics.js loaded on your site stops requesting that library.\nUsing Analytics.js doesn\u2019t offer a large performance benefit, but is more performant than installing each of the destinations individually. And as more destinations move to accept data directly from Segment, you\u2019ll receive more performance benefits automatically.\nOne option, if you don\u2019t want to use any bundled third-party tools, is to use theAnalytics-Nodepackage.\nAnalytics.js doesn\u2019t set third-party cookies and only sets first-party cookies.\n\n## Bundle size\nSegment\u2019s Analytics.js JavaScript snippet increases the page size by about 1.1KB.\nThe snippet asynchronously requests and loads a customized JavaScript bundle (analytics.min.js), which contains the code and settings needed to load yourdevice-mode destinations. The size of this file changes depending on the number of and which destinations you enable.\n\n```\nanalytics.min.js\n```\nWithout any destinations enabled, theanalytics.min.jsfile is about 62KB. Each time you enable a destination, the file\u2019s size may increase slightly.\n\n```\nanalytics.min.js\n```\n\n## Cookies set by Analytics.js\nSegment sets three cookies in general:\n\n```\najs_anonymous_id\n```\n\n```\najs_group_id\n```\n\n```\ngroup()\n```\n\n```\najs_user_id\n```\n\n```\nidentify()\n```\nFor Google Chrome, these cookies expire by defaultone yearafter the date created. Othersupported browsersmight have a different expiration time.\nSome user/group traits are also stored inlocalStorage:\n\n```\nlocalStorage\n```\n\n```\najs_user_traits\n```\n\n```\nidentify()\n```\n\n```\najs_group_properties\n```\n\n```\ngroup()\n```\nNote thatlocalStoragevariables don\u2019t expire because the browser defines that functionality.\n\n```\nlocalStorage\n```\n\n## Local storage cookies used by Analytics.js\nAnalytics.js useslocalstoragecookies if you have retries enabled, to keep track of retry timing.\n\n```\nlocalstorage\n```\n- Theackcookie is a timer used to see if another tab should claim the retry queue.\n\n```\nack\n```\n- ThereclaimStartandreclaimEndcookies determine if a tab takes over the queue from another tab.\n\n```\nreclaimStart\n```\n\n```\nreclaimEnd\n```\n- TheinProgressandqueuecookies track events in progress, and events queued for retry.\n\n```\ninProgress\n```\n\n```\nqueue\n```\nFor more information, visit theSegment localstorage-retry library.\nYou can set thedebugcookie toanalytics.jsto log debug messages from Analytics.js to the console.\n\n```\ndebug\n```\n\n```\nanalytics.js\n```\n\n## Tracking Blockers and Browser Privacy Settings\nSegment does not endorse bypassing tracking blockers or browser privacy settings for client-side tracking. Your users have control over what gets loaded on their pages and can use plugins or browser settings to block third-party scripts, including Segment. To minimize client-side data loss, Segment recommends you choose from the following routes:\n- Respect the user\u2019s decision to implement tracking blockers or use privacy settings, knowing that, unfortunately, some data will be lost.\n- Ask the customer to disable the tracking blockers or adjust their privacy settings (for example, in the case of large, corporate customers).\n- Move as many events and tracking actions as possible to a server-side library, which won\u2019t encounter the same limitations.\nTo minimize client-side data loss, Segment provides a few workarounds. However, it\u2019s important to note that Segment cannot guarantee their effectiveness.\n- Use thebundle obfuscationfeature. You can add an obfuscate property to the object in the second parameter, which obscures the URL from which your integrations and destination actions are loaded. This helps prevent words that are flagged by ad blockers to not be detected in your URL, enabling the integration to properly load.\nUse thebundle obfuscationfeature. You can add an obfuscate property to the object in the second parameter, which obscures the URL from which your integrations and destination actions are loaded. This helps prevent words that are flagged by ad blockers to not be detected in your URL, enabling the integration to properly load.\n- Create acustom proxy. This changes the URL that Segment loads from (cdn.segment.com) and the outgoing requests generated when events are triggered (api.segment.io).\nCreate acustom proxy. This changes the URL that Segment loads from (cdn.segment.com) and the outgoing requests generated when events are triggered (api.segment.io).\n- Consider implementing theSegment Edge SDK. The Segment Edge SDK leverages Cloudflare Workers to facilitate first-party data collection and real-time user profiling for app personalization. It integrates Segment\u2019s library into web apps, manages user identity via HttpOnly cookies, and employs an internal router for efficient data processing and user experience customization. This innovative approach simplifies tracking and personalization for Segment customers. More information is available in theEdge SDK README.\nConsider implementing theSegment Edge SDK. The Segment Edge SDK leverages Cloudflare Workers to facilitate first-party data collection and real-time user profiling for app personalization. It integrates Segment\u2019s library into web apps, manages user identity via HttpOnly cookies, and employs an internal router for efficient data processing and user experience customization. This innovative approach simplifies tracking and personalization for Segment customers. More information is available in theEdge SDK README.\n- Consider using one of Segment\u2019sserver-side libraries. Using a server-side library eliminates concerns about tracking blockers and privacy browsers that can prevent Segment from loading. This option may require additional code to track actions like a Page call, as you now need to manually pass contextual information that would have been automatically collected by Analytics.js, likeurl,path, andreferrer. Note that some destinations are device-mode only.\nConsider using one of Segment\u2019sserver-side libraries. Using a server-side library eliminates concerns about tracking blockers and privacy browsers that can prevent Segment from loading. This option may require additional code to track actions like a Page call, as you now need to manually pass contextual information that would have been automatically collected by Analytics.js, likeurl,path, andreferrer. Note that some destinations are device-mode only.\n\n```\nurl\n```\n\n```\npath\n```\n\n```\nreferrer\n```\n\n## Installing the library under a custom global namespace\nWhen you load Analytics.js through snippet code, by default, the SDK installs onwindow.analyticsglobal variable. If this causes a conflict with another library on your page, you can change the global variable used by Analytics.js if you use snippet version 5.2.1 or later.\n\n```\nwindow.analytics\n```\nChange the global variable in the beginning of your snippet code as shown below. In this case, Analytics.js useswindow.custom_keyto load instead ofwindow.analytics.\n\n```\nwindow.custom_key\n```\n\n```\nwindow.analytics\n```\n\n```\n- !function(){var i=\"analytics\", ...\n  + !function(){var i=\"custom_key\", ...\n```\n\n```\n- !function(){var i=\"analytics\", ...\n  + !function(){var i=\"custom_key\", ...\n```\n\n## Add destinations from npm\nBundle the destinations you want loaded fromnpminstead of having them loaded from a remote CDN. This enables you to have fewer network requests when adding destinations.\n- To add actions-based destinations from npm:importvwofrom'@segment/analytics-browser-actions-vwo'importbrazefrom'@segment/analytics-browser-actions-braze'constanalytics=AnalyticsBrowser.load({writeKey:'<WRITE_KEY>',plugins:[vwo,braze],})Pass in the destination plugin to the added config option calledplugins.  A list of all action destination packages can be found on GitHub in the@segmentio/action-destinationsrepository.\nTo add actions-based destinations from npm:\n\n```\nimportvwofrom'@segment/analytics-browser-actions-vwo'importbrazefrom'@segment/analytics-browser-actions-braze'constanalytics=AnalyticsBrowser.load({writeKey:'<WRITE_KEY>',plugins:[vwo,braze],})\n```\n\n```\nimportvwofrom'@segment/analytics-browser-actions-vwo'importbrazefrom'@segment/analytics-browser-actions-braze'constanalytics=AnalyticsBrowser.load({writeKey:'<WRITE_KEY>',plugins:[vwo,braze],})\n```\nPass in the destination plugin to the added config option calledplugins.  A list of all action destination packages can be found on GitHub in the@segmentio/action-destinationsrepository.\n\n```\nplugins\n```\n- To add classic destinations from npm:import{AnalyticsBrowser}from'@segment/analytics-next'importGoogleAnalyticsIntegrationfrom'@segment/analytics.js-integration-google-analytics'// The following example assumes configuration for Google Analytics will be available in the fetched settingsconstanalytics=AnalyticsBrowser.load({writeKey:'<WRITE_KEY>',classicIntegrations:[GoogleAnalyticsIntegration]}),\nTo add classic destinations from npm:\n\n```\nimport{AnalyticsBrowser}from'@segment/analytics-next'importGoogleAnalyticsIntegrationfrom'@segment/analytics.js-integration-google-analytics'// The following example assumes configuration for Google Analytics will be available in the fetched settingsconstanalytics=AnalyticsBrowser.load({writeKey:'<WRITE_KEY>',classicIntegrations:[GoogleAnalyticsIntegration]}),\n```\n\n```\nimport{AnalyticsBrowser}from'@segment/analytics-next'importGoogleAnalyticsIntegrationfrom'@segment/analytics.js-integration-google-analytics'// The following example assumes configuration for Google Analytics will be available in the fetched settingsconstanalytics=AnalyticsBrowser.load({writeKey:'<WRITE_KEY>',classicIntegrations:[GoogleAnalyticsIntegration]}),\n```\n\n## Segment Inspector\nThe Segment Inspector is a Chrome web extension that enables you to debug your Segment integration on web applications instrumented with Analytics.js. Analytics.js sends data to the extension so that you can see how events change before they\u2019re sent to your destinations and so that you can verify that the event details are correct. The Segment Inspector also lets you analyze and confirm that API calls made from your website arrive to your Analytics.js source.\nFor the Segment inspector to work, you must enable the Analytics.js source.\nTo add the Segment Inspector as a Chrome extension:\n- Go to theSegment Inspector in the Chrome web store.\n- ClickAdd to Chrome.\n- ClickAdd Extensionin the pop-up window.\nOnce installed, use the Inspect Elements developer tool in Chrome to use the Segment Inspector. To access the Inspector, go to the top menu bar of Chrome and navigate toView > Developer > Developer Toolsand go to theSegmenttab. On the Segment tab, you can:\n- Filter the different calls by type\n- Search based off of the content in the calls\n- Identify users\n\n## Components of the Segment Inspector\nThe Segment Inspector is composed of these three components:\n- TheDiagnosticstabThis tab shows the library versions and the list of active integrations that are running.When you select an integration, you can see the options that passed while the integration loads. If you made any local overrides within the integration or on the page itself, they appear highlighted in the code.\n- This tab shows the library versions and the list of active integrations that are running.\n- When you select an integration, you can see the options that passed while the integration loads. If you made any local overrides within the integration or on the page itself, they appear highlighted in the code.\n- TheEventstabThis tab enables you to select an event and see the specific details of the event. You can view the time the event occurred, the status of the event (whether it sent or failed), what plugins were added, and how the context object changed. Any changes made to the payload appear highlighted.Select the double-checked icon to see the payload at the delivery stage.Select thefxicon to see the payloads after plugins ran.Select the single-checked icon to see the payload as it was when the event triggered.\n- This tab enables you to select an event and see the specific details of the event. You can view the time the event occurred, the status of the event (whether it sent or failed), what plugins were added, and how the context object changed. Any changes made to the payload appear highlighted.\n- Select the double-checked icon to see the payload at the delivery stage.\n- Select thefxicon to see the payloads after plugins ran.\n- Select the single-checked icon to see the payload as it was when the event triggered.\n- TheIdentitytabThis tab enables you to see the information of a user if you\u2019re using theidentifyfeature. You can associate the data to an individual and measure their activity across multiple sessions and devices. This tab only shows the user\u2019s traits that are on the client.If you\u2019re not using theidentifyfeature, the user remains anonymous.\n- This tab enables you to see the information of a user if you\u2019re using theidentifyfeature. You can associate the data to an individual and measure their activity across multiple sessions and devices. This tab only shows the user\u2019s traits that are on the client.\n\n```\nidentify\n```\n- If you\u2019re not using theidentifyfeature, the user remains anonymous.\n\n```\nidentify\n```\n\n## Example uses\nHere are some examples of using Analytics.js. Note that the examples assume Analytics.js is installed throughnpm.\n- Next.jswith-segment-analyticswith-segment-analytics-pages-router\n- with-segment-analytics\n- with-segment-analytics-pages-router\n- Vanilla React, VueSeeUsage in Common Frameworks & SPAs\n- SeeUsage in Common Frameworks & SPAs\n\n## External dependencies\nAnalytics.js production dependencies arelisted under thedependencieskey.\nThis page was last modified: 23 Jan 2025\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/"
  },
  {
    "title": "Redirecting\u2026",
    "content": "",
    "url": "https://segment.com/docs/connections/sources/catalog/libraries/mobile/swift-ios/"
  },
  {
    "title": " Sources Catalog | Segment Documentation",
    "content": "- Home\n- /\n- Connections\n- /\n- Sources\n- /\n- Sources Catalog\n\n## Sources Catalog\nBelow is a list of the available sources on the Segment platform.\n\n## Website\n\n## Javascript\n\n## Shopify (by Littledata)\n\n## Mobile\n\n## Apple\n\n## Factual Engine\nBeta\n\n## Flutter\nBeta\n\n## Kotlin (Android)\n\n## React Native\n\n## Unity\n\n## Xamarin\n\n## Server\n\n## .NET\n\n## Clojure\n\n## Go\n\n## HTTP API\n\n## Java\n\n## Kotlin\n\n## PHP\n\n## Pixel Tracking API\n\n## Python\n\n## Ruby\n\n## A/B Testing\n\n## ConfigCat\nBeta\n\n## Insider\n\n## LaunchDarkly\n\n## Leanplum\n\n## Statsig\nBeta\n\n## Advertising\n\n## Facebook Ads\n\n## Google Ads\n\n## ProveSource\n\n## Analytics\n\n## Amplitude Cohorts\n\n## Beamer\n\n## Candu\n\n## Dub\nBeta\n\n## GWEN Webhooks\nBeta\n\n## Looker\n\n## Mixpanel Cohorts\n\n## Moesif API Analytics\n\n## Navattic\nBeta\n\n## Pendo\n\n## Shopify - Powered by Fueled\n\n## Upollo\nBeta\n\n## Attribution\n\n## Dub\nBeta\n\n## Shopify - Powered by Fueled\n\n## CRM\n\n## Aircall\n\n## Freshchat\nBeta\n\n## HubSpot\n\n## Moesif API Analytics\n\n## OneTrust\nBeta\n\n## Paytronix\nBeta\n\n## Salesforce\n\n## Custom\n\n## Amazon S3\n\n## Customer Success\n\n## Aircall\n\n## Beamer\n\n## Candu\n\n## CommandBar\n\n## Gladly\n\n## Moesif API Analytics\n\n## ProveSource\n\n## Refiner\n\n## Email Marketing\n\n## ActiveCampaign\n\n## AutopilotHQ\n\n## Blueshift\n\n## Braze\n\n## Customer.io\n\n## Drip\n\n## Facebook Lead Ads\nBeta\n\n## Inflection\n\n## Insider\n\n## Intercom\n\n## Iterable\n\n## Klaviyo\n\n## Klenty\n\n## Leanplum\n\n## Listrak\n\n## Mailchimp\n\n## Mailjet\n\n## Mailmodo\nBeta\n\n## Mandrill\n\n## Marketo\n\n## MoEngage (Source)\n\n## Nudgespot\n\n## Paytronix\nBeta\n\n## Salesforce Marketing Cloud\n\n## Selligent Marketing Cloud\n\n## SendGrid\n\n## SendGrid Marketing Campaigns\nBeta\n\n## Vero\n\n## Yotpo\nBeta\n\n## Enrichment\n\n## Alloy Flow\nBeta\n\n## Bluedot\n\n## Factual Engine\nBeta\n\n## Foursquare Movement\n\n## Herow\n\n## LiveLike (Source)\nBeta\n\n## One Creation\nBeta\n\n## Quin AI\nBeta\n\n## Radar\n\n## Refiner\n\n## Feature Flagging\n\n## ConfigCat\nBeta\n\n## LaunchDarkly\n\n## Helpdesk\n\n## Aircall\n\n## Gladly\n\n## Zendesk\n\n## Learning Management System\n\n## Synap\nBeta\n\n## WorkRamp\n\n## Livechat\n\n## Blip\nBeta\n\n## Chatlio\n\n## Freshchat\nBeta\n\n## Marketing Automation\n\n## Airship\n\n## Antavo\nBeta\n\n## Bluedot\n\n## CleverTap\n\n## Foursquare Movement\n\n## Friendbuy\n\n## Inflection\n\n## Insider\n\n## Listrak\n\n## Mailmodo\nBeta\n\n## MoEngage (Source)\n\n## Paytronix\nBeta\n\n## ProveSource\n\n## Pushwoosh Source\nBeta\n\n## Selligent Marketing Cloud\n\n## SendGrid Marketing Campaigns\nBeta\n\n## Voucherify\n\n## White Label Loyalty\nBeta\n\n## Yotpo\nBeta\n\n## Ott\n\n## Roku (alpha)\n\n## Payments\n\n## Stripe\n\n## Performance Monitoring\n\n## Moesif API Analytics\n\n## Synap\nBeta\n\n## Personalization\n\n## Bluedot\n\n## Candu\n\n## CleverTap\n\n## CommandBar\n\n## Elastic Path\nBeta\n\n## Elastic Path CX Studio\nBeta\n\n## Foursquare Movement\n\n## GWEN Webhooks\nBeta\n\n## Insider\n\n## Leanplum\n\n## LiveLike (Source)\nBeta\n\n## One Creation\nBeta\n\n## Paytronix\nBeta\n\n## ProveSource\n\n## Pushwoosh Source\nBeta\n\n## Qualtrics\n\n## Quin AI\nBeta\n\n## Upollo\nBeta\n\n## UserGuiding\nBeta\n\n## White Label Loyalty\nBeta\n\n## Raw Data\n\n## Alloy Flow\nBeta\n\n## Authvia\nBeta\n\n## Elastic Path\nBeta\n\n## Elastic Path CX Studio\nBeta\n\n## Referrals\n\n## Friendbuy\n\n## Voucherify\n\n## SMS & Push Notifications\n\n## Airship\n\n## Beamer\n\n## Braze\n\n## Insider\n\n## Leanplum\n\n## OneSignal\nBeta\n\n## Selligent Marketing Cloud\n\n## Twilio\n\n## Surveys\n\n## Beamer\n\n## Delighted\n\n## Jebbit\n\n## Qualtrics\n\n## Refiner\n\n## UserGuiding\nBeta\n\n## Virtual Assistant\n\n## IBM Watson Assistant",
    "url": "https://segment.com/docs/connections/sources/catalog/"
  },
  {
    "title": " What is Segment? | Segment Documentation",
    "content": "- Home\n- /\n- What is Segment?\n\n## What is Segment?\nWith Segment, you can collect, transform, send, and archive yourfirst-party customer data. Segment simplifies the process of collecting data and connecting new tools, allowing you to spend more time using your data, and less time trying to collect it. You can use Segment to track events that happen when a user interacts with the interfaces. \u201cInterfaces\u201d is Segment\u2019s generic word for any digital properties you own: your website, mobile apps, and processes that run on a server or OTT device.\nWhen you capture interaction data in Segment, you can send it (often in real-time) to your marketing, product, and analytics tools, as well as to data warehouses. In most cases, you won\u2019t even need to touch your tracking code to connect to new tools.\n\n## nextReady to get started?\nLet's walk through the steps to get up and running on Segment. Let's go!\nThis page was last modified: 14 Dec 2021\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/getting-started/#what-is-segment"
  },
  {
    "title": " How Segment Works | Segment Documentation",
    "content": "- Home\n- /\n- Getting started\n- /\n- How Segment Works\n\n## How Segment Works\nOn this page\n- Overview\n- Sources for collecting data\n- How you can track data\n- The Segment Methods\n- Where you can send data\nIn a nutshell, the Segment libraries (Sources) generate messages about what\u2019s happening in your site or app, and send them to the Segment servers. Segment then translates the content of those messages into different formats for use by other tools (which Segment callsDestinations), and sends the translated messages to those tools. The Segment servers also archive a copy of the data, and cansend data to your storage systems(such as databases, warehouses, or bulk-storage buckets).\n\n## Overview\nSegment Spec methodsare how you collect interaction data from your interfaces, and theSourcesare what you package with your interfaces to collect and route the data.\nOnce you\u2019ve collected your interaction data, there are several different actions you can take:\n- Send it toDestinations, which receive the data from any number of sources in real time\n- Send it toWarehousesand other bulk storage tools, which hold your raw event schemas and update on regular intervals\n- Enrich the customer data you collect byconnecting data from your other tools, and then collect it in a warehouse to monitor performance, inform decision-making processes, and create uniquely customized user experiences.\n- UseEngage, Twilio\u2019s marketing automation tool, to build marketing campaigns personalized to your audience.\n\n## Sources for collecting data\nYou can collect data by implementing Segment\u2019s tracking libraries as your Sources:\n- Analytics.js, the Segment JavaScript source, is the most powerful way to track customer data from a website. Segment recommends it as the default installation for any website.\n- The Segment Mobile SDKsare the best way to simplify tracking in your iOS, Android, and Xamarin apps. Segment recommends them over server-side sources as the default installation for any mobile app.\n- Server-side sourceslet you send analytics data directly from your servers when client-side tracking doesn\u2019t work, or when you\u2019re sending mission-critical data like revenues.\n\n## Sources for unique cases\nSegment also offers these other source libraries to cover less straightforward cases:\n- Use theHTTP Tracking APIif Segment doesn\u2019t offer a library for your specific environment yet.\n- ThePixel Tracking APIlets you track events from environments where you can\u2019t execute code - for example, tracking when an email was opened.\n- TheQuerystring APIlets you use querystrings to load API methods when a user first visits a Segment-enabled site. Use this API for tracking events like email clicks and identifying users associated with those clicks on the destination page.\n\n## Cloud App Sources\nSegment also offersCloud App Sourcesto integrate data from your third-party tools:\n- Object Cloud Sourcescan import third party tool data directly into your Segment warehouse, but can\u2019t stream that data into your other Segment destinations. Make sure you enable a Segment warehouse before you enable an object cloud source.\n- Event Cloud Sourcesdon\u2019t just import third party tool data into your Segment warehouse, they also send event data in real-time to your other Segment destinations. You don\u2019t need to set up a data warehouse to send Event Cloud Source data to your destinations.\n\n## How you can track data\nSegment supports several ways to implement tracking. The two most common are to usedevice-basedorserver-basedlibraries. You can use Segment\u2019s device-based libraries, such as JavaScript, iOS, and Android, to make calls on users\u2019 browsers or mobile devices. You can also track data with Segment\u2019s server-based libraries, such as Node, Python, or PHP, where the calls are triggered on your own servers and then sent to the Segment servers.\nWhen you collect data using device-based libraries, you can choose between these two different connection modes:\n- Cloud-modeis where the library sends the data directly to the Segment servers which then translate and forward it.\n- Device-modeis where the library sends the data both directly to the Segment servers, and also to the servers for the destination tool. Device-mode sometimes requires someadditional set-up steps, but can unlock rich device data.\nAlthough there are some tradeoffs between the two approaches, neither is better than the other, and Segment recommends that you implement a mix of both. In general, more direct interaction data is available using a device-based library, but server-based collection is more secure, reliable, and can\u2019t be blocked by ad blockers.\n\n## The Segment Methods\nThe Segment libraries generate messages about what happens on your interface, translate those messages into different formats for use by destinations, and transmit the messages to those tools.\nThere are severaltracking API methods, that you can call to generate messages. The four most important methods are:\n- Identify: Who is the user?\n- PageandScreen: What web page or app screen are they on?\n- Track: What are they doing?\nEvery call shares the samecommon fields. When you use these methodsas intended, it allows Segment to detect a specific type of data and correctly translate it to send it on to downstream destinations.\n\n## Where you can send data\nSegment maintains a catalog of destinations where you can send your data.\n\n## backGetting Started Overview\n\n## nextA simple Segment installation\nWalk through a disposable, demo implementation.\nThis page was last modified: 21 Apr 2023\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/getting-started/01-what-is-segment/"
  },
  {
    "title": " Connections Overview | Segment Documentation",
    "content": "- Home\n- /\n- Connections Overview\n\n## Connections Overview\nOn this page\n- Sources\n- Destinations\n- Warehouses\n- Information on sources and destinations pages\n- FAQs\nConnections is Segment\u2019s core product offering: you can collect event data from your mobile apps, websites, and servers with one API, then pull in contextual data from cloud apps like your CRM, payment systems, and internal databases to build a unified picture of your customers.\n\n## Sources\nIn Segment, you create a source (or more than one!) for each website or app you want to track. Wehighly recommendcreating a Source for each unique source of data (each site, app, or server), though this isn\u2019t required.\nSources belong to a workspace, and the URL for a source looks something like this:https://segment.com/<my-workspace>/sources/<my-source-name>/\n\n```\nhttps://segment.com/<my-workspace>/sources/<my-source-name>/\n```\nYou can create new sources using the button in the workspace view. Each source you create has a write key, which is used to send data to that source. For example, to loadanalytics.js, the Segment JavaScript libraryon your page, the snippet on theQuickstart Guideincludes:\n\n```\nanalytics.js\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\nLearn more about sources from thesources overview page.\n\n## Destinations\nDestinations are business tools or apps that you can connect to the data flowing through Segment. Some of Segment\u2019s most popular destinations are Google Analytics, Mixpanel, Kissmetrics, Customer.io, Intercom, and KeenIO.\nAll of these tools run on the same data: who are your customers and what are they doing? But each tool requires that you send that data in a slightly different format, which means that you\u2019d have to write code to track all of this information, again and again, for each tool, on each page of your app or website.\nEnter Segment. Do it once.\nSegment eliminates this process by introducing an abstraction layer. You send your data to Segment, and Segment understands how to translate it so we can send it along to any destination. You enable destinations from the catalog in the Segment App, and user data immediately starts flowing into those tools. No extra code required!\nSegment supports many categories of destinations, from advertising to marketing, email to customer support, CRM to user testing, and even data warehouses. You can view a complete list of availabledestinationsor check out thedestination pagefor a searchable list broken down by category.\n\n## Warehouses\nA warehouse is a central repository of data collected from one or more sources. This is what commonly comes to mind when you think about a relational database: structured data that fits neatly into rows and columns.\nIn Segment, a Warehouse is a special type of destination. Instead of streaming data to the destination all the time, we load data to them in bulk at regular intervals. When we load data, we insert and update events and objects, and automatically adjust their schema to fit the data you\u2019ve sent to Segment.\n\n## Reverse ETL\nWithReverse ETL, your data warehouse acts as your source, enabling you to send data from your warehouse to your destinations.\n\n## Information on sources and destinations pages\nThe Sources and Destinations pages allow each user to decide what information appears in their personal view for each page.\nOn both pages, you can click the stack icon in the upper right-hand corner of the table to see and select Source properties to show. You can select up to five columns of properties.\nThe following information is available for Sources:\n- Status\n- Environment\n- Destinations\n- Type\n- Category\n- Created At\n- Created By\nOn the Destinations page, you can choose among the following properties:\n- Status\n- Created At\n- Type\n- Sources\n- Category\nYou can then sort or filter each column to just the values you care about, by clicking on the arrow next to each displayed column.\n\n## FAQs\n\n## My source was disabled and it wasn\u2019t done by anyone in my workspace\nSources without any enabled destinations are auto-disabled after 14 days. However, the workspace owner is notified by email before Segment disables the source. Data that flows into Segment but does not flow to any downstream tools is not valuable to you and unnecessarily takes up space.\nSegment understands there may be cases to keep a source active. If you\u2019d like to add your sources to an exception list, you can do so by filling out thisAirtable form.\n\n## Can I request Segment add an integration tool?\nYes, you are able to submit an integration request here https://segment.com/requests/integrations/.\nThis page was last modified: 29 Feb 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/#connections-overview"
  },
  {
    "title": " Connections Overview | Segment Documentation",
    "content": "- Home\n- /\n- Connections Overview\n\n## Connections Overview\nOn this page\n- Sources\n- Destinations\n- Warehouses\n- Information on sources and destinations pages\n- FAQs\nConnections is Segment\u2019s core product offering: you can collect event data from your mobile apps, websites, and servers with one API, then pull in contextual data from cloud apps like your CRM, payment systems, and internal databases to build a unified picture of your customers.\n\n## Sources\nIn Segment, you create a source (or more than one!) for each website or app you want to track. Wehighly recommendcreating a Source for each unique source of data (each site, app, or server), though this isn\u2019t required.\nSources belong to a workspace, and the URL for a source looks something like this:https://segment.com/<my-workspace>/sources/<my-source-name>/\n\n```\nhttps://segment.com/<my-workspace>/sources/<my-source-name>/\n```\nYou can create new sources using the button in the workspace view. Each source you create has a write key, which is used to send data to that source. For example, to loadanalytics.js, the Segment JavaScript libraryon your page, the snippet on theQuickstart Guideincludes:\n\n```\nanalytics.js\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\nLearn more about sources from thesources overview page.\n\n## Destinations\nDestinations are business tools or apps that you can connect to the data flowing through Segment. Some of Segment\u2019s most popular destinations are Google Analytics, Mixpanel, Kissmetrics, Customer.io, Intercom, and KeenIO.\nAll of these tools run on the same data: who are your customers and what are they doing? But each tool requires that you send that data in a slightly different format, which means that you\u2019d have to write code to track all of this information, again and again, for each tool, on each page of your app or website.\nEnter Segment. Do it once.\nSegment eliminates this process by introducing an abstraction layer. You send your data to Segment, and Segment understands how to translate it so we can send it along to any destination. You enable destinations from the catalog in the Segment App, and user data immediately starts flowing into those tools. No extra code required!\nSegment supports many categories of destinations, from advertising to marketing, email to customer support, CRM to user testing, and even data warehouses. You can view a complete list of availabledestinationsor check out thedestination pagefor a searchable list broken down by category.\n\n## Warehouses\nA warehouse is a central repository of data collected from one or more sources. This is what commonly comes to mind when you think about a relational database: structured data that fits neatly into rows and columns.\nIn Segment, a Warehouse is a special type of destination. Instead of streaming data to the destination all the time, we load data to them in bulk at regular intervals. When we load data, we insert and update events and objects, and automatically adjust their schema to fit the data you\u2019ve sent to Segment.\n\n## Reverse ETL\nWithReverse ETL, your data warehouse acts as your source, enabling you to send data from your warehouse to your destinations.\n\n## Information on sources and destinations pages\nThe Sources and Destinations pages allow each user to decide what information appears in their personal view for each page.\nOn both pages, you can click the stack icon in the upper right-hand corner of the table to see and select Source properties to show. You can select up to five columns of properties.\nThe following information is available for Sources:\n- Status\n- Environment\n- Destinations\n- Type\n- Category\n- Created At\n- Created By\nOn the Destinations page, you can choose among the following properties:\n- Status\n- Created At\n- Type\n- Sources\n- Category\nYou can then sort or filter each column to just the values you care about, by clicking on the arrow next to each displayed column.\n\n## FAQs\n\n## My source was disabled and it wasn\u2019t done by anyone in my workspace\nSources without any enabled destinations are auto-disabled after 14 days. However, the workspace owner is notified by email before Segment disables the source. Data that flows into Segment but does not flow to any downstream tools is not valuable to you and unnecessarily takes up space.\nSegment understands there may be cases to keep a source active. If you\u2019d like to add your sources to an exception list, you can do so by filling out thisAirtable form.\n\n## Can I request Segment add an integration tool?\nYes, you are able to submit an integration request here https://segment.com/requests/integrations/.\nThis page was last modified: 29 Feb 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/#sources"
  },
  {
    "title": " Connections Overview | Segment Documentation",
    "content": "- Home\n- /\n- Connections Overview\n\n## Connections Overview\nOn this page\n- Sources\n- Destinations\n- Warehouses\n- Information on sources and destinations pages\n- FAQs\nConnections is Segment\u2019s core product offering: you can collect event data from your mobile apps, websites, and servers with one API, then pull in contextual data from cloud apps like your CRM, payment systems, and internal databases to build a unified picture of your customers.\n\n## Sources\nIn Segment, you create a source (or more than one!) for each website or app you want to track. Wehighly recommendcreating a Source for each unique source of data (each site, app, or server), though this isn\u2019t required.\nSources belong to a workspace, and the URL for a source looks something like this:https://segment.com/<my-workspace>/sources/<my-source-name>/\n\n```\nhttps://segment.com/<my-workspace>/sources/<my-source-name>/\n```\nYou can create new sources using the button in the workspace view. Each source you create has a write key, which is used to send data to that source. For example, to loadanalytics.js, the Segment JavaScript libraryon your page, the snippet on theQuickstart Guideincludes:\n\n```\nanalytics.js\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\nLearn more about sources from thesources overview page.\n\n## Destinations\nDestinations are business tools or apps that you can connect to the data flowing through Segment. Some of Segment\u2019s most popular destinations are Google Analytics, Mixpanel, Kissmetrics, Customer.io, Intercom, and KeenIO.\nAll of these tools run on the same data: who are your customers and what are they doing? But each tool requires that you send that data in a slightly different format, which means that you\u2019d have to write code to track all of this information, again and again, for each tool, on each page of your app or website.\nEnter Segment. Do it once.\nSegment eliminates this process by introducing an abstraction layer. You send your data to Segment, and Segment understands how to translate it so we can send it along to any destination. You enable destinations from the catalog in the Segment App, and user data immediately starts flowing into those tools. No extra code required!\nSegment supports many categories of destinations, from advertising to marketing, email to customer support, CRM to user testing, and even data warehouses. You can view a complete list of availabledestinationsor check out thedestination pagefor a searchable list broken down by category.\n\n## Warehouses\nA warehouse is a central repository of data collected from one or more sources. This is what commonly comes to mind when you think about a relational database: structured data that fits neatly into rows and columns.\nIn Segment, a Warehouse is a special type of destination. Instead of streaming data to the destination all the time, we load data to them in bulk at regular intervals. When we load data, we insert and update events and objects, and automatically adjust their schema to fit the data you\u2019ve sent to Segment.\n\n## Reverse ETL\nWithReverse ETL, your data warehouse acts as your source, enabling you to send data from your warehouse to your destinations.\n\n## Information on sources and destinations pages\nThe Sources and Destinations pages allow each user to decide what information appears in their personal view for each page.\nOn both pages, you can click the stack icon in the upper right-hand corner of the table to see and select Source properties to show. You can select up to five columns of properties.\nThe following information is available for Sources:\n- Status\n- Environment\n- Destinations\n- Type\n- Category\n- Created At\n- Created By\nOn the Destinations page, you can choose among the following properties:\n- Status\n- Created At\n- Type\n- Sources\n- Category\nYou can then sort or filter each column to just the values you care about, by clicking on the arrow next to each displayed column.\n\n## FAQs\n\n## My source was disabled and it wasn\u2019t done by anyone in my workspace\nSources without any enabled destinations are auto-disabled after 14 days. However, the workspace owner is notified by email before Segment disables the source. Data that flows into Segment but does not flow to any downstream tools is not valuable to you and unnecessarily takes up space.\nSegment understands there may be cases to keep a source active. If you\u2019d like to add your sources to an exception list, you can do so by filling out thisAirtable form.\n\n## Can I request Segment add an integration tool?\nYes, you are able to submit an integration request here https://segment.com/requests/integrations/.\nThis page was last modified: 29 Feb 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/#destinations"
  },
  {
    "title": " Connections Overview | Segment Documentation",
    "content": "- Home\n- /\n- Connections Overview\n\n## Connections Overview\nOn this page\n- Sources\n- Destinations\n- Warehouses\n- Information on sources and destinations pages\n- FAQs\nConnections is Segment\u2019s core product offering: you can collect event data from your mobile apps, websites, and servers with one API, then pull in contextual data from cloud apps like your CRM, payment systems, and internal databases to build a unified picture of your customers.\n\n## Sources\nIn Segment, you create a source (or more than one!) for each website or app you want to track. Wehighly recommendcreating a Source for each unique source of data (each site, app, or server), though this isn\u2019t required.\nSources belong to a workspace, and the URL for a source looks something like this:https://segment.com/<my-workspace>/sources/<my-source-name>/\n\n```\nhttps://segment.com/<my-workspace>/sources/<my-source-name>/\n```\nYou can create new sources using the button in the workspace view. Each source you create has a write key, which is used to send data to that source. For example, to loadanalytics.js, the Segment JavaScript libraryon your page, the snippet on theQuickstart Guideincludes:\n\n```\nanalytics.js\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\nLearn more about sources from thesources overview page.\n\n## Destinations\nDestinations are business tools or apps that you can connect to the data flowing through Segment. Some of Segment\u2019s most popular destinations are Google Analytics, Mixpanel, Kissmetrics, Customer.io, Intercom, and KeenIO.\nAll of these tools run on the same data: who are your customers and what are they doing? But each tool requires that you send that data in a slightly different format, which means that you\u2019d have to write code to track all of this information, again and again, for each tool, on each page of your app or website.\nEnter Segment. Do it once.\nSegment eliminates this process by introducing an abstraction layer. You send your data to Segment, and Segment understands how to translate it so we can send it along to any destination. You enable destinations from the catalog in the Segment App, and user data immediately starts flowing into those tools. No extra code required!\nSegment supports many categories of destinations, from advertising to marketing, email to customer support, CRM to user testing, and even data warehouses. You can view a complete list of availabledestinationsor check out thedestination pagefor a searchable list broken down by category.\n\n## Warehouses\nA warehouse is a central repository of data collected from one or more sources. This is what commonly comes to mind when you think about a relational database: structured data that fits neatly into rows and columns.\nIn Segment, a Warehouse is a special type of destination. Instead of streaming data to the destination all the time, we load data to them in bulk at regular intervals. When we load data, we insert and update events and objects, and automatically adjust their schema to fit the data you\u2019ve sent to Segment.\n\n## Reverse ETL\nWithReverse ETL, your data warehouse acts as your source, enabling you to send data from your warehouse to your destinations.\n\n## Information on sources and destinations pages\nThe Sources and Destinations pages allow each user to decide what information appears in their personal view for each page.\nOn both pages, you can click the stack icon in the upper right-hand corner of the table to see and select Source properties to show. You can select up to five columns of properties.\nThe following information is available for Sources:\n- Status\n- Environment\n- Destinations\n- Type\n- Category\n- Created At\n- Created By\nOn the Destinations page, you can choose among the following properties:\n- Status\n- Created At\n- Type\n- Sources\n- Category\nYou can then sort or filter each column to just the values you care about, by clicking on the arrow next to each displayed column.\n\n## FAQs\n\n## My source was disabled and it wasn\u2019t done by anyone in my workspace\nSources without any enabled destinations are auto-disabled after 14 days. However, the workspace owner is notified by email before Segment disables the source. Data that flows into Segment but does not flow to any downstream tools is not valuable to you and unnecessarily takes up space.\nSegment understands there may be cases to keep a source active. If you\u2019d like to add your sources to an exception list, you can do so by filling out thisAirtable form.\n\n## Can I request Segment add an integration tool?\nYes, you are able to submit an integration request here https://segment.com/requests/integrations/.\nThis page was last modified: 29 Feb 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/#warehouses"
  },
  {
    "title": " Connections Overview | Segment Documentation",
    "content": "- Home\n- /\n- Connections Overview\n\n## Connections Overview\nOn this page\n- Sources\n- Destinations\n- Warehouses\n- Information on sources and destinations pages\n- FAQs\nConnections is Segment\u2019s core product offering: you can collect event data from your mobile apps, websites, and servers with one API, then pull in contextual data from cloud apps like your CRM, payment systems, and internal databases to build a unified picture of your customers.\n\n## Sources\nIn Segment, you create a source (or more than one!) for each website or app you want to track. Wehighly recommendcreating a Source for each unique source of data (each site, app, or server), though this isn\u2019t required.\nSources belong to a workspace, and the URL for a source looks something like this:https://segment.com/<my-workspace>/sources/<my-source-name>/\n\n```\nhttps://segment.com/<my-workspace>/sources/<my-source-name>/\n```\nYou can create new sources using the button in the workspace view. Each source you create has a write key, which is used to send data to that source. For example, to loadanalytics.js, the Segment JavaScript libraryon your page, the snippet on theQuickstart Guideincludes:\n\n```\nanalytics.js\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\nLearn more about sources from thesources overview page.\n\n## Destinations\nDestinations are business tools or apps that you can connect to the data flowing through Segment. Some of Segment\u2019s most popular destinations are Google Analytics, Mixpanel, Kissmetrics, Customer.io, Intercom, and KeenIO.\nAll of these tools run on the same data: who are your customers and what are they doing? But each tool requires that you send that data in a slightly different format, which means that you\u2019d have to write code to track all of this information, again and again, for each tool, on each page of your app or website.\nEnter Segment. Do it once.\nSegment eliminates this process by introducing an abstraction layer. You send your data to Segment, and Segment understands how to translate it so we can send it along to any destination. You enable destinations from the catalog in the Segment App, and user data immediately starts flowing into those tools. No extra code required!\nSegment supports many categories of destinations, from advertising to marketing, email to customer support, CRM to user testing, and even data warehouses. You can view a complete list of availabledestinationsor check out thedestination pagefor a searchable list broken down by category.\n\n## Warehouses\nA warehouse is a central repository of data collected from one or more sources. This is what commonly comes to mind when you think about a relational database: structured data that fits neatly into rows and columns.\nIn Segment, a Warehouse is a special type of destination. Instead of streaming data to the destination all the time, we load data to them in bulk at regular intervals. When we load data, we insert and update events and objects, and automatically adjust their schema to fit the data you\u2019ve sent to Segment.\n\n## Reverse ETL\nWithReverse ETL, your data warehouse acts as your source, enabling you to send data from your warehouse to your destinations.\n\n## Information on sources and destinations pages\nThe Sources and Destinations pages allow each user to decide what information appears in their personal view for each page.\nOn both pages, you can click the stack icon in the upper right-hand corner of the table to see and select Source properties to show. You can select up to five columns of properties.\nThe following information is available for Sources:\n- Status\n- Environment\n- Destinations\n- Type\n- Category\n- Created At\n- Created By\nOn the Destinations page, you can choose among the following properties:\n- Status\n- Created At\n- Type\n- Sources\n- Category\nYou can then sort or filter each column to just the values you care about, by clicking on the arrow next to each displayed column.\n\n## FAQs\n\n## My source was disabled and it wasn\u2019t done by anyone in my workspace\nSources without any enabled destinations are auto-disabled after 14 days. However, the workspace owner is notified by email before Segment disables the source. Data that flows into Segment but does not flow to any downstream tools is not valuable to you and unnecessarily takes up space.\nSegment understands there may be cases to keep a source active. If you\u2019d like to add your sources to an exception list, you can do so by filling out thisAirtable form.\n\n## Can I request Segment add an integration tool?\nYes, you are able to submit an integration request here https://segment.com/requests/integrations/.\nThis page was last modified: 29 Feb 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/#information-on-sources-and-destinations-pages"
  },
  {
    "title": " Connections Overview | Segment Documentation",
    "content": "- Home\n- /\n- Connections Overview\n\n## Connections Overview\nOn this page\n- Sources\n- Destinations\n- Warehouses\n- Information on sources and destinations pages\n- FAQs\nConnections is Segment\u2019s core product offering: you can collect event data from your mobile apps, websites, and servers with one API, then pull in contextual data from cloud apps like your CRM, payment systems, and internal databases to build a unified picture of your customers.\n\n## Sources\nIn Segment, you create a source (or more than one!) for each website or app you want to track. Wehighly recommendcreating a Source for each unique source of data (each site, app, or server), though this isn\u2019t required.\nSources belong to a workspace, and the URL for a source looks something like this:https://segment.com/<my-workspace>/sources/<my-source-name>/\n\n```\nhttps://segment.com/<my-workspace>/sources/<my-source-name>/\n```\nYou can create new sources using the button in the workspace view. Each source you create has a write key, which is used to send data to that source. For example, to loadanalytics.js, the Segment JavaScript libraryon your page, the snippet on theQuickstart Guideincludes:\n\n```\nanalytics.js\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\n\n```\nanalytics.load(\"YOUR_WRITE_KEY\");\n```\nLearn more about sources from thesources overview page.\n\n## Destinations\nDestinations are business tools or apps that you can connect to the data flowing through Segment. Some of Segment\u2019s most popular destinations are Google Analytics, Mixpanel, Kissmetrics, Customer.io, Intercom, and KeenIO.\nAll of these tools run on the same data: who are your customers and what are they doing? But each tool requires that you send that data in a slightly different format, which means that you\u2019d have to write code to track all of this information, again and again, for each tool, on each page of your app or website.\nEnter Segment. Do it once.\nSegment eliminates this process by introducing an abstraction layer. You send your data to Segment, and Segment understands how to translate it so we can send it along to any destination. You enable destinations from the catalog in the Segment App, and user data immediately starts flowing into those tools. No extra code required!\nSegment supports many categories of destinations, from advertising to marketing, email to customer support, CRM to user testing, and even data warehouses. You can view a complete list of availabledestinationsor check out thedestination pagefor a searchable list broken down by category.\n\n## Warehouses\nA warehouse is a central repository of data collected from one or more sources. This is what commonly comes to mind when you think about a relational database: structured data that fits neatly into rows and columns.\nIn Segment, a Warehouse is a special type of destination. Instead of streaming data to the destination all the time, we load data to them in bulk at regular intervals. When we load data, we insert and update events and objects, and automatically adjust their schema to fit the data you\u2019ve sent to Segment.\n\n## Reverse ETL\nWithReverse ETL, your data warehouse acts as your source, enabling you to send data from your warehouse to your destinations.\n\n## Information on sources and destinations pages\nThe Sources and Destinations pages allow each user to decide what information appears in their personal view for each page.\nOn both pages, you can click the stack icon in the upper right-hand corner of the table to see and select Source properties to show. You can select up to five columns of properties.\nThe following information is available for Sources:\n- Status\n- Environment\n- Destinations\n- Type\n- Category\n- Created At\n- Created By\nOn the Destinations page, you can choose among the following properties:\n- Status\n- Created At\n- Type\n- Sources\n- Category\nYou can then sort or filter each column to just the values you care about, by clicking on the arrow next to each displayed column.\n\n## FAQs\n\n## My source was disabled and it wasn\u2019t done by anyone in my workspace\nSources without any enabled destinations are auto-disabled after 14 days. However, the workspace owner is notified by email before Segment disables the source. Data that flows into Segment but does not flow to any downstream tools is not valuable to you and unnecessarily takes up space.\nSegment understands there may be cases to keep a source active. If you\u2019d like to add your sources to an exception list, you can do so by filling out thisAirtable form.\n\n## Can I request Segment add an integration tool?\nYes, you are able to submit an integration request here https://segment.com/requests/integrations/.\nThis page was last modified: 29 Feb 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/#faqs"
  },
  {
    "title": " Quickstart: Analytics.js | Segment Documentation",
    "content": "- Home\n- /\n- Connections\n- /\n- Sources\n- /\n- Catalog\n- /\n- Libraries\n- /\n- Website\n- /\n- Javascript\n- /\n- Quickstart: Analytics.js\n\n## Quickstart: Analytics.js\nOn this page\n- Step 1: Create a source in the Segment app\n- Step 2: Install Segment to your site\n- Step 3: Identify users\n- Step 4: Track actions\n- What\u2019s next?\nThis tutorial gets you started sending data from your website to Segment and any of Segment\u2019s destinations, using Segment\u2019s Analytics.js library.\nWant to learn more? Check out theAnalytics.js reference.\n\n## Step 1: Create a source in the Segment app\nBefore you begin, you need a Workspace (which is a container that holds all of the Sources and Destinations that are billed together for an organization). You can sign up for a free Segment account and create a workspace.\nTo create an Analytics.js source source in the Segment app:\n- ClickAdd Source.\n- From the source catalog page, clickJavaScript.\n- ClickAdd Sourceagain from the informational panel that appears to the right.\n- Give the source a display name, and enter the URL the source will collect data from.\nWhen you create a source in the Segment web app, it tells the Segment servers that you\u2019ll be sending data from a specific source type. When you create (or change) a source in the Segment app, Segment generates a new write key for that source. You use the write key in your website code to tell Segment servers where the data is coming from, so Segment can route it to your Destinations and other tools.\n\n## Step 2: Install Segment to your site\nYou can choose to install Segment to your site in 1 of 2 ways:\na. Add the Segment snippet to your app\nb. Install Segment as a NPM package\n\n## Step 2a: Add the Segment Snippet\nYou can find the latest version of the Segment snippet in theOverviewtab of your Javascript source.\nTo add the Segment snippet to your app:\nPaste the snippet into the<head>tag of your site to install Segment.\n\n```\n<head>\n```\n\n```\n<script>!function(){vari=\"analytics\",analytics=window[i]=window[i]||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error(\"Segment snippet included twice.\");else{analytics.invoked=!0;analytics.methods=[\"trackSubmit\",\"trackClick\",\"trackLink\",\"trackForm\",\"pageview\",\"identify\",\"reset\",\"group\",\"track\",\"ready\",\"alias\",\"debug\",\"page\",\"screen\",\"once\",\"off\",\"on\",\"addSourceMiddleware\",\"addIntegrationMiddleware\",\"setAnonymousId\",\"addDestinationMiddleware\",\"register\"];analytics.factory=function(e){returnfunction(){if(window[i].initialized)returnwindow[i][e].apply(window[i],arguments);varn=Array.prototype.slice.call(arguments);if([\"track\",\"screen\",\"alias\",\"group\",\"page\",\"identify\"].indexOf(e)>-1){varc=document.querySelector(\"link[rel='canonical']\");n.push({__t:\"bpc\",c:c&&c.getAttribute(\"href\")||void0,p:location.pathname,u:location.href,s:location.search,t:document.title,r:document.referrer})}n.unshift(e);analytics.push(n);returnanalytics}};for(varn=0;n<analytics.methods.length;n++){varkey=analytics.methods[n];analytics[key]=analytics.factory(key)}analytics.load=function(key,n){vart=document.createElement(\"script\");t.type=\"text/javascript\";t.async=!0;t.setAttribute(\"data-global-segment-analytics-key\",i);t.src=\"https://cdn.segment.com/analytics.js/v1/\"+key+\"/analytics.min.js\";varr=document.getElementsByTagName(\"script\")[0];r.parentNode.insertBefore(t,r);analytics._loadOptions=n};analytics._writeKey=\"YOUR_WRITE_KEY\";;analytics.SNIPPET_VERSION=\"5.2.1\";analytics.load(\"YOUR_WRITE_KEY\");analytics.page();}}();</script>\n```\n\n```\n<script>!function(){vari=\"analytics\",analytics=window[i]=window[i]||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error(\"Segment snippet included twice.\");else{analytics.invoked=!0;analytics.methods=[\"trackSubmit\",\"trackClick\",\"trackLink\",\"trackForm\",\"pageview\",\"identify\",\"reset\",\"group\",\"track\",\"ready\",\"alias\",\"debug\",\"page\",\"screen\",\"once\",\"off\",\"on\",\"addSourceMiddleware\",\"addIntegrationMiddleware\",\"setAnonymousId\",\"addDestinationMiddleware\",\"register\"];analytics.factory=function(e){returnfunction(){if(window[i].initialized)returnwindow[i][e].apply(window[i],arguments);varn=Array.prototype.slice.call(arguments);if([\"track\",\"screen\",\"alias\",\"group\",\"page\",\"identify\"].indexOf(e)>-1){varc=document.querySelector(\"link[rel='canonical']\");n.push({__t:\"bpc\",c:c&&c.getAttribute(\"href\")||void0,p:location.pathname,u:location.href,s:location.search,t:document.title,r:document.referrer})}n.unshift(e);analytics.push(n);returnanalytics}};for(varn=0;n<analytics.methods.length;n++){varkey=analytics.methods[n];analytics[key]=analytics.factory(key)}analytics.load=function(key,n){vart=document.createElement(\"script\");t.type=\"text/javascript\";t.async=!0;t.setAttribute(\"data-global-segment-analytics-key\",i);t.src=\"https://cdn.segment.com/analytics.js/v1/\"+key+\"/analytics.min.js\";varr=document.getElementsByTagName(\"script\")[0];r.parentNode.insertBefore(t,r);analytics._loadOptions=n};analytics._writeKey=\"YOUR_WRITE_KEY\";;analytics.SNIPPET_VERSION=\"5.2.1\";analytics.load(\"YOUR_WRITE_KEY\");analytics.page();}}();</script>\n```\n\n```\n<scripttype=\"text/javascript\">(function(){// define the key where the global analytics object will be accessible// customers can safely set this to be something else if need bevarglobalAnalyticsKey=\"analytics\"// Create a queue, but don't obliterate an existing one!varanalytics=window[globalAnalyticsKey]=window[globalAnalyticsKey]||[];// If the real analytics.js is already on the page return.if(analytics.initialize)return;// If the snippet was invoked already show an error.if(analytics.invoked){if(window.console&&console.error){console.error(\"Segment snippet included twice.\");}return;}// Invoked flag, to make sure the snippet// is never invoked twice.analytics.invoked=true;// A list of the methods in Analytics.js to stub.analytics.methods=[\"trackSubmit\",\"trackClick\",\"trackLink\",\"trackForm\",\"pageview\",\"identify\",\"reset\",\"group\",\"track\",\"ready\",\"alias\",\"debug\",\"page\",\"screen\",\"once\",\"off\",\"on\",\"addSourceMiddleware\",\"addIntegrationMiddleware\",\"setAnonymousId\",\"addDestinationMiddleware\",\"register\"];// Define a factory to create stubs. These are placeholders// for methods in Analytics.js so that you never have to wait// for it to load to actually record data. The `method` is// stored as the first argument, so we can replay the data.analytics.factory=function(e){returnfunction(){if(window[globalAnalyticsKey].initialized){// Sometimes users assigned analytics to a variable before analytics is done loading, resulting in a stale reference.// If so, proxy any calls to the 'real' analytics instance.returnwindow[globalAnalyticsKey][e].apply(window[globalAnalyticsKey],arguments);}varargs=Array.prototype.slice.call(arguments);// Add buffered page context object so page information is always up-to-dateif([\"track\",\"screen\",\"alias\",\"group\",\"page\",\"identify\"].indexOf(e)>-1){varc=document.querySelector(\"link[rel='canonical']\");args.push({__t:\"bpc\",c:c&&c.getAttribute(\"href\")||undefined,p:location.pathname,u:location.href,s:location.search,t:document.title,r:document.referrer});}args.unshift(e);analytics.push(args);returnanalytics;};};// For each of our methods, generate a queueing stub.for(vari=0;i<analytics.methods.length;i++){varkey=analytics.methods[i];analytics[key]=analytics.factory(key);}// Define a method to load Analytics.js from our CDN,// and that will be sure to only ever load it once.analytics.load=function(key,options){// Create an async script element based on your key.vart=document.createElement(\"script\");t.type=\"text/javascript\";t.async=true;t.setAttribute(\"data-global-segment-analytics-key\",globalAnalyticsKey)t.src=\"https://cdn.segment.com/analytics.js/v1/\"+key+\"/analytics.min.js\";// Insert our script next to the first script element.varfirst=document.getElementsByTagName(\"script\")[0];first.parentNode.insertBefore(t,first);analytics._loadOptions=options;};analytics._writeKey=\"YOUR_WRITE_KEY\";// Add a version to keep track of what's in the wild.analytics.SNIPPET_VERSION=\"5.2.1\";// Load Analytics.js with your key, which will automatically// load the tools you've enabled for your account. Boosh!analytics.load(\"YOUR_WRITE_KEY\");// Make the first page call to load the integrations. If// you'd like to manually name or tag the page, edit or// move this call however you'd like.analytics.page();})();</script>\n```\n\n```\n<scripttype=\"text/javascript\">(function(){// define the key where the global analytics object will be accessible// customers can safely set this to be something else if need bevarglobalAnalyticsKey=\"analytics\"// Create a queue, but don't obliterate an existing one!varanalytics=window[globalAnalyticsKey]=window[globalAnalyticsKey]||[];// If the real analytics.js is already on the page return.if(analytics.initialize)return;// If the snippet was invoked already show an error.if(analytics.invoked){if(window.console&&console.error){console.error(\"Segment snippet included twice.\");}return;}// Invoked flag, to make sure the snippet// is never invoked twice.analytics.invoked=true;// A list of the methods in Analytics.js to stub.analytics.methods=[\"trackSubmit\",\"trackClick\",\"trackLink\",\"trackForm\",\"pageview\",\"identify\",\"reset\",\"group\",\"track\",\"ready\",\"alias\",\"debug\",\"page\",\"screen\",\"once\",\"off\",\"on\",\"addSourceMiddleware\",\"addIntegrationMiddleware\",\"setAnonymousId\",\"addDestinationMiddleware\",\"register\"];// Define a factory to create stubs. These are placeholders// for methods in Analytics.js so that you never have to wait// for it to load to actually record data. The `method` is// stored as the first argument, so we can replay the data.analytics.factory=function(e){returnfunction(){if(window[globalAnalyticsKey].initialized){// Sometimes users assigned analytics to a variable before analytics is done loading, resulting in a stale reference.// If so, proxy any calls to the 'real' analytics instance.returnwindow[globalAnalyticsKey][e].apply(window[globalAnalyticsKey],arguments);}varargs=Array.prototype.slice.call(arguments);// Add buffered page context object so page information is always up-to-dateif([\"track\",\"screen\",\"alias\",\"group\",\"page\",\"identify\"].indexOf(e)>-1){varc=document.querySelector(\"link[rel='canonical']\");args.push({__t:\"bpc\",c:c&&c.getAttribute(\"href\")||undefined,p:location.pathname,u:location.href,s:location.search,t:document.title,r:document.referrer});}args.unshift(e);analytics.push(args);returnanalytics;};};// For each of our methods, generate a queueing stub.for(vari=0;i<analytics.methods.length;i++){varkey=analytics.methods[i];analytics[key]=analytics.factory(key);}// Define a method to load Analytics.js from our CDN,// and that will be sure to only ever load it once.analytics.load=function(key,options){// Create an async script element based on your key.vart=document.createElement(\"script\");t.type=\"text/javascript\";t.async=true;t.setAttribute(\"data-global-segment-analytics-key\",globalAnalyticsKey)t.src=\"https://cdn.segment.com/analytics.js/v1/\"+key+\"/analytics.min.js\";// Insert our script next to the first script element.varfirst=document.getElementsByTagName(\"script\")[0];first.parentNode.insertBefore(t,first);analytics._loadOptions=options;};analytics._writeKey=\"YOUR_WRITE_KEY\";// Add a version to keep track of what's in the wild.analytics.SNIPPET_VERSION=\"5.2.1\";// Load Analytics.js with your key, which will automatically// load the tools you've enabled for your account. Boosh!analytics.load(\"YOUR_WRITE_KEY\");// Make the first page call to load the integrations. If// you'd like to manually name or tag the page, edit or// move this call however you'd like.analytics.page();})();</script>\n```\nReplaceYOUR_WRITE_KEYin the snippet you pasted with your Segment project\u2019sWrite Key.Find the write keyin your project set up guide or in the source\u2019s settings.\n\n```\nYOUR_WRITE_KEY\n```\nWhen you use Analytics.js in device-mode, the source\u2019s Write Key is public, because it runs in a user\u2019s browser and can be accessed using the browser\u2019s developer tools. If this is not acceptable to your organization, you can exploreother Segment Sourceswhich collect data from a server-based installation, and which are not accessible to the user.\nThat snippet loads Analytics.js onto the pageasynchronously, so it won\u2019t affect your page load speed. Once the snippet is running on your site, you can turn on destinations from the destinations page in your workspace and they start loading on your site automatically.\nNote that you should remove other native third-party destination code that you might have on your site. For example, if you\u2019re using Segment to send data to Google Analytics, make sure you remove the Google Analytics snippet from your site source code to prevent sending the data twice.\nIf you only want the most basic Google Analytics setup, there\u2019s no need to continue with the setup. Just toggle on Google Analytics in the Segment interface.\nA lot of analytics and marketing tools need to record who each user is on your site. If you want to use any tool that deals with the identity of your users, read on about the Identify method.\n\n## Step 2b: Install Segment as a npm package\nTo install Segment as a npm package:\n- Install the analytics package.# npmnpminstall@segment/analytics-next# yarnyarn add @segment/analytics-next# pnpmpnpm add @segment/analytics-next\nInstall the analytics package.\n\n```\n# npmnpminstall@segment/analytics-next# yarnyarn add @segment/analytics-next# pnpmpnpm add @segment/analytics-next\n```\n\n```\n# npmnpminstall@segment/analytics-next# yarnyarn add @segment/analytics-next# pnpmpnpm add @segment/analytics-next\n```\n- Import and initialize the analytics.import{AnalyticsBrowser}from'@segment/analytics-next'exportconstanalytics=AnalyticsBrowser.load({writeKey:'YOUR_WRITE_KEY'})// orexportconstanalytics=newAnalyticsBrowser()analytics.load({writeKey:'YOUR_WRITE_KEY'})\nImport and initialize the analytics.\n\n```\nimport{AnalyticsBrowser}from'@segment/analytics-next'exportconstanalytics=AnalyticsBrowser.load({writeKey:'YOUR_WRITE_KEY'})// orexportconstanalytics=newAnalyticsBrowser()analytics.load({writeKey:'YOUR_WRITE_KEY'})\n```\n\n```\nimport{AnalyticsBrowser}from'@segment/analytics-next'exportconstanalytics=AnalyticsBrowser.load({writeKey:'YOUR_WRITE_KEY'})// orexportconstanalytics=newAnalyticsBrowser()analytics.load({writeKey:'YOUR_WRITE_KEY'})\n```\nFor more initialization patterns and general information on@segment/analytics-next, see the repository\u2019sREADME.\n\n```\n@segment/analytics-next\n```\n\n## Step 3: Identify users\nFor any of the different methods described in this quickstart, you can replace the properties and traits in the code samples with variables that represent the data collected.\nThe Identify method is how you tell Segment who the current user is. It includes a unique User ID, and any optional traits you know about them. You can read more about it in theidentify method reference.\nYou don\u2019t need to call Identify for anonymous visitors to your site. Segment automatically assigns them ananonymousId, so just callingpageandtrackworks just fine without Identify.\n\n```\nanonymousId\n```\n\n```\npage\n```\n\n```\ntrack\n```\nHere\u2019s what a basic call to Identify might look like:\n\n```\nanalytics.identify('f4ca124298',{name:'Michael Brown',email:'mbrown@example.com'});\n```\n\n```\nanalytics.identify('f4ca124298',{name:'Michael Brown',email:'mbrown@example.com'});\n```\nThis identifies Michael by his unique User ID (in this case,f4ca124298, which is what you know him by in your database) and labels him withnameandemailtraits.\n\n```\nf4ca124298\n```\n\n```\nname\n```\n\n```\nemail\n```\nWhen you actually put that code on your site, you need to replace those hard-coded trait values with the variables that represent the details of the currently logged-in user.\nTo do that, Segment recommends that you use a backend template to inject an Identify call into the footer of every page of your site where the user is logged in. That way, no matter what page the user first lands on, they will always be identified. You don\u2019t need to call Identify if your unique identifier (userId) is not known.\n\n```\nuserId\n```\nDepending on your templating language, your actual Identify call might look something like this:\n\n```\nanalytics.identify('{{user.id}}',{name:'{{user.fullname}}',email:'{{user.email}}'});\n```\n\n```\nanalytics.identify('{{user.id}}',{name:'{{user.fullname}}',email:'{{user.email}}'});\n```\nWith that call in your page footer, you successfully identify every user that visits your site.\nIf you only want to use a basic CRM setup, you can stop here. Just enable Salesforce, Intercom, or any other CRM system from your Segment workspace, and Segment starts sending all of your user data to it.\nA lot of analytics tools record more than justidentitiesas they record the actions each user performs too. If you\u2019re looking for a complete event tracking analytics setup, keep reading\u2026\n\n## Step 4: Track actions\nThe Track method is how you tell Segment about the actions your users are performing on your site. Every action triggers what\u2019s called an \u201cevent\u201d, which can also have associated properties. You can read more about Track in thetrack method reference.\nHere\u2019s what a call to a Track call might look like when a user signs up:\n\n```\nanalytics.track('Signed Up',{plan:'Enterprise'});\n```\n\n```\nanalytics.track('Signed Up',{plan:'Enterprise'});\n```\nThat tells Segment that your user triggered theSigned Upevent, and chose your hypothetical'Enterprise'plan. Properties can be anything you want to record, for example:\n\n```\nSigned Up\n```\n\n```\n'Enterprise'\n```\n\n```\nanalytics.track('Article Bookmarked',{title:'Snow Fall',subtitle:'The Avalanche at Tunnel Creek',author:'John Branch'});\n```\n\n```\nanalytics.track('Article Bookmarked',{title:'Snow Fall',subtitle:'The Avalanche at Tunnel Creek',author:'John Branch'});\n```\nIf you\u2019re just getting started, some of the events you should track are events that indicate the success of your site, likeSigned Up,Item PurchasedorArticle Bookmarked.\nTo get started, Segment recommends that you track just a few important events. You can always add more later.\nAfter you add a few Track calls, you successfully installed Analytics.js tracking. Now you\u2019re ready to turn on any destination you like from the Segment interface.\n\n## What\u2019s next?\nYou might want to check out the fullAnalytics.js referenceto see what else is possible, or read about theTracking API methodsto get a sense for the bigger picture.\nIf you\u2019re running an ecommerce site or app you should also check out Segment\u2019secommerce API referenceto make sure your products and checkout experience are instrumented properly.\nThis page was last modified: 29 Feb 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/quickstart/"
  },
  {
    "title": " Sources Overview | Segment Documentation",
    "content": "- Home\n- /\n- Connections\n- /\n- Sources Overview\n\n## Sources Overview\nOn this page\n- What is a source?\n- Types of sources\n- Event streams sources\n- Cloud app sources\n- Reverse ETL sources\n- Create a source\n- Library tiers\nRelated content\n- Sources Catalog\n\n## What is a source?\nA source is a website, server library, mobile SDK, or cloud application which can send data into Segment. It\u2019s where your data originates. Add a source to collect data to understand who your customers are and how they\u2019re using your product. Create a source for each website or app you want to track. While it\u2019s not required that you have a single source for each server, site, or app,\u00a0you should create a source for each unique source of data.\nEach source you create has a write key, which is used to send data to that source. For example, to loadanalytics.js, the Segment JavaScript libraryon your page, the snippet on theQuickstart Guideincludes:\n\n```\nanalytics.js\n```\n\n```\nanalytics.identify('user_123',{email:'jane.kim@example.com',name:'Jane Kim'});\n```\n\n```\nanalytics.identify('user_123',{email:'jane.kim@example.com',name:'Jane Kim'});\n```\nIf you don't see the source you're looking for in our catalog\nIf a tool is not listed as a supported source in Segment\u2019scatalog, then it is not possible to incorporate the integration out-of-the-box within a Segment workspace. However, as an alternative, you can use theHTTP APIsource to collect data from the tool\u2019s API. You can also useFunctionsto send or receive data from other tools.\n\n## Types of sources\nSegment has three types of sources:\n- Event streams\n- Cloud app sources\n- Reverse ETL\n\n## Event streams sources\nEvent streams sources collect data from your website or app to monitor user actions. These sources includewebsite libraries,mobile, andserver sources.\n\n## Source Overview\nThe Source Overview page for an event stream source shows you apipeline viewof all events Segment receives from your source, events that failed on ingest, events that are filtered at the source level, and \u201celigible events\u201d, which are the events that will flow into your destinations. If you select one of the steps in the pipeline view, you can see a line chart that reflects the fluctuations in volume alongside abreakdown tablethat has more details about the events impacted by the selected step.\n\n## Pipeline view\nThe pipeline view shows each of the four steps Segment encounters when processing data from your source:\n- Events successfully received: All events that Segment received from your source.\n- Failed on ingest: Events that failed at the Tracking API level. For more information about errors that might cause events to fail on ingest, see Delivery Overview\u2019sTroubleshootingdocumentation.\n- Filtered at source: Events that were filtered out by source schema controls, Tracking Plans, or a common JSON schema.\n- Eligible events: Eligible events are the events that flow downstream to your Segment destinations. This value is read-only, but you can see the events that flow downstream to a particular destination usingDelivery Overview.\nYou can use the time picker located on the Source Overview page to specify a time period (last 10 minutes, 1 hour, 24 hours, 7 days, 2 weeks, or a custom date range over the last two weeks) for which you\u2019d like to see data. Segment sets the time picker to show data for the last 24 hours by default.\n\n## Breakdown table\nThe breakdown table displays three tabs,Event type,Event name, andApp version.\n- Event type: The Segment Spec event type (Track call vs. Identify call, for example).This tab also contains a \u201c% change\u201d metric, which displays how the event counts differ from the last comparable time range, represented as a percentage.\n- Event name: The event name, provided by you or the source.\n- App version: The app/release version, provided by you or the source.\nEach of these tabs displays an event count, which is the total number of events that Segment received in a particular step.\nThe Unnamed or batched events under theEvent Nametab is a collection of all identify and page/screen calls in the source.\n\n## Website libraries\nAnalytics.js, the JavaScript library, is the most powerful way to track customer data from your website. If you\u2019re just starting out, Segment recommends it over server-side libraries as the simplest installation for any website.\n\n## The Analytics Quickstart Guide\nAnalytics and data collection is a very broad topic and it can be quite overwhelming. How do you get started?\n\n## Mobile\nSegment\u2019s Mobile SDKs are the best way to simplify your iOS, Android, and Xamarin app tracking. Try them over server-side sources as the default installation for any mobile app.\n- AMP\n- Android\n- Android Wear\n- iOS\n- Kotlin\n- React Native\n- Swift\n- Xamarin\nAnalytics-Flutter library\nThe Analytics-Flutter library is currently only available in pilot phase and is governed by Segment\u2019sFirst Access and Beta Preview Terms. If you\u2019d like to try out this library, access theAnalytics-Flutter GitHub repository.\n\n## Server\nSegment\u2019s server-side sources let you send analytics data directly from your servers. Segment recommends tracking from your servers when device-mode tracking (tracking on the client) doesn\u2019t work. Check out theguide on server-side trackingif you\u2019re not sure whether it makes sense for your use case.\n- Clojure\n- Go\n- Java\n- Node.js\n- PHP\n- Python\n- Ruby\n- .NET\nCloud-mode tracking\nServer-side data management is when tag sends data to the Segment servers, which then passes that data to the destination system.\n\n## Cloud app sources\nCloud app sources empower you to pull together data from all of your different third-party tools into a Segment warehouse or to your other enabled integrated tools. They send data about your users from your connected web apps. There are two types of Cloud Apps:Object cloud sourcesandEvent cloud sources.\n\n## Comparing Cloud Sources\nWondering which cloud-apps send which types of data? Check out the Cloud Sources comparison.\n\n## Object Cloud Sources\nThese Cloud App Sources can export data from its third party tool and import it directly into your Segment warehouse. Make sure you have a Segment warehouse enabled before you enable any of the following sources:\n- Facebook Ads\nFacebook Ads\n- Google Ads\nGoogle Ads\n- HubSpot\nHubSpot\n- Intercom\nIntercom\n- Mailchimp\nMailchimp\n- Mandrill\nMandrill\n- Marketo\nMarketo\n- Salesforce\nSalesforce\n- Salesforce Marketing Cloud\nSalesforce Marketing Cloud\n- SendGrid\nSendGrid\n- Stripe\nStripe\n- Twilio\nTwilio\n- Zendesk\nZendesk\n\n## Event Cloud Sources\nThese Cloud App Sources can not only export data into your Segment warehouse, but they canalsofederate the exported data into your other enabled Segment integrations:\n- ActiveCampaign\nActiveCampaign\n- Aircall\nAircall\n- Airship\nAirship\n- Alloy Flow\nAlloy Flow\n- Amazon S3\nAmazon S3\n- Amplitude Cohorts\nAmplitude Cohorts\n- Antavo\nAntavo\n- Authvia\nAuthvia\n- AutopilotHQ\nAutopilotHQ\n- Beamer\nBeamer\n- Blip\nBlip\n- Bluedot\nBluedot\n- Blueshift\nBlueshift\n- Braze\nBraze\n- Candu\nCandu\n- Chatlio\nChatlio\n- CleverTap\nCleverTap\n- CommandBar\nCommandBar\n- ConfigCat\nConfigCat\n- Customer.io\nCustomer.io\n- Delighted\nDelighted\n- Drip\nDrip\n- Dub\nDub\n- Elastic Path\nElastic Path\n- Elastic Path CX Studio\nElastic Path CX Studio\n- Facebook Lead Ads\nFacebook Lead Ads\n- Factual Engine\nFactual Engine\n- Foursquare Movement\nFoursquare Movement\n- Freshchat\nFreshchat\n- Friendbuy\nFriendbuy\n- Gladly\nGladly\n- GWEN Webhooks\nGWEN Webhooks\n- Herow\nHerow\n- IBM Watson Assistant\nIBM Watson Assistant\n- Inflection\nInflection\n- Insider\nInsider\n- Iterable\nIterable\n- Jebbit\nJebbit\n- Klaviyo\nKlaviyo\n- Klenty\nKlenty\n- LaunchDarkly\nLaunchDarkly\n- Leanplum\nLeanplum\n- Listrak\nListrak\n- LiveLike (Source)\nLiveLike (Source)\n- Looker\nLooker\n- Mailjet\nMailjet\n- Mailmodo\nMailmodo\n- Mixpanel Cohorts\nMixpanel Cohorts\n- MoEngage (Source)\nMoEngage (Source)\n- Moesif API Analytics\nMoesif API Analytics\n- Navattic\nNavattic\n- Nudgespot\nNudgespot\n- One Creation\nOne Creation\n- OneSignal\nOneSignal\n- OneTrust\nOneTrust\n- Paytronix\nPaytronix\n- Pendo\nPendo\n- ProveSource\nProveSource\n- Pushwoosh Source\nPushwoosh Source\n- Qualtrics\nQualtrics\n- Quin AI\nQuin AI\n- Radar\nRadar\n- Refiner\nRefiner\n- Selligent Marketing Cloud\nSelligent Marketing Cloud\n- SendGrid Marketing Campaigns\nSendGrid Marketing Campaigns\n- Shopify (by Littledata)\nShopify (by Littledata)\n- Shopify - Powered by Fueled\nShopify - Powered by Fueled\n- Statsig\nStatsig\n- Synap\nSynap\n- Upollo\nUpollo\n- UserGuiding\nUserGuiding\n- Vero\nVero\n- Voucherify\nVoucherify\n- White Label Loyalty\nWhite Label Loyalty\n- WorkRamp\nWorkRamp\n- Yotpo\nYotpo\n\n## HTTP\nIf Segment doesn\u2019t have a library for your environment, you can send your data directly to theHTTP Tracking API. All of Segment\u2019s other sources and platforms use the HTTP API to work their magic behind the scenes.\n\n## Pixel\nSegment\u2019sPixel Tracking APIlets you track events from environments where you can\u2019t execute code, like tracking email opens.\n\n## Reverse ETL sources\nReverse ETL sources are data warehouses that enable you to useReverse ETLto send data from your warehouse source to your destinations.\nReverse ETL supports these sources:\n- BigQuery\n- Databricks\n- Postgres\n- Redshift\n- Snowflake\nSegment is actively working on adding more sources. If you\u2019d like to request Segment to add a particular source, please note it on thefeedback form.\n\n## Create a source\nTo create a source:\n- Navigate toConnectionsand clickAdd Source.\n- Click the Source you\u2019d like to add.Note:More than 80% of workspaces start by adding their JavaScript website.\n- ClickAdd Source.\n- Enter a name for your source as well as any information on the setup page.\n- ClickAdd Source.\nOnce you\u2019ve created a source, the source is automatically enabled and can immediately receive events. You can review your new events in that source\u2019sDebuggertab.\nSources not connected to an enabled destination are disabled after 14 days\nIf your source is not connected to any destinations or is only connected to disabled destinations, Segment automatically disables this source after 14 days, even if the source is receiving events. Disabled sources will no longer receive data. \nYou can view when Segment disables your destination in your workspace\u2019sAudit TrailasEvent : Source DisabledwithActor : Segment.\nWorkspace members receive an email notification before Segment disables your source so that your team has time to take action.\nIf you would like to prevent this behavior in your workspace, fill outthis Airtable form.\n\n```\nEvent : Source Disabled\n```\n\n```\nActor : Segment\n```\nOne source or multiple sources?\nSegment suggests that you create one source for each type of data you want to collect. For example, you might have one source for all of your website tracking and a different source for any mobile tracking. Creating one source per data type provides the following benefits:\n- Debugger ease of use - mixing libraries/sources on a single API key means you\u2019re heavily reliant on filtering to actually test events\n- Flexibility sending data to different projects - if you want to have different warehouse schemas, analytics projects, etc, having multiple sources would create this separation\n- More control - as your account grows with the number of destinations you enable, having separate sources allows you to have more control\n- A source type cannot be changed after it is created. You must create a new source if you would like to use a different source type.\n\n## Library tiers\nSegment has defined three tiers for libraries: Flagship, Maintenance, and Community. These tiers indicate the level of support, enhancements, and maintenance each library receives from Segment.\nThe criteria for assigning a library to a tier include its overall usage by customers and the availability of newer versions. Here\u2019s how Segment defines each tier:\n- Flagshiplibraries offer the most up-to-date functionality on Segment\u2019s most popular platforms. Segment actively maintains Flagship libraries, which benefit from new feature releases and ongoing development and support.\n- Maintenancelibraries send data as intended but receive no new feature support and only critical maintenance updates from Segment. When possible, Segment recommends using a Flagship version of these libraries.\n- Communitylibraries are neither managed nor updated by Segment. These libraries are available on GitHub under the MIT License for the open-source community to fork or contribute.\nIf a library falls into one of these tiers, you\u2019ll see the tier label at the beginning of the library\u2019s page.\nThis page was last modified: 18 Nov 2024\n\n## Further reading\n\n## Sources Catalog\nA list of the available sources on the Segment platform.\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/sources/"
  },
  {
    "title": " Destination Catalog | Segment Documentation",
    "content": "- Home\n- /\n- Connections\n- /\n- Destinations\n- /\n- Destination Catalog\n\n## Destination Catalog\nWant a simpler list?\nCheck out thelist ofalldestinations.\n\n## A/B Testing\n\n## 2mee\n\n## AB Smartly\n\n## AB Tasty client side\n\n## ABsmartly (Actions)\n\n## Adobe Target Cloud Mode\n\n## Adobe Target Web\n\n## Apptimize\n\n## Braze\n\n## CleverTap\n\n## Contentstack Cloud\nBeta\n\n## Contentstack Web\nBeta\n\n## ConvertFlow\n\n## Dynamic Yield by Mastercard Audiences\nBeta\n\n## Experiments by GrowthHackers\n\n## Flagship.io\n\n## Freshmarketer\n\n## FunnelEnvy\n\n## GraphJSON\n\n## Kameleoon (Actions)\nBeta\n\n## Kana\n\n## LaunchDarkly (Actions)\n\n## LaunchDarkly Audiences\n\n## Leanplum\n\n## Markettailor\n\n## Monetate\n\n## Mutiny\n\n## Ninetailed by Contentful\n\n## Optimizely Advanced Audience Targeting\nBeta\n\n## Optimizely Data Platform\nBeta\n\n## Optimizely Feature Experimentation (Actions)\n\n## Optimizely Full Stack\n\n## Optimizely Web\n\n## Personyze\n\n## PostHog\n\n## Proof Experiences\n\n## Split\n\n## Statsig\n\n## Tamber\n\n## Taplytics\n\n## Trackier\n\n## Vespucci\n\n## Visual Website Optimizer\n\n## VWO Cloud Mode (Actions)\n\n## VWO Web Mode (Actions)\nBeta\n\n## Advertising\n\n## Adikteev\n\n## AdQuick\n\n## AdRoll\n\n## Adtriba\n\n## Amazon Ads DSP and AMC\nBeta\n\n## Angler AI\nBeta\n\n## Bing Ads\n\n## ByteGain\n\n## Criteo App & Web Events\n\n## Criteo Audiences\n\n## Display and Video 360 (Actions)\n\n## DoubleClick Floodlight\n\n## EPICA\n\n## Everflow\n\n## Facebook App Events\n\n## Facebook Conversions API (Actions)\n\n## Facebook Offline Conversions\n\n## Facebook Pixel\n\n## Firebase\n\n## Flurry\n\n## Google Ads (Classic)\n\n## Google Ads (Gtag)\n\n## Google Ads Conversions\n\n## Google Ads Remarketing Lists\n\n## Innovid\n\n## Jivox\n\n## Kevel\n\n## Kitemetrics\n\n## LinkedIn Audiences\n\n## LinkedIn Conversions API\n\n## LinkedIn Insight Tag\n\n## LiveIntent Audiences\n\n## LiveRamp Audiences\nBeta\n\n## Millennial Media\n\n## Moloco MCM\n\n## Nanigans\n\n## Perfect Audience\n\n## Personas Facebook Custom Audiences\n\n## Pinterest Audiences\n\n## Pinterest Conversions API\n\n## Pinterest Tag\n\n## Podsights\n\n## Quantcast\n\n## QuanticMind\n\n## Quora Conversion Pixel\n\n## Reddit Conversions API\n\n## RevX Cloud (Actions)\nBeta\n\n## Rokt\n\n## Rokt Audiences (Actions)\nBeta\n\n## ShareASale\n\n## SimpleReach\n\n## Snapchat Audiences\n\n## Snapchat Conversions API\n\n## StackAdapt\nBeta\n\n## Taboola (Actions)\nBeta\n\n## The Trade Desk Crm\nBeta\n\n## TikTok Audiences\n\n## TikTok Conversions\n\n## Tiktok Offline Conversions\nBeta\n\n## TikTok Pixel\nBeta\n\n## Topsort\nBeta\n\n## TrafficGuard\n\n## Twitter Ads\n\n## Yahoo Audiences\nBeta\n\n## Zaius\n\n## Analytics\n\n## 1Flow\n\n## 1Flow Mobile Plugin\nBeta\n\n## 1Flow Web (Actions)\nBeta\n\n## AB Smartly\n\n## Accoil Analytics\n\n## Actable Predictive\nBeta\n\n## Adobe Analytics\n\n## AdQuick\n\n## Adtriba\n\n## Aggregations.io (Actions)\nBeta\n\n## Akita Customer Success\n\n## Alexa\n\n## Algolia Insights (Actions)\n\n## Amazon Kinesis\n\n## Amazon Kinesis Firehose\n\n## Amberflo\n\n## Amplitude\n\n## Amplitude (Actions)\n\n## Anodot\n\n## AppFit\nBeta\n\n## Asayer\n\n## Astrolabe\nBeta\n\n## Auryc\n\n## Avo\n\n## AWS S3\n\n## Beamer\n\n## Blend Ai\nBeta\n\n## Blendo\n\n## Blitzllama\n\n## Bloomreach Engagement\n\n## Breyta CRM\n\n## BuzzBoard\n\n## ByteGain\n\n## BytePlus\n\n## Calixa\n\n## Candu\n\n## Chartbeat\n\n## ChartMogul\nBeta\n\n## ClearBrain\n\n## CleverTap\n\n## Clicky\n\n## Cliff\n\n## comScore\n\n## Convertly\nBeta\n\n## Correlated\n\n## Countly\n\n## CrowdPower\n\n## Cruncher\n\n## Dreamdata\n\n## Emarsys\n\n## Emarsys (Actions)\nBeta\n\n## EMMA\n\n## EPICA\n\n## Equals\nBeta\n\n## events.win\nBeta\n\n## Everflow\n\n## Experiments by GrowthHackers\n\n## Facebook App Events\n\n## FactorsAI\n\n## Firebase\n\n## FL0\n\n## Flurry\n\n## FoxMetrics\n\n## FullStory\n\n## Fullstory (Actions)\n\n## Fullstory Cloud Mode (Actions)\n\n## FunnelFox\n\n## Gainsight\n\n## Gainsight PX\n\n## Gainsight Px Cloud (Actions)\n\n## Gauges\n\n## Google Ads Conversions\n\n## Google Analytics 4 Cloud\n\n## Google Analytics 4 Web\n\n## GoSquared\n\n## GraphJSON\n\n## Groundswell\n\n## GWEN (Actions)\nBeta\n\n## Heap\n\n## HitTail\n\n## Houseware\n\n## Hubble (Actions)\nBeta\n\n## HubSpot\n\n## HubSpot Cloud Mode (Actions)\n\n## HubSpot Web (Actions)\n\n## Humanic AI\n\n## hydra\n\n## Indicative\n\n## Inleads AI\n\n## journy io\n\n## June\n\n## June (Actions)\n\n## Kable\n\n## Kana\n\n## Keen\n\n## Kissmetrics\n\n## Kitemetrics\n\n## Koala\n\n## Koala (Cloud)\n\n## Kubit\n\n## Librato\n\n## Localytics\n\n## LogRocket\n\n## Lucky Orange\n\n## Lytics\n\n## Madkudu\n\n## Matomo\n\n## Mixpanel (Actions)\n\n## Mixpanel (Legacy)\n\n## MoEngage\n\n## Moengage (Actions)\n\n## Moesif API Analytics\n\n## Mutiny\n\n## New Relic\n\n## Nielsen DCR\n\n## Optimizely Feature Experimentation (Actions)\n\n## Orb\n\n## Parsely\n\n## Peaka\nBeta\n\n## Pendo\n\n## Pendo Web (Actions)\nBeta\n\n## PlayerZero Web\n\n## Pointillist\n\n## PostHog\n\n## ProfitWell\n\n## ProsperStack\n\n## Quantcast\n\n## Rabble AI\nBeta\n\n## Refersion\n\n## Retina\n\n## Richpanel\n\n## Ripe Cloud Mode (Actions)\n\n## Ripe Device Mode (Actions)\n\n## Rokt\n\n## Rupt\nBeta\n\n## Saleswings (Actions)\n\n## Schematic\nBeta\n\n## ScopeAI\n\n## Screeb\n\n## Screeb Web (Actions)\nBeta\n\n## Scuba Analytics\n\n## Segment Profiles\n\n## SegMetrics\n\n## Serenytics\n\n## Sherlock\n\n## SIGNL4 Alerting\n\n## SingleStore\n\n## Singular\n\n## Skalin\n\n## SlicingDice\n\n## Smartlook\n\n## Spideo\n\n## Split\n\n## Sprig Cloud\n\n## Startdeliver\n\n## Statsig\n\n## Stories\n\n## Stormly\n\n## Strikedeck\n\n## Survicate\n\n## Survicate (Actions)\nBeta\n\n## Swrve\n\n## Tamber\n\n## Toplyne Cloud Mode (Actions)\nBeta\n\n## Topsort\nBeta\n\n## Tractionboard\n\n## TrafficGuard\n\n## Treasure Data\n\n## Unwaffle\n\n## Upollo\nBeta\n\n## Upollo Web (Actions)\nBeta\n\n## UserIQ\n\n## Userlens by Wudpecker\nBeta\n\n## Usermaven (Actions)\nBeta\n\n## UserMotion (Actions)\nBeta\n\n## Userpilot Cloud (Actions)\nBeta\n\n## Userpilot Web (Actions)\nBeta\n\n## Vespucci\n\n## Vidora\n\n## WalkMe\n\n## WebEngage\n\n## Wigzo\n\n## Windsor\n\n## Woopra\n\n## Xtremepush\n\n## Yandex Metrica\n\n## Youbora\n\n## Attribution\n\n## Adjust\n\n## Adtriba\n\n## Angler AI\nBeta\n\n## AppsFlyer\n\n## Attribution\n\n## Branch Metrics\n\n## Button\n\n## Convertro\n\n## Dreamdata\n\n## EMMA\n\n## Impact Partnership Cloud\n\n## Kable\n\n## Kitemetrics\n\n## Kochava\n\n## Localytics\n\n## Lou\n\n## Matcha\n\n## Podscribe (Actions)\n\n## Refersion\n\n## Retina\n\n## RevX Cloud (Actions)\nBeta\n\n## Rockerbox\n\n## SaaSquatch v2\n\n## Scuba Analytics\n\n## Singular\n\n## Stormly\n\n## TrafficGuard\n\n## TUNE\n\n## Usermaven (Actions)\nBeta\n\n## CRM\n\n## 1Flow Mobile Plugin\nBeta\n\n## Aampe\n\n## Actions Pipedrive\nBeta\n\n## Akita Customer Success\n\n## Amberflo\n\n## Astrolabe\nBeta\n\n## Attio (Actions)\nBeta\n\n## Blackbaud Raiser's Edge NXT\nBeta\n\n## Braze\n\n## Braze Cohorts\n\n## Braze Web Device Mode (Actions)\n\n## Breyta CRM\n\n## ByteGain\n\n## Calixa\n\n## ChartMogul\nBeta\n\n## CleverTap\n\n## Close\n\n## Crisp\n\n## CrowdPower\n\n## Custify\n\n## Drip (Actions)\nBeta\n\n## Emarsys\n\n## EnjoyHQ\n\n## Firebase\n\n## Freshsales\n\n## Freshsales Suite - CRM\n\n## FunnelFox\n\n## GoSquared\n\n## Houseware\n\n## HubSpot\n\n## HubSpot Cloud Mode (Actions)\n\n## HubSpot Web (Actions)\n\n## Humanic AI\n\n## journy io\n\n## June\n\n## June (Actions)\n\n## Koala\n\n## Koala (Cloud)\n\n## Kustomer\n\n## LiveIntent Audiences\n\n## Matcha\n\n## MoEngage\n\n## Moengage (Actions)\n\n## Moesif API Analytics\n\n## Nat\n\n## Noora\n\n## ProductBird\n\n## Richpanel\n\n## Salescamp CRM\n\n## Salesforce (Actions)\n\n## Saleswings (Actions)\n\n## SegMetrics\n\n## Startdeliver\n\n## Strikedeck\n\n## The Trade Desk Crm\nBeta\n\n## Userlist\n\n## Variance\n\n## WebEngage\n\n## Whale Alerts\n\n## Wigzo\n\n## Windsor\n\n## Wishpond\n\n## Xtremepush (Actions)\nBeta\n\n## Customer Success\n\n## 1Flow Mobile Plugin\nBeta\n\n## 2mee\n\n## AdQuick\n\n## Akita Customer Success\n\n## Asayer\n\n## Astrolabe\nBeta\n\n## Beamer\n\n## Blitzllama\n\n## Breyta CRM\n\n## Calixa\n\n## Candu\n\n## Churned\n\n## ChurnZero\n\n## ClientSuccess\n\n## CommandBar\n\n## Correlated\n\n## Courier\n\n## Crisp\n\n## Crossing Minds\n\n## Custify\n\n## Elevio\n\n## Emarsys\n\n## Engage Messaging\n\n## EnjoyHQ\n\n## events.win\nBeta\n\n## Gainsight\n\n## Gainsight PX\n\n## Gainsight Px Cloud (Actions)\n\n## Gleap (Action)\nBeta\n\n## GraphJSON\n\n## Groundswell\n\n## Hawkei\n\n## Help Scout\n\n## Houseware\n\n## Humanic AI\n\n## hydra\n\n## Inleads AI\n\n## Intercom\n\n## Intercom Cloud Mode (Actions)\n\n## Intercom Web (Actions)\n\n## Jimo\n\n## Jimo (Actions)\nBeta\n\n## journy io\n\n## June\n\n## June (Actions)\n\n## Kustomer\n\n## Learndot\n\n## Lou\n\n## Metronome (Actions)\n\n## Nat\n\n## Natero\n\n## Noora\n\n## Planhat\n\n## ProsperStack\n\n## Ramen\n\n## Refiner\n\n## Richpanel\n\n## SaaSquatch v2\n\n## Salescamp CRM\n\n## Salesmachine\n\n## SatisMeter\n\n## Savio\n\n## ScopeAI\n\n## Screeb\n\n## Scuba Analytics\n\n## Sherlock\n\n## Skalin\n\n## Slack\n\n## Slack (Actions)\n\n## Snapboard\n\n## Sprig Cloud\n\n## Startdeliver\n\n## Startdeliver-v2\nBeta\n\n## Stonly\n\n## Strikedeck\n\n## Talon.One\n\n## Totango\n\n## Trustpilot\n\n## Unwaffle\n\n## Upcall\n\n## UserIQ\n\n## Userlens by Wudpecker\nBeta\n\n## UserVoice\n\n## Vitally\n\n## WalkMe\n\n## Windsor\n\n## Zendesk\n\n## Zopim\n\n## Deep Linking\n\n## Adjust\n\n## Amberflo\n\n## AppsFlyer\n\n## Branch Metrics\n\n## Button\n\n## EMMA\n\n## Singular\n\n## Email\n\n## User.com\n\n## Email Marketing\n\n## Acoustic (Actions)\n\n## ActiveCampaign\n\n## Attentive Mobile\n\n## AutopilotHQ\n\n## Bloomreach Engagement\n\n## Braze\n\n## Braze Cloud Mode (Actions)\n\n## Braze Cohorts\n\n## Braze Web Device Mode (Actions)\n\n## Bronto\n\n## CleverTap\n\n## Cordial (Actions)\n\n## Courier\n\n## Crisp\n\n## Crossing Minds\n\n## CrowdPower\n\n## Customer.io\n\n## Customer.io (Actions)\n\n## Drip\n\n## Eloqua\n\n## Emarsys\n\n## Emarsys (Actions)\nBeta\n\n## Encharge (Actions)\n\n## Engage Messaging\n\n## Extole Platform\n\n## Freshmarketer\n\n## Gainsight PX\n\n## Gainsight Px Cloud (Actions)\n\n## Gist\n\n## HubSpot\n\n## HubSpot Cloud Mode (Actions)\n\n## HubSpot Web (Actions)\n\n## hydra\n\n## Inflection\n\n## Intercom\n\n## Intercom Cloud Mode (Actions)\n\n## Intercom Web (Actions)\n\n## Iterable\n\n## Iterable (Actions)\n\n## Jivox\n\n## Kahuna\n\n## Kissmetrics\n\n## Klaviyo\n\n## Leanplum\n\n## Listrak (Actions)\n\n## Loops (Actions)\n\n## Lumen\n\n## MailChimp\n\n## Mailjet\n\n## Mailmodo\n\n## Marketo Static Lists (Actions)\n\n## Marketo V2\n\n## MoEngage\n\n## Moengage (Actions)\n\n## Moosend\n\n## Nudgespot\n\n## OneSignal (New)\n\n## Ortto\n\n## Pardot (Actions)\n\n## PersistIQ\n\n## Personyze\n\n## Responsys\n\n## Sailthru v2\n\n## Salescamp CRM\n\n## Salesforce Marketing Cloud (Actions)\n\n## Selligent Marketing Cloud\n\n## SendGrid\n\n## Swrve\n\n## Talon.One\n\n## Trustpilot\n\n## UserIQ\n\n## Userlist\n\n## Vero\n\n## WebEngage\n\n## Wigzo\n\n## Wishpond\n\n## Xtremepush\n\n## Zaius\n\n## Enrichment\n\n## Actable Predictive\nBeta\n\n## Attio (Actions)\nBeta\n\n## Breyta CRM\n\n## BuzzBoard\n\n## Clearbit Enrichment\n\n## Clearbit Reveal\n\n## Cruncher\n\n## Dreamdata\n\n## Madkudu\n\n## Noora\n\n## Refiner\n\n## Screeb\n\n## Upollo\nBeta\n\n## Upollo Web (Actions)\nBeta\n\n## UserMotion (Actions)\nBeta\n\n## Vidora\n\n## Feature Flagging\n\n## ABsmartly (Actions)\n\n## Apptimize\n\n## Bucket\n\n## Kameleoon (Actions)\nBeta\n\n## LaunchDarkly (Actions)\n\n## LaunchDarkly Audiences\n\n## Optimizely Feature Experimentation (Actions)\n\n## Optimizely Full Stack\n\n## Optimizely Web\n\n## Schematic\nBeta\n\n## Split\n\n## Heatmaps & Recordings\n\n## Auryc\n\n## Crazy Egg\n\n## Freshmarketer\n\n## FullStory\n\n## Fullstory (Actions)\n\n## Fullstory Cloud Mode (Actions)\n\n## Hotjar\n\n## Inspectlet\n\n## LogRocket\n\n## Lucky Orange\n\n## mabl\n\n## Mouseflow\n\n## Smartlook\n\n## Stories\n\n## Vespucci\n\n## VWO Cloud Mode (Actions)\n\n## VWO Web Mode (Actions)\nBeta\n\n## WalkMe\n\n## Livechat\n\n## Courier\n\n## Gist\n\n## Gleap (Action)\nBeta\n\n## GoSquared\n\n## Intercom\n\n## Intercom Cloud Mode (Actions)\n\n## Intercom Web (Actions)\n\n## LiveChat\n\n## LiveLike\nBeta\n\n## Olark\n\n## Richpanel\n\n## SnapEngage\n\n## Zopim\n\n## Marketing Automation\n\n## 1Flow Mobile Plugin\nBeta\n\n## Aampe\n\n## Accoil Analytics\n\n## Acoustic (Actions)\n\n## Actions Pipedrive\nBeta\n\n## Airship\n\n## Airship (Actions)\n\n## Astrolabe\nBeta\n\n## Attentive Mobile\n\n## Braze Cloud Mode (Actions)\n\n## Braze Cohorts\n\n## ByteGain\n\n## Callingly\n\n## Churned\n\n## ClearBrain\n\n## CleverTap\n\n## CleverTap (Actions)\n\n## Cordial (Actions)\n\n## Correlated\n\n## Courier\n\n## Crisp\n\n## CrowdPower\n\n## Dreamdata\n\n## Drip (Actions)\nBeta\n\n## Emarsys\n\n## Encharge (Actions)\n\n## EPICA\n\n## Everflow\n\n## Experiments by GrowthHackers\n\n## Extole Platform\n\n## Freshmarketer\n\n## FunnelEnvy\n\n## Gameball (Actions)\nBeta\n\n## Gist\n\n## Humanic AI\n\n## hydra\n\n## Insider Audiences\n\n## Insider Cloud Mode (Actions)\n\n## Iterate Web (Actions)\nBeta\n\n## Jivox\n\n## journy io\n\n## Kitemetrics\n\n## Listrak (Actions)\n\n## LiveLike\nBeta\n\n## Loops (Actions)\n\n## Lumen\n\n## Markettailor\n\n## MoEngage\n\n## Moengage (Actions)\n\n## Mutiny\n\n## Nat\n\n## OneSignal (New)\n\n## Ortto\n\n## Pardot (Actions)\n\n## PersistIQ\n\n## Personyze\n\n## Plotline\nBeta\n\n## Podscribe (Actions)\n\n## Proof Experiences\n\n## ProsperStack\n\n## Pushwoosh\nBeta\n\n## Recombee\nBeta\n\n## Regal.io\n\n## Rehook\nBeta\n\n## Retina\n\n## Ripe Cloud Mode (Actions)\n\n## Ripe Device Mode (Actions)\n\n## SaaSquatch v2\n\n## Sailthru v2\n\n## Salescamp CRM\n\n## Salesforce Marketing Cloud (Actions)\n\n## SegMetrics\n\n## SendGrid\n\n## Singular\n\n## StackAdapt\nBeta\n\n## Startdeliver\n\n## Stories\n\n## Strikedeck\n\n## Talon.One (Actions)\n\n## Tamber\n\n## Unwaffle\n\n## Upcall\n\n## Userlist\n\n## Variance\n\n## Vero\n\n## Vidora\n\n## Voucherify (Actions)\n\n## WebEngage\n\n## Wisepops\n\n## Xtremepush\n\n## Xtremepush (Actions)\nBeta\n\n## Performance Monitoring\n\n## 1Flow Mobile Plugin\nBeta\n\n## AdQuick\n\n## Asayer\n\n## Atatus\n\n## Blitzllama\n\n## BugHerd\n\n## Bugsnag\n\n## Button\n\n## Callingly\n\n## Cliff\n\n## Crittercism\n\n## Cruncher\n\n## Errorception\n\n## Experiments by GrowthHackers\n\n## FL0\n\n## Flagship.io\n\n## FunnelFox\n\n## Hawkei\n\n## Humanic AI\n\n## Keen\n\n## LogRocket\n\n## Matcha\n\n## New Relic\n\n## Optimizely Feature Experimentation (Actions)\n\n## Pingdom\n\n## PlayerZero Web\n\n## ProductBird\n\n## Retina\n\n## Rollbar\n\n## SegMetrics\n\n## Sentry\n\n## Serenytics\n\n## SIGNL4 Alerting\n\n## Snapboard\n\n## Track JS\n\n## TrafficGuard\n\n## Variance\n\n## Personalization\n\n## 1Flow Mobile Plugin\nBeta\n\n## Aampe\n\n## Amazon Personalize\n\n## Appcues\n\n## Button\n\n## ByteGain\n\n## Candu\n\n## Chameleon\n\n## ClearBrain\n\n## CleverTap\n\n## CommandBar\n\n## Contentstack Cloud\nBeta\n\n## Contentstack Web\nBeta\n\n## ConvertFlow\n\n## Correlated\n\n## Crossing Minds\n\n## Cruncher\n\n## Dynamic Yield by Mastercard Audiences\nBeta\n\n## EPICA\n\n## Flagship.io\n\n## FunnelEnvy\n\n## FunnelFox\n\n## Gainsight PX\n\n## Gainsight Px Cloud (Actions)\n\n## Gameball (Actions)\nBeta\n\n## GWEN (Actions)\nBeta\n\n## Inflection\n\n## Insider Audiences\n\n## Insider Cloud Mode (Actions)\n\n## Jimo\n\n## Jivox\n\n## Kana\n\n## LaunchDarkly (Actions)\n\n## Leanplum\n\n## Lumen\n\n## Lytics\n\n## Mailmodo\n\n## Markettailor\n\n## Monetate\n\n## Movable Ink (Actions)\n\n## Mutiny\n\n## Nat\n\n## Ninetailed by Contentful\n\n## OneSignal (New)\n\n## Optimizely Advanced Audience Targeting\nBeta\n\n## Optimizely Data Platform\nBeta\n\n## Optimizely Feature Experimentation (Actions)\n\n## Optimizely Full Stack\n\n## Optimizely Web\n\n## Personyze\n\n## Plotline\nBeta\n\n## ProductBird\n\n## Proof Experiences\n\n## Pushwoosh\nBeta\n\n## Qualtrics\n\n## Recombee\nBeta\n\n## Regal.io\n\n## Rehook\nBeta\n\n## Sailthru v2\n\n## Selligent Marketing Cloud\n\n## Snapboard\n\n## Sprig Cloud\n\n## Startdeliver\n\n## Stonly\n\n## Talon.One\n\n## Tamber\n\n## tray.io\n\n## Unwaffle\n\n## Upcall\n\n## User.com\n\n## UserGuiding\nBeta\n\n## Userpilot Cloud (Actions)\nBeta\n\n## Userpilot Web (Actions)\nBeta\n\n## Userpilot Web Plugin\n\n## Variance\n\n## WebEngage\n\n## Wigzo\n\n## Wisepops\n\n## Wishpond\n\n## Xtremepush\n\n## Raw Data\n\n## Aggregations.io (Actions)\nBeta\n\n## Algolia Insights (Actions)\n\n## Amazon EventBridge\n\n## Amazon Kinesis\n\n## Amazon Kinesis Firehose\n\n## Amazon Lambda\n\n## Anodot\n\n## Asayer\n\n## Astrolabe\nBeta\n\n## AWS S3\n\n## Azure Function\nBeta\n\n## Blendo\n\n## Calixa\n\n## Cruncher\n\n## Experiments by GrowthHackers\n\n## FunnelFox\n\n## Google Cloud Function\nBeta\n\n## Google Cloud PubSub\n\n## Google Sheets\n\n## GraphJSON\n\n## Iron.io\n\n## Kable\n\n## Kafka\nBeta\n\n## Keen\n\n## Mammoth\n\n## Matcha\n\n## Peaka\nBeta\n\n## Repeater\n\n## Scuba Analytics\n\n## Segment Connections\n\n## Segment Profiles\n\n## Serenytics\n\n## SingleStore\n\n## SlicingDice\n\n## Stories\n\n## tray.io\n\n## Treasure Data\n\n## Vidora\n\n## Webhooks (Actions)\n\n## Zapier\n\n## Referrals\n\n## Ambassador\n\n## Attribution\n\n## Extole Platform\n\n## Friendbuy (Cloud Destination)\n\n## Friendbuy (Legacy)\n\n## Friendbuy (Web Destination)\n\n## Impact Partnership Cloud\n\n## Perkville\n\n## Refersion\n\n## SaaSquatch v2\n\n## Talkable\n\n## Talon.One\n\n## Talon.One (Actions)\n\n## Trustpilot\n\n## Voucherify (Actions)\n\n## SMS & Push Notifications\n\n## 2mee\n\n## Aampe\n\n## Airship\n\n## Airship (Actions)\n\n## Batch\n\n## Beamer\n\n## Braze\n\n## Braze Cloud Mode (Actions)\n\n## Braze Cohorts\n\n## Braze Web Device Mode (Actions)\n\n## Callingly\n\n## CleverTap\n\n## CleverTap (Actions)\n\n## Cordial (Actions)\n\n## Courier\n\n## Customer.io\n\n## Emarsys\n\n## EMMA\n\n## Flurry\n\n## Iterable\n\n## Iterable (Actions)\n\n## Kahuna\n\n## Leanplum\n\n## Localytics\n\n## Lumen\n\n## MoEngage\n\n## Moengage (Actions)\n\n## OneSignal (New)\n\n## Postscript\nBeta\n\n## Regal.io\n\n## Sailthru v2\n\n## Selligent Marketing Cloud\n\n## SIGNL4 Alerting\n\n## Swrve\n\n## Tamber\n\n## User.com\n\n## WebEngage\n\n## Wigzo\n\n## Xtremepush\n\n## Zaius\n\n## Security & Fraud\n\n## Castle\n\n## Rupt\nBeta\n\n## SIGNL4 Alerting\n\n## Singular\n\n## TrafficGuard\n\n## Surveys\n\n## 1Flow\n\n## 1Flow Mobile Plugin\nBeta\n\n## 1Flow Web (Actions)\nBeta\n\n## Auryc\n\n## Beamer\n\n## Blitzllama\n\n## Canny (Actions)\n\n## ConvertFlow\n\n## Delighted\n\n## Gainsight\n\n## Gainsight PX\n\n## Gainsight Px Cloud (Actions)\n\n## Hubble (Actions)\nBeta\n\n## InMoment (formerly Wootric)\n\n## Iterate Web (Actions)\nBeta\n\n## Jimo (Actions)\nBeta\n\n## Noora\n\n## Pendo\n\n## Pendo Web (Actions)\nBeta\n\n## ProductBird\n\n## ProsperStack\n\n## Qualaroo\n\n## Qualtrics\n\n## Ramen\n\n## Refiner\n\n## SatisMeter\n\n## Savio\n\n## Screeb\n\n## Screeb Web (Actions)\nBeta\n\n## Sprig (Actions)\n\n## Sprig Cloud\n\n## Stonly\n\n## Strikedeck\n\n## Survicate\n\n## Survicate (Actions)\nBeta\n\n## Trustpilot\n\n## UserGuiding\nBeta\n\n## UserIQ\n\n## UserVoice\n\n## WalkMe\n\n## WebEngage\n\n## Tag Managers\n\n## FunnelEnvy\n\n## Google Tag Manager\n\n## Video\n\n## 1Flow Mobile Plugin\nBeta\n\n## 2mee\n\n## Adobe Analytics\n\n## Chartbeat\n\n## comScore\n\n## Nielsen DCR\n\n## Parsely\n\n## Youbora",
    "url": "https://segment.com/docs/connections/destinations/catalog/"
  },
  {
    "title": " Destinations Overview | Segment Documentation",
    "content": "- Home\n- /\n- Connections\n- /\n- Destinations Overview\n\n## Destinations Overview\nOn this page\n- Sources vs Destinations\n- Destination connection types\n- Method compatibility\n- Source compatibility\n- Destination Actions\n- Connection modes\n- Sync modes\n- Add a destination\n- Data deliverability\n- IP Allowlisting\nDestinations are the business tools or apps that Segment forwards your data to. Adding Destinations allow you to act on your data and learn more about your customers in real time.\nDestinations Catalog\nIf you want to explore the destinations compatible with Segment, check out theDestinations catalog. Select an item from the catalog to learn more about it. The documentation for each destination explains how the Segment Tracking API methods are implemented for that destination.\n\n## Sources vs Destinations\nSegment hasSourcesandDestinations. Sources send dataintoSegment, while Destinations receive datafromSegment.\n\n## Destination connection types\nSegment has three destination connection types:\n- Event streams\n- Storage\n- Reverse ETL\n\n## Event streams destinations\nEvent streams destinations are all destinations that aren\u2019t storage or Reverse ETL destinations. Adding these destinations allow you to act on your data and learn more about your customers in real time. These includeDestination Actions.\n\n## Storage destinations\nStorage destinations enable you to store your raw Segment data. This enables data analysts and data scientists to work with the raw data to derive deeper and more customized insights to support your organization. Learn more from thestorage overview page.\n\n## Reverse ETL destinations\nReverse ETLdestinations are the business tools or apps you use that Segment syncs the data from your warehouse to.\nIf your destination is not listed inthe Reverse ETL catalog, use theSegment Connections destinationto send data from your Reverse ETL warehouse to other destinations listed in thecatalog. The Segment Connections destination enables you to mold data extracted from your warehouse inSegment SpecAPI calls that are then processed bySegment\u2019s HTTP Tracking API. The Segment HTTP Tracking API lets you record analytics data. The requests hit Segment\u2019s servers, and then Segment routes your data to any destination you want. Get started with theSegment Connections destination.\n\n## Method compatibility\nNot all destinations can accept data from specific method types. To know if a destination can accept data from specific method types, look for theQuick Infobox at the top of the destination\u2019s documentation page, or check out theDestinations Methods comparison chart.\n\n## Source compatibility\nMany destinations can accept data from all types of sources, but some are only compatible with specific source types (for example, web only, or server only). To find out which source types a specific destination can accept data from, check the documentation for that destination in theQuick infobox, or in theSupported Sources and Connection Modessection.\n\n## Destinations Compatibility Matrix\nWondering which destinations take which data? Check out the Destination connection modes list by category.\n\n## Destination Actions\nIn June 2021, Segment released a new form of destinations calledDestinations Actions. These destinations allow users to createsubscriptions: sets of conditions in which data is sent to the destinations and data mappings, to format that data for the destination tool. Segment watches for data that matches the conditions you create (triggers) for the subscription, and when the conditions are met, uses an explicit mapping to transform the incoming data to an output format that your destination can use.\n\n## Connection modes\nSegment\u2019s web source (Analytics.js), and native client-side libraries (iOS, Android, React-native) allow you to choose how you send data to Segment from your website or app. There are two ways to send data:\n- Cloud-mode: The sources send data directly to the Segment servers, which then translate it for each connected downstream destination, and send it on. Translation is done on the Segment servers, keeping your page size, method count, and load time small.Healthcare and Life Sciences (HLS) customers can encrypt data flowing into their destinationsHLS customers with a HIPAA eligible workspace can encrypt data in fields marked as Yellow in the Privacy Portal before they flow into an event stream, cloud-mode destination.To learn more about data encryption, see theHIPAA Eligible Segment documentation\nCloud-mode: The sources send data directly to the Segment servers, which then translate it for each connected downstream destination, and send it on. Translation is done on the Segment servers, keeping your page size, method count, and load time small.\nHealthcare and Life Sciences (HLS) customers can encrypt data flowing into their destinations\nHLS customers with a HIPAA eligible workspace can encrypt data in fields marked as Yellow in the Privacy Portal before they flow into an event stream, cloud-mode destination.To learn more about data encryption, see theHIPAA Eligible Segment documentation\n- Device-mode: You include additional code on your website or mobile app which allows Segment to use the data you collect on the device to make calls directly to the destination tool\u2019s API, without sending it to the Segment serversfirst. (You still send your data to the Segment servers, but this occurs asynchronously.) This is also calledwrappingorbundling, and it might be required when the source has to be loaded on the page to work, or loaded directly on the device to function correctly. When you use Analytics.js, you can change the device-mode destinations that a specific source sends from within the Segment web app, without touching any code.\nDevice-mode: You include additional code on your website or mobile app which allows Segment to use the data you collect on the device to make calls directly to the destination tool\u2019s API, without sending it to the Segment serversfirst. (You still send your data to the Segment servers, but this occurs asynchronously.) This is also calledwrappingorbundling, and it might be required when the source has to be loaded on the page to work, or loaded directly on the device to function correctly. When you use Analytics.js, you can change the device-mode destinations that a specific source sends from within the Segment web app, without touching any code.\nIf you use Server source libraries, they only send data directly to Segment in Cloud-mode. Server library implementations operate in the server backend, and can't load additional destination SDKs.\n\n## Choosing a connection mode\nCloud-mode destinations send data through Segment. Device-mode destinations send data in parallel to Segment. There are tradeoffs between using cloud-mode and device-mode destinations. In general, Cloud-mode is preferred because you then benefit from Segment\u2019s system features, like retries, Replay, Warehouses, Privacy blocking, filtering, and more.\nYou should consider using device-mode if you use destinations which record information directly on the user\u2019s device. These types of tools might lose functionality if they aren\u2019t loaded directly on the device.\nTake a look at the pros and cons chart of device-mode and cloud-mode destinations to determine which connection mode is best for you:\n\n## Website source connection modes\nSegment\u2019s website sources use device-mode by default, because so many website-based destinations require that they be loaded on the page, and because size and page performance are less of a concern than on mobile. If your website source only collects information that you can instrument yourself, then you can use cloud-mode.\nFor example, a web-chat destination must be loaded to connect to the service and collect metrics efficiently - you don\u2019t expect it to route chat messages through Segment! Thisdoesmean that Segment might not receive a small amount of the destination-specific information from your users. In the chat example, if the destination is calculating idle time between messages, that data would appear in the destination\u2019s tooling, but not necessarily in the Segment data.\n\n## Mobile source connection modes\nBy default, destinations configured on a mobile source send their data directly to the Segment servers, then translate it and use Cloud-mode to forward it to destinations.Cloud-modemeans that Segment sends the data directly from the Segment servers, to their servers. This means you don\u2019t need to package third-party SDKs for destinations that can accept cloud-mode data. Some primarily web-based destinations also allow cloud-mode, which can help reduce app size, and improve load time and performance. You can read more about theeffects of mobile app size on downloads in Segment\u2019s blog.\nBefore you turn on or opt-in for cloud-mode for a mobile source, consider if your destinations have features that require interactions on the device or require device-specific data (see the examples above). For example, if you use cloud-mode for Mixpanel, you\u2019ll get your data on reporting and people, but won\u2019t be able to use their features for in-app surveys or auto-tracking. These can be really valuable, but might not be a priority for your team.\n\n## How Segment determines Device-mode and Cloud-mode destinations\nThere are two main things Segment considers when deciding to use Device-mode or Cloud-mode, or both, for a destination partner:\n- Anonymous Attribution Methodology\n- Client-native Destination Features\n\n## Anonymous attribution methodology\n\n## Mobile attribution\nThe anonymous identifiers used on mobile devices are usually static, which means Segment doesn\u2019t need to do additional resolution, and can build Cloud-mode destinations by default. Because Segment uses native advertising identifiers on mobile devices, you don\u2019t need a full SDK on the device to reconcile or identify a user. For example, you might track users who viewed an advertisement in one app and installed another app as a result.\nHowever, some mobile attribution tools do more advanced reconciliation based on more than the native identifier, which requires the SDK on the device to work properly. For those destinations, Segment offers device-mode, which packages the tool\u2019s SDK with the client-side library so that you can get the entire range of tool functionality.\n\n## Web Attribution\nCross-domain identity resolution for websites requires that the attribution tool use a third-party cookie so it can track a user anonymously across domains. This is a critical component of attribution modeling. As a matter of principle, Segment only uses first-party cookies and doesn\u2019t share cookies with partners, so Analytics.js and the data it collects aren\u2019t enough to generate view-through attribution in ad networks.\nCustomers can load their libraries and pixels in the context of the browser and trigger requests to attribution providers from their device in response to Segment API calls to take advantage of advertising and attribution tools.\n\n## Client-native destination features\nMany of Segment\u2019s destinations offer client-side features beyond data collection in their SDKs and libraries, for both mobile and web. In these cases, Segment offers Device-mode SDKs so that you can collect information on the device using Segment, but still get the destination\u2019s complete native functionality.\nSome features that usually require Device-mode include: automatic A/B testing, displaying user surveys, live chat or in-app notifications, touch and hover heatmapping, and accessing rich device data such as CPU usage, network data, or raised exceptions.\n\n## How can I tell which connection modes and platforms are supported for a destination?\nThe first place to look is the individual destination documentation. Each one includes a matrix of supported Sources and Connection Modes. Segment provides a list ofall destinations and their connection modes.\nIn order to override the default, check the destination settings pane in the Segment web App either for aConnection Modetoggle or instructions on bundling any additional mobile components required.\n\n## Sync modes\nSync modes allow users to define how changes in the source should send downstream to your destination. Depending on which destinations you set up in Segment, you may need to choose a sync mode for your data. This configuration determines how Segment updates your destination based on the source data.\nThe available sync modes can vary based on the destination, integration type, and actions within the destination. For example, if you sync customer data, you might have the option to Insert, Update, or Upsert records.\nAvailable sync modes include:\n- Update: Modify existing records in the destination without adding new ones.\n- Upsert: Update existing records and add new ones, if necessary.\n- Add: Add records to a list, segment, or journey.\n- Remove: Remove records from a list, audience, or journey.\n\n## Add a destination\nTo add a Destination:\n- Navigate toConnections.\n- ClickAdd Destination.\n- Choose the Destination you want to add and clickConfigure. Most users eventually add destinations for: Analytics, Advertising, Email Marketing and/or Live Chat.\n- Select the Source you want to connect to your Destination.\n- ClickNext.\n- Give you Destination a name.\n- ClickSave.\n- Configure the settings and enable your destination on the destination settings page.\nLearn moreabout what adding a destination entails.\nDisabled destinations do not receive data\nIf you haven\u2019t enabled your destination for the first time after you created it or if you actively disable a destination, Segment prevents any data from reaching the destination. Business Tier customers can requesta Replay, which resends data from the time the destination was disabled to the time it was re-enabled. Replays can also send data to currently disabled destinations.\nSome destinations are not compatible with Replays after a certain period of time, for example, 14 days. Check with Segment\u2019s support teamfriends@segment.comto confirm that your intended destination allows historical timestamps.\n\n## Data deliverability\nSegment increases deliverability to destinations usingretriesandreplays. Retries happen automatically for all customers, while replays are available on request forBusiness Tiercustomers.\nSegment\u2019s data flow is primarily unidirectional, from Segment to integrated destinations. Segment does not inherently support a bidirectional flow where events, once delivered and processed by a destination, are sent back to Segment.\nSegment also usesbatchingto increase deliverability to your destinations. Some destinations have batching enabled by default, and some, like Segment\u2019sWebhook (Actions) Destination, let you opt in to batching.\nSome cases of event batching might lead to observability loss\nWhile batching does increase event deliverability, you might experience error amplification, as if the entire batch fails, all events will be marked with the same status. For example, if a batch fails due to one429(Rate Limit) error, it might appear in the UI that there was one 429s request failure for each item in the batch.\n\n```\n429\n```\n\n## Retries\n\n## Retries in Segment\u2019s client libraries\nSegment\u2019s client libraries ensure delivery of your data to the API reliably in the face of spotty connections, device failure, or network partitions in your data centers.\nWhen you use Segment\u2019s mobile SDK, Segment dispatches each event to a background thread where the event is then written to a queue. Later, Segment\u2019s SDK batches together many requests in to one compressed request and sends it to Segment\u2019s servers. Segment\u2019s SDKs minimize battery use and bandwidth use by powering up the radio less frequently and for shorter time periods.\nIf the delivery of the payload is not successfully sent due to connection issues, all of your SDKs will automatically retry the request until successful receipt of the payload according to the following policies. Note that retry policies are subject to change / tuning in the future.\n\n## Mobile library retries\nAll mobile libraries handle retries by periodically attempting to flush their internal queue of events to Segment. If the flush is unsuccessful, the library waits until the next regularly-scheduled flush time to try again. The background queue of requests to Segment is bounded in size so if events are being queued faster than we can successfully flush them to Segment, some events may be dropped.\n\n## Retries between Segment and destinations\nThe destination endpoint APIs have fluctuations in availability due to a number of issues ranging from network failures to bugs to overload. Segment\u2019s internal systems retry failed destination API calls for four hours with a randomized exponential backoff after each attempt. This substantially improves delivery rates.\nHere\u2019s an example destination that was only successfully accepting 93.36% of all API requests but was achieving a 99.28% final deliverability rate due to Segment\u2019s retry functionality.\nYou can see the current destination endpoint API success rates and final delivery rates for Segment\u2019s server-side destinations on Segment\u2019sstatus page.\n\n## Replays\nReplay is available toBusiness tiercustomers.Contact Segmentto learn more.\nReplaysallow customers to load historical data from Segment\u2019s S3 logs into downstream destinations which accept cloud-mode data. So, for example, if you wanted to try out a new email or analytics tool, Segment can replay your historical data into that tool. This gives you a great testing environment and prevents data lock-in when vendors try to hold data hostage.\nIf you submittedsuppress_onlyrequests, Segment still retains historical events for those users, which can be replayed. If you do not want historical events replayed for suppressed users, submitsuppress_and_deleterequests instead.\n\n```\nsuppress_only\n```\n\n```\nsuppress_and_delete\n```\n\n## Batching\nSegment usesstream batchingfor all destinations that require near-realtime data andbulk batchingfor some data flows in our pipeline.\n\n## Stream batching\nFor all destinations, except for non-realtime Engage syncs and Reverse ETL syncs, Segment processes events from your source as they arrive and then flows the data downstream to your destinations in small batches, in a process calledstream batching. These batches might contain different events between retry attempts, as events in previous batches may have succeeded, failed with a permanent error, or expired. This variability reduces the workload the system processes during partial successes, allows for better per-event handling, and reduces the chance of load-related failures by using variable batch formations.\n\n## Bulk batching\nSome data flows may be able to use a process calledbulk batching, which supports batching for destinations that produce between several thousand and a million events at a time. Real-time workloads or using a Destination Insert Function may prevent bulk batches from being formed. Batches contain the same events between retries.\nThe following destinations support bulk batching:\n- DV360\n- Google Adwords Remarketing Lists\n- Klaviyo (Actions)\n- Pinterest Audiences\n- Snapchat Audiences\n- LiveRamp\n- The Trade Desk CRM\nYou must manually configure bulk batches for Actions destinations\nTo support bulk batching for the Actions Webhook destination, you must setenable-batching: trueandbatch_size: >= 1000.\n\n```\nenable-batching: true\n```\n\n```\nbatch_size: >= 1000\n```\n\n## IP Allowlisting\nIP Allowlisting uses a NAT gateway to route traffic from Segment\u2019s servers to your destination through a limited range of IP addresses, which can prevent malicious actors from establishing TCP and UDP connections with your integrations.\nIP Allowlisting is available for customers on Business Tier plans.\n\n## Supported destinations\nSegment supports IP Allowlisting inall destinationsexcept for the following:\n- LiveRamp\n- TradeDesk\n- Amazon Kinesis\nDestinations that are not supported receive traffic from randomly assigned IP addresses.\n\n## Configure IP Allowlisting\nTo enable IP Allowlisting for your workspace:\n- From your Segment workspace, navigate toSettings > Workspace settings > Destination IP settings.\n- On the Destination IP settings page, clickEnable IP allowlisting.\n- The page displays the IP address ranges that Segment uses to route data from Segment\u2019s internal systems to your destination. Note these ranges, as you\u2019ll need this information to enforce IP restriction in your downstream destinations.\n- Open each of your downstream tools and configure IP restriction for each destination. For more information, refer to the documentation for your downstream tool.\nIP restriction might not be supported in all destinations.\nThis page was last modified: 04 Dec 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/destinations/"
  },
  {
    "title": " Reverse ETL | Segment Documentation",
    "content": "- Home\n- /\n- Connections\n- /\n- Reverse ETL\n\n## Reverse ETL\nReverse ETL (Extract, Transform, Load) extracts data from a warehouse using a query you provide and syncs this warehouse data to your third party destinations.\nUse Reverse ETL when you want to:\n- Elevate marketing campaigns: Sync audiences and other data built in the warehouse to multi-channel marketing tools, like Braze, Hubspot, or Salesforce Marketing Cloud, to personalize marketing campaigns.\n- Enrich your customer profiles: Sync enriched data to destinations like Mixpanel for a more complete view of the customer, or enrich Segment Profiles with data from your warehouse.\n- Activate data in Twilio Engage: Send data in the warehouse back into Segment as events that can be activated in all supported destinations, including Twilio Engage destinations.\n- Strengthen your conversion events: Pass offline or enriched data to conversion APIs like Facebook, Google Ads, TikTok, or Snapchat.\n- Make warehouse data accessible to business teams: Connect destinations like Google Sheets to a view in the warehouse to allow business teams to access up-to-date reports.\nReverse ETL supports event and object data\nEvent and object data includes customer profile data, subscriptions, product tables, shopping cart tables, and more.\n\n## Get started with Reverse ETL\n\n## Set up Reverse ETL\nSet up the infrastructure you need to sync data from your warehouse to your downstream destinations.\n\n## Manage Reverse ETL Syncs\nView your sync history, reset your syncs, or subscribe to alerts.\n\n## Learn more\nLearn more about the system that powers Reverse ETL, supported destinations, and frequently asked questions.\n\n## Reverse ETL System\nReference material about system limits and how Segment detects data changes.\n\n## Destination catalog\nView the destinations you can connect to your Reverse ETL sources.\n\n## Reverse ETL FAQ\nFrequently asked questions about Reverse ETL.\n\n## More Reverse ETL resources\n\n## What is Reverse ETL? A complete guide\nIn this blog from Segment, learn how Reverse ETL helps businesses activate their data to drive better decision-making and greater operational efficiency.\n\n## Customer story: MongoDB\nLearn how MongoDB used Reverse ETL to connect the work of analytics teams to downstream marketing and sales tools to deliver just-in-time communications that increased customer satisfaction and engagement.\nThis page was last modified: 10 Sep 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/reverse-etl/"
  },
  {
    "title": " Protocols Overview | Segment Documentation",
    "content": "- Home\n- /\n- Protocols Overview\n\n## Protocols Overview\nProtocols is available as an add-on for Business plans only.See theavailable plans, orcontact Support.\nOn this page\n- There are four steps to using Protocols\n- Learn more\nProtocols isonlyavailable forevent stream(website, mobile, and server sources) andEngagesources.\nSegment helps customers collect and integrate customer data across a wide range of tools and Destinations. To do so reliably, the data Segment receives must be clean, consistent and adhere to a well thought out tracking plan.\nProtocols was built to automate and scale thedata quality best practicesdeveloped over years of helping customers implement Segment. Investing in data quality will improve trust in your data, reduce time spent by your engineering and business teams navigating and validating data, and ultimately allow your business to grow faster.\nProtocols is a premium add-on feature available to Business Tier customers. If your plan includes Protocols, you can access itfrom theprotocolspath in your workspace. If your plan doesn\u2019t include Protocols, contact your Segment account executive.\n\n```\nprotocols\n```\n\n## There are four steps to using Protocols\n\n## 1. Align teams with a Tracking Plan\nGood data quality starts with a well thought out Tracking Plan. With Protocols, you can define your events and corresponding properties in a Tracking Plan. This tracking plan becomes a central source of truth for product, engineering, analytics, and business teams.\n\n## 2. Validate data quality with violations\nWith your tracking plan living in Segment, you can apply it to 1 or more data sources. Any event or property that does not match the tracking plan will generate a violation. Violations are displayed in aggregated form to spot trends, and detailed form to help you quickly find and resolve discrepancies.\n\n## 3. Enforce data standards with controls\nTo maintain a high degree of quality over time, we offer strict controls to block non-conforming events. Blocked events can be forwarded to a separate quarantined Segment source for analysis and review.\n\n## 4. Resolve data issues with transformations\nEven the most exacting data collection processes are subject to human error and organizational complexity. Transformations can be applied from within Protocols to change event and property names without touching code.\n\n## Learn more\n\n## Best Practices\nLearn more about tracking plans and why you need them.\n\n## Tracking Plan\nCreate a Tracking Plan to standardize your collected data.\n\n## FAQ\nGet answers to Protocols questions that come up the most.\nGet Started: Learn more about Tracking Plans ->\nThis page was last modified: 13 Jul 2023\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/protocols/#protocols-overview"
  },
  {
    "title": " Protocols Overview | Segment Documentation",
    "content": "- Home\n- /\n- Protocols Overview\n\n## Protocols Overview\nProtocols is available as an add-on for Business plans only.See theavailable plans, orcontact Support.\nOn this page\n- There are four steps to using Protocols\n- Learn more\nProtocols isonlyavailable forevent stream(website, mobile, and server sources) andEngagesources.\nSegment helps customers collect and integrate customer data across a wide range of tools and Destinations. To do so reliably, the data Segment receives must be clean, consistent and adhere to a well thought out tracking plan.\nProtocols was built to automate and scale thedata quality best practicesdeveloped over years of helping customers implement Segment. Investing in data quality will improve trust in your data, reduce time spent by your engineering and business teams navigating and validating data, and ultimately allow your business to grow faster.\nProtocols is a premium add-on feature available to Business Tier customers. If your plan includes Protocols, you can access itfrom theprotocolspath in your workspace. If your plan doesn\u2019t include Protocols, contact your Segment account executive.\n\n```\nprotocols\n```\n\n## There are four steps to using Protocols\n\n## 1. Align teams with a Tracking Plan\nGood data quality starts with a well thought out Tracking Plan. With Protocols, you can define your events and corresponding properties in a Tracking Plan. This tracking plan becomes a central source of truth for product, engineering, analytics, and business teams.\n\n## 2. Validate data quality with violations\nWith your tracking plan living in Segment, you can apply it to 1 or more data sources. Any event or property that does not match the tracking plan will generate a violation. Violations are displayed in aggregated form to spot trends, and detailed form to help you quickly find and resolve discrepancies.\n\n## 3. Enforce data standards with controls\nTo maintain a high degree of quality over time, we offer strict controls to block non-conforming events. Blocked events can be forwarded to a separate quarantined Segment source for analysis and review.\n\n## 4. Resolve data issues with transformations\nEven the most exacting data collection processes are subject to human error and organizational complexity. Transformations can be applied from within Protocols to change event and property names without touching code.\n\n## Learn more\n\n## Best Practices\nLearn more about tracking plans and why you need them.\n\n## Tracking Plan\nCreate a Tracking Plan to standardize your collected data.\n\n## FAQ\nGet answers to Protocols questions that come up the most.\nGet Started: Learn more about Tracking Plans ->\nThis page was last modified: 13 Jul 2023\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/protocols/#there-are-four-steps-to-using-protocols"
  },
  {
    "title": " Protocols Overview | Segment Documentation",
    "content": "- Home\n- /\n- Protocols Overview\n\n## Protocols Overview\nProtocols is available as an add-on for Business plans only.See theavailable plans, orcontact Support.\nOn this page\n- There are four steps to using Protocols\n- Learn more\nProtocols isonlyavailable forevent stream(website, mobile, and server sources) andEngagesources.\nSegment helps customers collect and integrate customer data across a wide range of tools and Destinations. To do so reliably, the data Segment receives must be clean, consistent and adhere to a well thought out tracking plan.\nProtocols was built to automate and scale thedata quality best practicesdeveloped over years of helping customers implement Segment. Investing in data quality will improve trust in your data, reduce time spent by your engineering and business teams navigating and validating data, and ultimately allow your business to grow faster.\nProtocols is a premium add-on feature available to Business Tier customers. If your plan includes Protocols, you can access itfrom theprotocolspath in your workspace. If your plan doesn\u2019t include Protocols, contact your Segment account executive.\n\n```\nprotocols\n```\n\n## There are four steps to using Protocols\n\n## 1. Align teams with a Tracking Plan\nGood data quality starts with a well thought out Tracking Plan. With Protocols, you can define your events and corresponding properties in a Tracking Plan. This tracking plan becomes a central source of truth for product, engineering, analytics, and business teams.\n\n## 2. Validate data quality with violations\nWith your tracking plan living in Segment, you can apply it to 1 or more data sources. Any event or property that does not match the tracking plan will generate a violation. Violations are displayed in aggregated form to spot trends, and detailed form to help you quickly find and resolve discrepancies.\n\n## 3. Enforce data standards with controls\nTo maintain a high degree of quality over time, we offer strict controls to block non-conforming events. Blocked events can be forwarded to a separate quarantined Segment source for analysis and review.\n\n## 4. Resolve data issues with transformations\nEven the most exacting data collection processes are subject to human error and organizational complexity. Transformations can be applied from within Protocols to change event and property names without touching code.\n\n## Learn more\n\n## Best Practices\nLearn more about tracking plans and why you need them.\n\n## Tracking Plan\nCreate a Tracking Plan to standardize your collected data.\n\n## FAQ\nGet answers to Protocols questions that come up the most.\nGet Started: Learn more about Tracking Plans ->\nThis page was last modified: 13 Jul 2023\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/protocols/#learn-more"
  },
  {
    "title": " Sources Overview | Segment Documentation",
    "content": "- Home\n- /\n- Connections\n- /\n- Sources Overview\n\n## Sources Overview\nOn this page\n- What is a source?\n- Types of sources\n- Event streams sources\n- Cloud app sources\n- Reverse ETL sources\n- Create a source\n- Library tiers\nRelated content\n- Sources Catalog\n\n## What is a source?\nA source is a website, server library, mobile SDK, or cloud application which can send data into Segment. It\u2019s where your data originates. Add a source to collect data to understand who your customers are and how they\u2019re using your product. Create a source for each website or app you want to track. While it\u2019s not required that you have a single source for each server, site, or app,\u00a0you should create a source for each unique source of data.\nEach source you create has a write key, which is used to send data to that source. For example, to loadanalytics.js, the Segment JavaScript libraryon your page, the snippet on theQuickstart Guideincludes:\n\n```\nanalytics.js\n```\n\n```\nanalytics.identify('user_123',{email:'jane.kim@example.com',name:'Jane Kim'});\n```\n\n```\nanalytics.identify('user_123',{email:'jane.kim@example.com',name:'Jane Kim'});\n```\nIf you don't see the source you're looking for in our catalog\nIf a tool is not listed as a supported source in Segment\u2019scatalog, then it is not possible to incorporate the integration out-of-the-box within a Segment workspace. However, as an alternative, you can use theHTTP APIsource to collect data from the tool\u2019s API. You can also useFunctionsto send or receive data from other tools.\n\n## Types of sources\nSegment has three types of sources:\n- Event streams\n- Cloud app sources\n- Reverse ETL\n\n## Event streams sources\nEvent streams sources collect data from your website or app to monitor user actions. These sources includewebsite libraries,mobile, andserver sources.\n\n## Source Overview\nThe Source Overview page for an event stream source shows you apipeline viewof all events Segment receives from your source, events that failed on ingest, events that are filtered at the source level, and \u201celigible events\u201d, which are the events that will flow into your destinations. If you select one of the steps in the pipeline view, you can see a line chart that reflects the fluctuations in volume alongside abreakdown tablethat has more details about the events impacted by the selected step.\n\n## Pipeline view\nThe pipeline view shows each of the four steps Segment encounters when processing data from your source:\n- Events successfully received: All events that Segment received from your source.\n- Failed on ingest: Events that failed at the Tracking API level. For more information about errors that might cause events to fail on ingest, see Delivery Overview\u2019sTroubleshootingdocumentation.\n- Filtered at source: Events that were filtered out by source schema controls, Tracking Plans, or a common JSON schema.\n- Eligible events: Eligible events are the events that flow downstream to your Segment destinations. This value is read-only, but you can see the events that flow downstream to a particular destination usingDelivery Overview.\nYou can use the time picker located on the Source Overview page to specify a time period (last 10 minutes, 1 hour, 24 hours, 7 days, 2 weeks, or a custom date range over the last two weeks) for which you\u2019d like to see data. Segment sets the time picker to show data for the last 24 hours by default.\n\n## Breakdown table\nThe breakdown table displays three tabs,Event type,Event name, andApp version.\n- Event type: The Segment Spec event type (Track call vs. Identify call, for example).This tab also contains a \u201c% change\u201d metric, which displays how the event counts differ from the last comparable time range, represented as a percentage.\n- Event name: The event name, provided by you or the source.\n- App version: The app/release version, provided by you or the source.\nEach of these tabs displays an event count, which is the total number of events that Segment received in a particular step.\nThe Unnamed or batched events under theEvent Nametab is a collection of all identify and page/screen calls in the source.\n\n## Website libraries\nAnalytics.js, the JavaScript library, is the most powerful way to track customer data from your website. If you\u2019re just starting out, Segment recommends it over server-side libraries as the simplest installation for any website.\n\n## The Analytics Quickstart Guide\nAnalytics and data collection is a very broad topic and it can be quite overwhelming. How do you get started?\n\n## Mobile\nSegment\u2019s Mobile SDKs are the best way to simplify your iOS, Android, and Xamarin app tracking. Try them over server-side sources as the default installation for any mobile app.\n- AMP\n- Android\n- Android Wear\n- iOS\n- Kotlin\n- React Native\n- Swift\n- Xamarin\nAnalytics-Flutter library\nThe Analytics-Flutter library is currently only available in pilot phase and is governed by Segment\u2019sFirst Access and Beta Preview Terms. If you\u2019d like to try out this library, access theAnalytics-Flutter GitHub repository.\n\n## Server\nSegment\u2019s server-side sources let you send analytics data directly from your servers. Segment recommends tracking from your servers when device-mode tracking (tracking on the client) doesn\u2019t work. Check out theguide on server-side trackingif you\u2019re not sure whether it makes sense for your use case.\n- Clojure\n- Go\n- Java\n- Node.js\n- PHP\n- Python\n- Ruby\n- .NET\nCloud-mode tracking\nServer-side data management is when tag sends data to the Segment servers, which then passes that data to the destination system.\n\n## Cloud app sources\nCloud app sources empower you to pull together data from all of your different third-party tools into a Segment warehouse or to your other enabled integrated tools. They send data about your users from your connected web apps. There are two types of Cloud Apps:Object cloud sourcesandEvent cloud sources.\n\n## Comparing Cloud Sources\nWondering which cloud-apps send which types of data? Check out the Cloud Sources comparison.\n\n## Object Cloud Sources\nThese Cloud App Sources can export data from its third party tool and import it directly into your Segment warehouse. Make sure you have a Segment warehouse enabled before you enable any of the following sources:\n- Facebook Ads\nFacebook Ads\n- Google Ads\nGoogle Ads\n- HubSpot\nHubSpot\n- Intercom\nIntercom\n- Mailchimp\nMailchimp\n- Mandrill\nMandrill\n- Marketo\nMarketo\n- Salesforce\nSalesforce\n- Salesforce Marketing Cloud\nSalesforce Marketing Cloud\n- SendGrid\nSendGrid\n- Stripe\nStripe\n- Twilio\nTwilio\n- Zendesk\nZendesk\n\n## Event Cloud Sources\nThese Cloud App Sources can not only export data into your Segment warehouse, but they canalsofederate the exported data into your other enabled Segment integrations:\n- ActiveCampaign\nActiveCampaign\n- Aircall\nAircall\n- Airship\nAirship\n- Alloy Flow\nAlloy Flow\n- Amazon S3\nAmazon S3\n- Amplitude Cohorts\nAmplitude Cohorts\n- Antavo\nAntavo\n- Authvia\nAuthvia\n- AutopilotHQ\nAutopilotHQ\n- Beamer\nBeamer\n- Blip\nBlip\n- Bluedot\nBluedot\n- Blueshift\nBlueshift\n- Braze\nBraze\n- Candu\nCandu\n- Chatlio\nChatlio\n- CleverTap\nCleverTap\n- CommandBar\nCommandBar\n- ConfigCat\nConfigCat\n- Customer.io\nCustomer.io\n- Delighted\nDelighted\n- Drip\nDrip\n- Dub\nDub\n- Elastic Path\nElastic Path\n- Elastic Path CX Studio\nElastic Path CX Studio\n- Facebook Lead Ads\nFacebook Lead Ads\n- Factual Engine\nFactual Engine\n- Foursquare Movement\nFoursquare Movement\n- Freshchat\nFreshchat\n- Friendbuy\nFriendbuy\n- Gladly\nGladly\n- GWEN Webhooks\nGWEN Webhooks\n- Herow\nHerow\n- IBM Watson Assistant\nIBM Watson Assistant\n- Inflection\nInflection\n- Insider\nInsider\n- Iterable\nIterable\n- Jebbit\nJebbit\n- Klaviyo\nKlaviyo\n- Klenty\nKlenty\n- LaunchDarkly\nLaunchDarkly\n- Leanplum\nLeanplum\n- Listrak\nListrak\n- LiveLike (Source)\nLiveLike (Source)\n- Looker\nLooker\n- Mailjet\nMailjet\n- Mailmodo\nMailmodo\n- Mixpanel Cohorts\nMixpanel Cohorts\n- MoEngage (Source)\nMoEngage (Source)\n- Moesif API Analytics\nMoesif API Analytics\n- Navattic\nNavattic\n- Nudgespot\nNudgespot\n- One Creation\nOne Creation\n- OneSignal\nOneSignal\n- OneTrust\nOneTrust\n- Paytronix\nPaytronix\n- Pendo\nPendo\n- ProveSource\nProveSource\n- Pushwoosh Source\nPushwoosh Source\n- Qualtrics\nQualtrics\n- Quin AI\nQuin AI\n- Radar\nRadar\n- Refiner\nRefiner\n- Selligent Marketing Cloud\nSelligent Marketing Cloud\n- SendGrid Marketing Campaigns\nSendGrid Marketing Campaigns\n- Shopify (by Littledata)\nShopify (by Littledata)\n- Shopify - Powered by Fueled\nShopify - Powered by Fueled\n- Statsig\nStatsig\n- Synap\nSynap\n- Upollo\nUpollo\n- UserGuiding\nUserGuiding\n- Vero\nVero\n- Voucherify\nVoucherify\n- White Label Loyalty\nWhite Label Loyalty\n- WorkRamp\nWorkRamp\n- Yotpo\nYotpo\n\n## HTTP\nIf Segment doesn\u2019t have a library for your environment, you can send your data directly to theHTTP Tracking API. All of Segment\u2019s other sources and platforms use the HTTP API to work their magic behind the scenes.\n\n## Pixel\nSegment\u2019sPixel Tracking APIlets you track events from environments where you can\u2019t execute code, like tracking email opens.\n\n## Reverse ETL sources\nReverse ETL sources are data warehouses that enable you to useReverse ETLto send data from your warehouse source to your destinations.\nReverse ETL supports these sources:\n- BigQuery\n- Databricks\n- Postgres\n- Redshift\n- Snowflake\nSegment is actively working on adding more sources. If you\u2019d like to request Segment to add a particular source, please note it on thefeedback form.\n\n## Create a source\nTo create a source:\n- Navigate toConnectionsand clickAdd Source.\n- Click the Source you\u2019d like to add.Note:More than 80% of workspaces start by adding their JavaScript website.\n- ClickAdd Source.\n- Enter a name for your source as well as any information on the setup page.\n- ClickAdd Source.\nOnce you\u2019ve created a source, the source is automatically enabled and can immediately receive events. You can review your new events in that source\u2019sDebuggertab.\nSources not connected to an enabled destination are disabled after 14 days\nIf your source is not connected to any destinations or is only connected to disabled destinations, Segment automatically disables this source after 14 days, even if the source is receiving events. Disabled sources will no longer receive data. \nYou can view when Segment disables your destination in your workspace\u2019sAudit TrailasEvent : Source DisabledwithActor : Segment.\nWorkspace members receive an email notification before Segment disables your source so that your team has time to take action.\nIf you would like to prevent this behavior in your workspace, fill outthis Airtable form.\n\n```\nEvent : Source Disabled\n```\n\n```\nActor : Segment\n```\nOne source or multiple sources?\nSegment suggests that you create one source for each type of data you want to collect. For example, you might have one source for all of your website tracking and a different source for any mobile tracking. Creating one source per data type provides the following benefits:\n- Debugger ease of use - mixing libraries/sources on a single API key means you\u2019re heavily reliant on filtering to actually test events\n- Flexibility sending data to different projects - if you want to have different warehouse schemas, analytics projects, etc, having multiple sources would create this separation\n- More control - as your account grows with the number of destinations you enable, having separate sources allows you to have more control\n- A source type cannot be changed after it is created. You must create a new source if you would like to use a different source type.\n\n## Library tiers\nSegment has defined three tiers for libraries: Flagship, Maintenance, and Community. These tiers indicate the level of support, enhancements, and maintenance each library receives from Segment.\nThe criteria for assigning a library to a tier include its overall usage by customers and the availability of newer versions. Here\u2019s how Segment defines each tier:\n- Flagshiplibraries offer the most up-to-date functionality on Segment\u2019s most popular platforms. Segment actively maintains Flagship libraries, which benefit from new feature releases and ongoing development and support.\n- Maintenancelibraries send data as intended but receive no new feature support and only critical maintenance updates from Segment. When possible, Segment recommends using a Flagship version of these libraries.\n- Communitylibraries are neither managed nor updated by Segment. These libraries are available on GitHub under the MIT License for the open-source community to fork or contribute.\nIf a library falls into one of these tiers, you\u2019ll see the tier label at the beginning of the library\u2019s page.\nThis page was last modified: 18 Nov 2024\n\n## Further reading\n\n## Sources Catalog\nA list of the available sources on the Segment platform.\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/connections/sources/#event-streams-sources"
  },
  {
    "title": " Data Collection Best Practices | Segment Documentation",
    "content": "- Home\n- /\n- Protocols\n- /\n- Tracking plan\n- /\n- Data Collection Best Practices\n\n## Data Collection Best Practices\nOn this page\n- Data tracking philosophy\n- Define business objectives\n- Formalize your naming and collection standards\n- Create a tracking plan\n- Identify your users\n- Define your Track events\n- Define your Track event properties\nFiguring out what events to track in Segment can feel overwhelming. Fortunately, Segment has helped thousands of customers through this process and has amassed a ton of resources to help you get started. Whether you\u2019re a small team just getting your app off the ground or a highly complex enterprise with hundreds of stakeholders, these resources can help.\nThat being said, be prepared to invest time defining how you want to track data. Any investment in improving data quality will reap massive rewards, and compound over time by allowing your analytics teams to produce better insights, your marketing teams to run better campaigns and so much more.\n\n## Data tracking philosophy\nTracking is about learning and taking action. Think about what you want to know about your product or customers. Think about what assumptions need to be tested or invalidated. Think about the unknowns. Here are some helpful questions to get started:\n- What kind of events or data will shed light on how your customers use your product?\n- How do people discover, pay for, and start using your product?\n- What are the most important steps in a customer\u2019s journey?\n\n## Define business objectives\nSegment recommends documenting your high-level business objectives. What measurable business outcomes do you want to achieve? Do you want to acquire new customers, activate new signups, drive incremental revenues among your current customer base? You can best answer this question by interviewing stakeholders who would consume the data in your organization.\nWith your business goals documented, you now need to map user actions to those business goals. For example, if one of your goals is to activate new signups, you want to think about which activities are related to a signup. Ask yourself what actions people take before signing up. Do specific actions predict user signups?\nAs an example, you may end up with a list like the following:\n- Ad Campaign Clicked\n- Link Clicked\n- Article Completed\n- Campaign Opened\n- Form Initiated\n- Form Submitted\n- User Signed Up\nWhile these may only represent a portion of the total user actions you will track, focusing on business objectives helps make data collection more manageable.\n\n## Formalize your naming and collection standards\nWith your business objectives documented, it\u2019s time to build a set of standards that you and your team will use when determining what to track. Segment\u2019s most successful customers limit their tracking plan to a minimal number of core events with rich properties that provide context. While some customers find success with the \u201cless is more\u201d philosophy of tracking data, others take a more liberal \u201ctrack more and analyze later\u201d approach. Both options have pros and cons you should take into account when you consider your company\u2019s needs.\nRegardless of your approach, keep the following tips in mind:\n- Pick a casing convention.Segment recommendsTitle Casefor event names andsnake_casefor property names. Make sure you pick a casing standard and enforce it across your events and properties.\nPick a casing convention.Segment recommendsTitle Casefor event names andsnake_casefor property names. Make sure you pick a casing standard and enforce it across your events and properties.\n- Pick an event name structure.As you may have noticed from theSegment specs, Segment uses the Object (Blog Post) + Action (Read) framework for event names. Pick a convention and stick to it.\nPick an event name structure.As you may have noticed from theSegment specs, Segment uses the Object (Blog Post) + Action (Read) framework for event names. Pick a convention and stick to it.\n\n```\nBlog Post\n```\n\n```\nRead\n```\n- Don\u2019t create event names dynamically.Avoid creating events that pull a dynamic value into the event name (likeUser Signed Up (11-01-2019)).\nDon\u2019t create event names dynamically.Avoid creating events that pull a dynamic value into the event name (likeUser Signed Up (11-01-2019)).\n\n```\nUser Signed Up (11-01-2019)\n```\n- Don\u2019t create events to track properties.Avoid adding values to event names that could be a property. Instead, add values a property (like\"blog_post_title\":\"Best Tracking Plans Ever\").\nDon\u2019t create events to track properties.Avoid adding values to event names that could be a property. Instead, add values a property (like\"blog_post_title\":\"Best Tracking Plans Ever\").\n\n```\n\"blog_post_title\":\"Best Tracking Plans Ever\"\n```\n- Don\u2019t create property keys dynamically.Avoid creating property names like\"feature_1\":\"true\",\"feature_2\":\"false\", as these are ambiguous and difficult to analyze.\nDon\u2019t create property keys dynamically.Avoid creating property names like\"feature_1\":\"true\",\"feature_2\":\"false\", as these are ambiguous and difficult to analyze.\n\n```\n\"feature_1\":\"true\"\n```\n\n```\n\"feature_2\":\"false\"\n```\n\n## Create a tracking plan\nAtracking planclarifies what events to track, where those events live in the code base, and why those events are necessary from a business perspective. Prior to Protocols, tracking plans typically lived in a spreadsheet. The tracking plan served as a project management tool to align an entire organization around data as the basis on which to make decisions. The tracking plan helps marketers, product managers, engineers, and analysts get on the same page.\nThe tracking plan has been so instrumental in helping organizations reclaim their own data efforts that Segment invested years of product development to createProtocols. Whatever tool you choose to build your tracking plan, make sure that it represents a single source of truth for your data collection efforts.\n\n## Identify your users\nThe Identify call is important because it updates all records of the user with a set of traits. But how do you choose which traits to include?\nHere is a sample Identify call (withanalytics.js) for Segment:\n\n```\nanalytics.identify({name:'Jane Doe',email:'janedoe@iamawesome.com',login:'janedoe',type:'user',created:'2016-11-07T16:40:52.238Z',});\n```\n\n```\nanalytics.identify({name:'Jane Doe',email:'janedoe@iamawesome.com',login:'janedoe',type:'user',created:'2016-11-07T16:40:52.238Z',});\n```\nThe traits represent dimensions in your data that you can group or pivot on. For example, in the previous sample call, you can easily create cohorts of all types that areusersor accounts created within a time window of your choosing.\n\n```\nusers\n```\n\n## Define your Track events\nAfter you\u2019ve documented yourevent naming and collection standards, it\u2019s time to add events to your tracking plan. Segment recommends starting with fewer events that are directly tied to one of yourbusiness objectives. This focused effort helps avoid a situation where you become overwhelmed by endless possible actions to track. As you get more comfortable, you can add more events to your tracking plan that can answer peripheral questions.\nSegment began by tracking these events:\n- User Signed Up\n- Source Data Sent\n- Subscription Started\nNext, Segment added some of the following peripheral events that helped monitor performance:\n- User Invited;\n When users invite more people to their organization, it\u2019s a good indicator that they\u2019re engaged and serious about using the product. This helps measure organizational growth.\n- Destination Enabled;\n Turning on a destination is a key value driver for Segment\u2019s customers.\n- Debugger Call Expanded;\n When Segment sees that a certain customer has used the live event stream feature a number of times, Segment can contact them to see if they need help debugging.\nFor an ecommerce company, however, the main events might be something like:\n- Account Created\n- Product Added\n- Order Completed\nNote that Segment has a set of \u201creserved\u201d event names specifically for ecommerce, called the Segmentecommerce spec. Check it out to see which events Segments covers and how they are used in our downstream destinations.\nFor a community, on the other hand, an entirely different set of actions indicate engagement, listed in the following pyramid. For example, a community likeGrowthHackersmay want to track actions like:\n- Content Viewed\n- Content Shared\n- Comment Submitted\n- Content Produced\n- Content Curated\nWith this, they\u2019re able to measure key metrics around engagement and understand how users are moving towards their ultimate conversion event: curation content for others. For more information, check outthis articlefrom GrowthHackers about the events they track and why.\n\n## Define your Track event properties\nEach Track call can accept an optional dictionary ofproperties, which can contain any key-value pair you want. Thesepropertiesact as dimensions that allow your end tool to group, filter, and analyze the events. They give you additional detail on broader events.\n\n```\nproperties\n```\n\n```\nproperties\n```\nAs mentioned earlier, events should be generic and high level, whereas properties are specific and detailed. For example, at Segment,Business Tier Workspace Createdworks poorly as an event name. Instead, Segment usedWorkspace Createdwith apropertyofaccount_tierand value ofbusiness:\n\n```\nBusiness Tier Workspace Created\n```\n\n```\nWorkspace Created\n```\n\n```\nproperty\n```\n\n```\naccount_tier\n```\n\n```\nbusiness\n```\n\n```\nanalytics.track('Workspace Created',{account_tier:'business'})\n```\n\n```\nanalytics.track('Workspace Created',{account_tier:'business'})\n```\nSimilar to the traits in the Identify call, the properties provide you a column that you can pivot against or filter on in your analytics tools or allow you to create a cohort of users in email tools.\nAvoid dynamically generatedkey\u2019s in thepropertiesdictionary, as eachkeywill create a new column in your downstream tools. Dynamically generatedkey\u2019s will clutter your tools with data that will make it difficult and confusing to use later.\n\n```\nkey\n```\n\n```\nproperties\n```\n\n```\nkey\n```\n\n```\nkey\n```\nHere is Segment\u2019sLead CapturedTrack call:\n\n```\nLead Captured\n```\n\n```\nanalytics.track(userId,'Lead Captured',{email:'email',location:'header navbar'url:'https://segment.com/'});\n```\n\n```\nanalytics.track(userId,'Lead Captured',{email:'email',location:'header navbar'url:'https://segment.com/'});\n```\nThe high level event isLead Capturedand all of the details are tucked into thepropertiesdictionary. In its downstream tools, Segment can easily look at how many leads were captured in different locations on the Segment website.\n\n```\nproperties\n```\nIf you want to learn more about how properties are used by downstream tools, check outThe Anatomy of a Track Call.\nWant a free consultation from our Customer Success Managers on how they simplify customer\u2019s analytics?Request a demo of Segment.\nThis page was last modified: 28 Feb 2024\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/protocols/tracking-plan/best-practices/"
  },
  {
    "title": " Connect a Tracking Plan | Segment Documentation",
    "content": "- Home\n- /\n- Protocols\n- /\n- Validate\n- /\n- Connect a Tracking Plan\n\n## Connect a Tracking Plan\nProtocols is available as an add-on for Business plans only.See theavailable plans, orcontact Support.\nOn this page\n- Disconnect Source from Tracking Plan\nWith your Tracking Plan complete, it\u2019s time to apply the Tracking Plan to one or more Sources. SelectConnect Sourcefrom the right hand menu for your specific Tracking Plan.\nFrom this menu, you will be redirected to a workflow to select a Source from your workspace. Note that a Source can only have one tracking plan applied to it. Youcan\u2019tselect a Source that already has a Tracking Plan connected to it, but youcanapply a Tracking Plan to multiple sources.\nAfter selecting a Source, you will be shown the consequences of connecting your Tracking Plan.\nIMPORTANT: Make sure to read through the consequences of connecting a source!\n\n## Disconnect Source from Tracking Plan\nTo disconnect the Source from the Tracking Plan, go to the Tracking Plan overview page, locate the column for the tracking plan you want to disconnect, then click the icon under theConnected Sources. In the settings that appear, clickDisconnectnext to the Source you want to disconnect.\nThis page was last modified: 03 Aug 2023\n\n## Need support?\nQuestions? Problems? Need more info? Contact Segment Support for assistance!\n\n## Help improve these docs!\n\n## Was this page helpful?\nThanks for your feedback!\nCan we improve this doc?Send us feedback!\n\n## Get started with Segment",
    "url": "https://segment.com/docs/protocols/validate/connect-sources/"
  }
]